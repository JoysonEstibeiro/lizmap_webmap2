{"version":3,"file":"filter.js","mappings":"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","sources":["webpack://lizmap-web-client/./node_modules/dompurify/dist/purify.es.mjs","webpack://lizmap-web-client/./assets/src/legacy/filter.js"],"sourcesContent":["/*! @license DOMPurify 3.2.4 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.2.4/LICENSE */\n\nconst {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor\n} = Object;\nlet {\n  freeze,\n  seal,\n  create\n} = Object; // eslint-disable-line import/no-mutable-exports\nlet {\n  apply,\n  construct\n} = typeof Reflect !== 'undefined' && Reflect;\nif (!freeze) {\n  freeze = function freeze(x) {\n    return x;\n  };\n}\nif (!seal) {\n  seal = function seal(x) {\n    return x;\n  };\n}\nif (!apply) {\n  apply = function apply(fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\nif (!construct) {\n  construct = function construct(Func, args) {\n    return new Func(...args);\n  };\n}\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayLastIndexOf = unapply(Array.prototype.lastIndexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySplice = unapply(Array.prototype.splice);\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\nconst objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\nconst regExpTest = unapply(RegExp.prototype.test);\nconst typeErrorCreate = unconstruct(TypeError);\n/**\n * Creates a new function that calls the given function with a specified thisArg and arguments.\n *\n * @param func - The function to be wrapped and called.\n * @returns A new function that calls the given function with a specified thisArg and arguments.\n */\nfunction unapply(func) {\n  return function (thisArg) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    return apply(func, thisArg, args);\n  };\n}\n/**\n * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n *\n * @param func - The constructor function to be wrapped and called.\n * @returns A new function that constructs an instance of the given constructor function with the provided arguments.\n */\nfunction unconstruct(func) {\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return construct(func, args);\n  };\n}\n/**\n * Add properties to a lookup table\n *\n * @param set - The set to which elements will be added.\n * @param array - The array containing elements to be added to the set.\n * @param transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n * @returns The modified set with added elements.\n */\nfunction addToSet(set, array) {\n  let transformCaseFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringToLowerCase;\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n        element = lcElement;\n      }\n    }\n    set[element] = true;\n  }\n  return set;\n}\n/**\n * Clean up an array to harden against CSPP\n *\n * @param array - The array to be cleaned.\n * @returns The cleaned version of the array\n */\nfunction cleanArray(array) {\n  for (let index = 0; index < array.length; index++) {\n    const isPropertyExist = objectHasOwnProperty(array, index);\n    if (!isPropertyExist) {\n      array[index] = null;\n    }\n  }\n  return array;\n}\n/**\n * Shallow clone an object\n *\n * @param object - The object to be cloned.\n * @returns A new object that copies the original.\n */\nfunction clone(object) {\n  const newObject = create(null);\n  for (const [property, value] of entries(object)) {\n    const isPropertyExist = objectHasOwnProperty(object, property);\n    if (isPropertyExist) {\n      if (Array.isArray(value)) {\n        newObject[property] = cleanArray(value);\n      } else if (value && typeof value === 'object' && value.constructor === Object) {\n        newObject[property] = clone(value);\n      } else {\n        newObject[property] = value;\n      }\n    }\n  }\n  return newObject;\n}\n/**\n * This method automatically checks if the prop is function or getter and behaves accordingly.\n *\n * @param object - The object to look up the getter function in its prototype chain.\n * @param prop - The property name for which to find the getter function.\n * @returns The getter function found in the prototype chain or a fallback function.\n */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n    object = getPrototypeOf(object);\n  }\n  function fallbackValue() {\n    return null;\n  }\n  return fallbackValue;\n}\n\nconst html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\nconst svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\nconst svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nconst svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\nconst mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']);\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nconst mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\nconst text = freeze(['#text']);\n\nconst html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'popover', 'popovertarget', 'popovertargetaction', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'wrap', 'xmlns', 'slot']);\nconst svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'amplitude', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'exponent', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'intercept', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'slope', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'tablevalues', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\nconst mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\nconst xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n// eslint-disable-next-line unicorn/better-regex\nconst MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nconst ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nconst TMPLIT_EXPR = seal(/\\$\\{[\\w\\W]*/gm); // eslint-disable-line unicorn/better-regex\nconst DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]+$/); // eslint-disable-line no-useless-escape\nconst ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nconst IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nconst IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nconst ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nconst DOCTYPE_NAME = seal(/^html$/i);\nconst CUSTOM_ELEMENT = seal(/^[a-z][.\\w]*(-[.\\w]+)+$/i);\n\nvar EXPRESSIONS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ARIA_ATTR: ARIA_ATTR,\n  ATTR_WHITESPACE: ATTR_WHITESPACE,\n  CUSTOM_ELEMENT: CUSTOM_ELEMENT,\n  DATA_ATTR: DATA_ATTR,\n  DOCTYPE_NAME: DOCTYPE_NAME,\n  ERB_EXPR: ERB_EXPR,\n  IS_ALLOWED_URI: IS_ALLOWED_URI,\n  IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n  MUSTACHE_EXPR: MUSTACHE_EXPR,\n  TMPLIT_EXPR: TMPLIT_EXPR\n});\n\n/* eslint-disable @typescript-eslint/indent */\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\nconst NODE_TYPE = {\n  element: 1,\n  attribute: 2,\n  text: 3,\n  cdataSection: 4,\n  entityReference: 5,\n  // Deprecated\n  entityNode: 6,\n  // Deprecated\n  progressingInstruction: 7,\n  comment: 8,\n  document: 9,\n  documentType: 10,\n  documentFragment: 11,\n  notation: 12 // Deprecated\n};\nconst getGlobal = function getGlobal() {\n  return typeof window === 'undefined' ? null : window;\n};\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param trustedTypes The policy factory.\n * @param purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n * @return The policy created (or null, if Trusted Types\n * are not supported or creating the policy failed).\n */\nconst _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n  if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n    return null;\n  }\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n    suffix = purifyHostElement.getAttribute(ATTR_NAME);\n  }\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      }\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n    return null;\n  }\n};\nconst _createHooksMap = function _createHooksMap() {\n  return {\n    afterSanitizeAttributes: [],\n    afterSanitizeElements: [],\n    afterSanitizeShadowDOM: [],\n    beforeSanitizeAttributes: [],\n    beforeSanitizeElements: [],\n    beforeSanitizeShadowDOM: [],\n    uponSanitizeAttribute: [],\n    uponSanitizeElement: [],\n    uponSanitizeShadowNode: []\n  };\n};\nfunction createDOMPurify() {\n  let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n  const DOMPurify = root => createDOMPurify(root);\n  DOMPurify.version = '3.2.4';\n  DOMPurify.removed = [];\n  if (!window || !window.document || window.document.nodeType !== NODE_TYPE.document || !window.Element) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n    return DOMPurify;\n  }\n  let {\n    document\n  } = window;\n  const originalDocument = document;\n  const currentScript = originalDocument.currentScript;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes\n  } = window;\n  const ElementPrototype = Element.prototype;\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const remove = lookupGetter(ElementPrototype, 'remove');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n  let trustedTypesPolicy;\n  let emptyHTML = '';\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName\n  } = document;\n  const {\n    importNode\n  } = originalDocument;\n  let hooks = _createHooksMap();\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n    CUSTOM_ELEMENT\n  } = EXPRESSIONS;\n  let {\n    IS_ALLOWED_URI: IS_ALLOWED_URI$1\n  } = EXPRESSIONS;\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n  /*\n   * Configure how DOMPurify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {\n    tagNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    attributeNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    allowCustomizedBuiltInElements: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: false\n    }\n  }));\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n  /* Output should be safe even for XML used within HTML and alike.\n   * This means, DOMPurify removes comments when containing risky content.\n   */\n  let SAFE_FOR_XML = true;\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n  let MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n  let HTML_INTEGRATION_POINTS = addToSet({}, ['annotation-xml']);\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE = null;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc = null;\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n  const formElement = document.createElement('form');\n  const isRegexOrFunction = function isRegexOrFunction(testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n  /**\n   * _parseConfig\n   *\n   * @param cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function _parseConfig() {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n    PARSER_MEDIA_TYPE =\n    // eslint-disable-next-line unicorn/prefer-includes\n    SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n    /* Set configuration parameters */\n    ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS') ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR') ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES') ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR') ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR, transformCaseFunc) : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS') ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS, transformCaseFunc) : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS') ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS') ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\n    FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR') ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\n    USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES') ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false; // Default true\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    MATHML_TEXT_INTEGRATION_POINTS = cfg.MATHML_TEXT_INTEGRATION_POINTS || MATHML_TEXT_INTEGRATION_POINTS;\n    HTML_INTEGRATION_POINTS = cfg.HTML_INTEGRATION_POINTS || HTML_INTEGRATION_POINTS;\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, text);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, html$1);\n        addToSet(ALLOWED_ATTR, html);\n      }\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, svg$1);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, svgFilters);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, mathMl$1);\n        addToSet(ALLOWED_ATTR, mathMl);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n    }\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n    if (cfg.TRUSTED_TYPES_POLICY) {\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n      }\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n      }\n      // Overwrite existing TrustedTypes policy.\n      trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n      // Sign local variables required by `sanitize`.\n      emptyHTML = trustedTypesPolicy.createHTML('');\n    } else {\n      // Uninitialized policy, attempt to initialize the internal dompurify policy.\n      if (trustedTypesPolicy === undefined) {\n        trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n      }\n      // If creating the internal policy succeeded sign internal variables.\n      if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      }\n    }\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n    CONFIG = cfg;\n  };\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);\n  const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);\n  /**\n   * @param element a DOM element whose namespace is being checked\n   * @returns Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function _checkValidNamespace(element) {\n    let parent = getParentNode(element);\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template'\n      };\n    }\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n      }\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n    }\n    // For XHTML and XML documents that support custom namespaces\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return true;\n    }\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n  /**\n   * _forceRemove\n   *\n   * @param node a DOM node\n   */\n  const _forceRemove = function _forceRemove(node) {\n    arrayPush(DOMPurify.removed, {\n      element: node\n    });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      getParentNode(node).removeChild(node);\n    } catch (_) {\n      remove(node);\n    }\n  };\n  /**\n   * _removeAttribute\n   *\n   * @param name an Attribute name\n   * @param element a DOM node\n   */\n  const _removeAttribute = function _removeAttribute(name, element) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: element.getAttributeNode(name),\n        from: element\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: element\n      });\n    }\n    element.removeAttribute(name);\n    // We void attribute values for unremovable \"is\" attributes\n    if (name === 'is') {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(element);\n        } catch (_) {}\n      } else {\n        try {\n          element.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n  /**\n   * _initDocument\n   *\n   * @param dirty - a string of dirty markup\n   * @return a DOM, filled with the dirty markup\n   */\n  const _initDocument = function _initDocument(dirty) {\n    /* Create a HTML document */\n    let doc = null;\n    let leadingWhitespace = null;\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n    }\n    const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n    const body = doc.body || doc.documentElement;\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n    }\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n    }\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n  /**\n   * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n   *\n   * @param root The root element or node to start traversing on.\n   * @return The created NodeIterator\n   */\n  const _createNodeIterator = function _createNodeIterator(root) {\n    return createNodeIterator.call(root.ownerDocument || root, root,\n    // eslint-disable-next-line no-bitwise\n    NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION, null);\n  };\n  /**\n   * _isClobbered\n   *\n   * @param element element to check for clobbering attacks\n   * @return true if clobbered, false if safe\n   */\n  const _isClobbered = function _isClobbered(element) {\n    return element instanceof HTMLFormElement && (typeof element.nodeName !== 'string' || typeof element.textContent !== 'string' || typeof element.removeChild !== 'function' || !(element.attributes instanceof NamedNodeMap) || typeof element.removeAttribute !== 'function' || typeof element.setAttribute !== 'function' || typeof element.namespaceURI !== 'string' || typeof element.insertBefore !== 'function' || typeof element.hasChildNodes !== 'function');\n  };\n  /**\n   * Checks whether the given object is a DOM node.\n   *\n   * @param value object to check whether it's a DOM node\n   * @return true is object is a DOM node\n   */\n  const _isNode = function _isNode(value) {\n    return typeof Node === 'function' && value instanceof Node;\n  };\n  function _executeHooks(hooks, currentNode, data) {\n    arrayForEach(hooks, hook => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  }\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   * @param currentNode to check for permission to exist\n   * @return true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function _sanitizeElements(currentNode) {\n    let content = null;\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeElements, currentNode, null);\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n    /* Execute a hook if present */\n    _executeHooks(hooks.uponSanitizeElement, currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS\n    });\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove any occurrence of processing instructions */\n    if (currentNode.nodeType === NODE_TYPE.progressingInstruction) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove any kind of possibly harmful comments */\n    if (SAFE_FOR_XML && currentNode.nodeType === NODE_TYPE.comment && regExpTest(/<[/\\w]/g, currentNode.data)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {\n          return false;\n        }\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {\n          return false;\n        }\n      }\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n          for (let i = childCount - 1; i >= 0; --i) {\n            const childClone = cloneNode(childNodes[i], true);\n            childClone.__removalCount = (currentNode.__removalCount || 0) + 1;\n            parentNode.insertBefore(childClone, getNextSibling(currentNode));\n          }\n        }\n      }\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Make sure that older browsers don't get fallback-tag mXSS */\n    if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === NODE_TYPE.text) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        content = stringReplace(content, expr, ' ');\n      });\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, {\n          element: currentNode.cloneNode()\n        });\n        currentNode.textContent = content;\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeElements, currentNode, null);\n    return false;\n  };\n  /**\n   * _isValidAttribute\n   *\n   * @param lcTag Lowercase tag name of containing element.\n   * @param lcName Lowercase attribute name.\n   * @param value Attribute value.\n   * @return Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n      return false;\n    }\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n      // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n      // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n      _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||\n      // Alternative, second condition checks if it's an `is`-attribute, AND\n      // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {\n      return false;\n    } else ;\n    return true;\n  };\n  /**\n   * _isBasicCustomElement\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   *\n   * @param tagName name of the tag of the node to sanitize\n   * @returns Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n   */\n  const _isBasicCustomElement = function _isBasicCustomElement(tagName) {\n    return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT);\n  };\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param currentNode to sanitize\n   */\n  const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeAttributes, currentNode, null);\n    const {\n      attributes\n    } = currentNode;\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes || _isClobbered(currentNode)) {\n      return;\n    }\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n      forceKeepAttr: undefined\n    };\n    let l = attributes.length;\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      const attr = attributes[l];\n      const {\n        name,\n        namespaceURI,\n        value: attrValue\n      } = attr;\n      const lcName = transformCaseFunc(name);\n      let value = name === 'value' ? attrValue : stringTrim(attrValue);\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHooks(hooks.uponSanitizeAttribute, currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n      /* Work around a security issue with comments inside attributes */\n      if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\\/(style|title)/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n      /* Work around a security issue in jQuery 3.0 */\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          value = stringReplace(value, expr, ' ');\n        });\n      }\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n      /* Handle attributes that require Trusted Types */\n      if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n        if (namespaceURI) ; else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML':\n              {\n                value = trustedTypesPolicy.createHTML(value);\n                break;\n              }\n            case 'TrustedScriptURL':\n              {\n                value = trustedTypesPolicy.createScriptURL(value);\n                break;\n              }\n          }\n        }\n      }\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n        if (_isClobbered(currentNode)) {\n          _forceRemove(currentNode);\n        } else {\n          arrayPop(DOMPurify.removed);\n        }\n      } catch (_) {}\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeAttributes, currentNode, null);\n  };\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n    let shadowNode = null;\n    const shadowIterator = _createNodeIterator(fragment);\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeShadowDOM, fragment, null);\n    while (shadowNode = shadowIterator.nextNode()) {\n      /* Execute a hook if present */\n      _executeHooks(hooks.uponSanitizeShadowNode, shadowNode, null);\n      /* Sanitize tags and elements */\n      _sanitizeElements(shadowNode);\n      /* Check attributes next */\n      _sanitizeAttributes(shadowNode);\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeShadowDOM, fragment, null);\n  };\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty) {\n    let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let body = null;\n    let importedNode = null;\n    let currentNode = null;\n    let returnNode = null;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString === 'function') {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      } else {\n        throw typeErrorCreate('toString is not a function');\n      }\n    }\n    /* Return dirty HTML if DOMPurify cannot run */\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === NODE_TYPE.element && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n      // eslint-disable-next-line unicorn/prefer-includes\n      dirty.indexOf('<') === -1) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      }\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n    /* Get node iterator */\n    const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n    /* Now start iterating over the created document */\n    while (currentNode = nodeIterator.nextNode()) {\n      /* Sanitize tags and elements */\n      _sanitizeElements(currentNode);\n      /* Check attributes next */\n      _sanitizeAttributes(currentNode);\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n    }\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n      return returnNode;\n    }\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n    /* Serialize doctype if allowed */\n    if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n      serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        serializedHTML = stringReplace(serializedHTML, expr, ' ');\n      });\n    }\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n  };\n  DOMPurify.setConfig = function () {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n  DOMPurify.removeHook = function (entryPoint, hookFunction) {\n    if (hookFunction !== undefined) {\n      const index = arrayLastIndexOf(hooks[entryPoint], hookFunction);\n      return index === -1 ? undefined : arraySplice(hooks[entryPoint], index, 1)[0];\n    }\n    return arrayPop(hooks[entryPoint]);\n  };\n  DOMPurify.removeHooks = function (entryPoint) {\n    hooks[entryPoint] = [];\n  };\n  DOMPurify.removeAllHooks = function () {\n    hooks = _createHooksMap();\n  };\n  return DOMPurify;\n}\nvar purify = createDOMPurify();\n\nexport { purify as default };\n//# sourceMappingURL=purify.es.mjs.map\n","/**\n * @module legacy/filter.js\n * @name Filter\n * @copyright 2023 3Liz\n * @license MPL-2.0\n */\n\nimport DOMPurify from 'dompurify';\n\nvar lizLayerFilterTool = function () {\n\n    lizMap.events.on({\n        'uicreated': function () {\n\n            // If filterConfig is empty, there is no filter set => hide filter tool\n            if (!globalThis['filterConfig'] || (globalThis['filterConfig'].constructor === Object && Object.keys(globalThis['filterConfig']).length === 0)) {\n                $('#mapmenu li.filter.nav-dock').addClass('hide');\n                return true;\n            }\n\n\n            // Compute the HTML container for the form\n            /**\n             *\n             */\n            function getLayerFilterDockRoot() {\n                var html = '';\n\n                html += '<div class=\"menu-content\">';\n                // Add combo box to select the layer\n                html += '<select id=\"liz-filter-layer-selector\">';\n                var flayers = {};\n                for (var o in globalThis['filterConfig']) {\n                    var conf = globalThis['filterConfig'][o];\n                    if (!(conf.layerId in flayers)) {\n                        // Get layer\n                        var layerId = conf.layerId;\n                        var lconfig_get = lizMap.getLayerConfigById(layerId);\n                        if (!lconfig_get)\n                            continue;\n                        var lname = lconfig_get[0];\n                        var lconf = lconfig_get[1];\n                        var displayName = lname;\n                        if ('title' in lconf && lconf.title != '') {\n                            displayName = lconf.title;\n                        }\n                        html += '<option value=\"' + layerId + '\">' + displayName + '</option>';\n                        flayers[layerId] = true;\n                    }\n                }\n                html += '</select></br>';\n\n                // Add total feature counter\n                var total = 0\n                html += '<b><span id=\"liz-filter-item-layer-total-count\">' + total + '</span> ' + lizDict['filter.label.features'] + '</b>';\n\n                // Add zoom link\n                html += '<br/><button id=\"liz-filter-zoom\" class=\"btn btn-mini btn-primary\" title=\"' + lizDict['filter.btn.zoom.title'] + '\">' + lizDict['filter.btn.zoom.label'] + '</button>';\n\n                // Add export button\n                if (lizMap.getVectorLayerResultFormat().includes('ODS')) {\n                    html += '&nbsp;&nbsp;<button id=\"liz-filter-export\" class=\"btn btn-mini btn-primary\" title=\"' + lizDict['filter.btn.export.title'] + '\">' + lizDict['filter.btn.export.label'] + '</button>';\n                }\n\n                // Add unfilter link\n                html += '&nbsp;&nbsp;<button id=\"liz-filter-unfilter\" class=\"btn btn-mini btn-primary\" title=\"' + lizDict['filter.btn.reset.title'] + '\">' + lizDict['filter.btn.reset.label'] + '</button>';\n\n                html += '</div>';\n\n                // Add tree\n                html += '<div style=\"padding:10px 10px;\" class=\"tree menu-content\"></div>';\n\n                return html;\n            }\n\n            /**\n             *\n             */\n            function addLayerFilterToolInterface() {\n                if (!globalThis['filterConfig'] || (globalThis['filterConfig'].constructor === Object && Object.keys(globalThis['filterConfig']).length === 0)) {\n                    return false;\n                }\n\n                // Build interface html code\n                // Add dock\n                var html = getLayerFilterDockRoot();\n                $('#filter-content').html(html);\n\n                // Get 1st layer found as default layer\n                var layerId = globalThis['filterConfig'][0]['layerId'];\n                globalThis['filterConfigData'].layerId = layerId;\n\n                // Activate the unfilter link\n                $('#liz-filter-unfilter').click(function () {\n                    // Remove filter\n                    deactivateFilter();\n                    return false;\n                });\n\n                // Activate the zoom button\n                $('#liz-filter-zoom').click(function () {\n                    zoomToFeatures()\n                    return false;\n                });\n\n                // Activate the export button\n                if (lizMap.getVectorLayerResultFormat().includes('ODS')) {\n                    $('#liz-filter-export').click(function () {\n                        lizMap.config.layers[globalThis['filterConfigData'].layerName].request_params['filter'] = globalThis['filterConfigData'].filter;\n                        lizMap.exportVectorLayer(globalThis['filterConfigData'].layerName, 'ODS', false);\n                        delete lizMap.config.layers[globalThis['filterConfigData'].layerName].request_params['filter'];\n                        return false;\n                    });\n                }\n\n                // Add tooltip\n                $('#filter-content [title]').tooltip();\n            }\n\n            // Launch the form filter feature\n            /**\n             *\n             * @param layerId\n             */\n            function launchLayerFilterTool(layerId) {\n\n                // Get layer name\n                var getConfig = lizMap.getLayerConfigById(layerId);\n                if (!getConfig)\n                    return false;\n                var layerName = getConfig[0];\n                globalThis['filterConfigData'].layerName = layerName;\n\n                // Remove previous field inputs\n                $('div.liz-filter-field-box').remove();\n\n                // Get html and add it\n                getLayerFilterForm();\n\n                // Limit dock size\n                adaptLayerFilterSize();\n\n                // Get Feature count\n                getFeatureCount();\n\n                // Set default zoom extent setZoomExtent\n                // Only if first query works\n                // Which means PHP spatialite extension is activated\n                if ($('#liz-filter-zoom').is(\":visible\")) {\n                    setZoomExtent();\n                }\n            }\n\n            // Get the HTML form\n            // By getting form element for each field\n            /**\n             *\n             */\n            function getLayerFilterForm() {\n                var layerId = globalThis['filterConfigData'].layerId;\n\n                // Sort attribute layers as given by creation order in Lizmap plugin\n                var formFilterLayersSorted = [];\n                for (var o in globalThis['filterConfig']) {\n                    var field_item = globalThis['filterConfig'][o];\n                    if ('title' in field_item && field_item.layerId == layerId) {\n                        formFilterLayersSorted.push(field_item);\n                        $(\"#filter div.tree\").append('<div id=\"filter-field-order' + String(field_item.order) + '\"></div>');\n                    }\n                }\n\n                // Add form fields\n                for (var conf in formFilterLayersSorted) {\n\n                    var field_item = formFilterLayersSorted[conf];\n                    getFormFieldInput(field_item);\n                }\n            }\n\n            // Get the HTML form element for a specific field\n            /**\n             *\n             * @param field_item\n             */\n            function getFormFieldInput(field_item) {\n                var field_config = globalThis['filterConfig'][field_item.order];\n\n                // unique values\n                if (field_config['type'] == 'uniquevalues') {\n                    return uniqueValuesFormInput(field_item);\n                }\n\n                // date\n                if (field_config['type'] == 'date') {\n                    return dateFormInput(field_item);\n                }\n\n                // numeric\n                if (field_config['type'] == 'numeric') {\n                    return numericFormInput(field_item);\n                }\n\n                // text\n                if (field_config['type'] == 'text') {\n                    return textFormInput(field_item);\n                }\n\n                return '';\n            }\n\n            /**\n             *\n             * @param field_item\n             */\n            function getFormFieldHeader(field_item) {\n                var html = '';\n                html += '<div class=\"liz-filter-field-box\" id=\"liz-filter-box-';\n                html += lizMap.cleanName(field_item.title);\n                html += '\">';\n                var flabel = field_item.title;\n                html += '<span style=\"font-weight:bold;\">' + flabel + '</span>';\n                html += '<button class=\"btn btn-primary btn-mini pull-right liz-filter-reset-field\" title=\"' + lizDict['filter.btn.reset.title'] + '\" value=\"' + field_item.order + '\">x</button>';\n                html += '<p>';\n\n                return html;\n            }\n\n            /**\n             *\n             */\n            function getFormFieldFooter() {\n                var html = '';\n                html += '</p>';\n                html += '</div>';\n\n                return html;\n            }\n\n            /**\n             *\n             * @param result\n             */\n            function checkResult(result) {\n                if (!result) {\n                    return false;\n                }\n                if ('status' in result && result['status'] == 'error') {\n                    console.log(result.title + ': ' + result.detail);\n                    return false;\n                }\n                return true;\n            }\n\n            // Get the HTML form element for the date field type\n            /**\n             *\n             * @param field_item\n             */\n            function dateFormInput(field_item) {\n                // For LWC >=3.7, the min_date and max_date\n                // are replaced by start_field & end_field\n                var start_field_property = 'min_date';\n                var end_field_property = 'max_date';\n                let lizmap_plugin_metadata = lizMap.getLizmapDesktopPluginMetadata();\n                if (lizmap_plugin_metadata.lizmap_web_client_target_version >= 30700) {\n                    start_field_property = 'start_field';\n                    end_field_property = 'end_field';\n                }\n                // end_field = start_field when undefined\n                const end_field = (end_field_property in field_item) ? field_item[end_field_property] : field_item[start_field_property];\n\n                var sdata = {\n                    request: 'getMinAndMaxValues',\n                    layerId: field_item.layerId,\n                    fieldname: field_item[start_field_property] + ',' + end_field,\n                    filter: ''\n                };\n                $.get(globalThis['filterConfigData'].url, sdata, function (result) {\n                    if (!checkResult(result)) {\n                        return false;\n                    }\n\n                    for (var a in result) {\n                        var feat = result[a];\n                        // Add minutes to time zone offset when not present (needed for Firefox).\n                        if (feat['min'][feat['min'].length - 3] === '+') {\n                            feat['min'] = feat['min'] + ':00';\n                        }\n                        if (feat['max'][feat['max'].length - 3] === '+') {\n                            feat['max'] = feat['max'] + ':00';\n                        }\n                        var dmin = formatDT(new Date(feat['min']), 'yy-mm-dd');\n                        var dmax = formatDT(new Date(feat['max']), 'yy-mm-dd');\n                        globalThis['filterConfig'][field_item.order]['min'] = dmin;\n                        globalThis['filterConfig'][field_item.order]['max'] = dmax;\n                    }\n\n                    var html = '';\n                    html += getFormFieldHeader(field_item);\n                    html += '<span style=\"white-space:nowrap\">';\n                    html += '<input id=\"liz-filter-field-min-date' + lizMap.cleanName(field_item.title) + '\" class=\"liz-filter-field-date\" value=\"' + field_item['min'] + '\" style=\"width:100px;\">';\n                    html += '<input id=\"liz-filter-field-max-date' + lizMap.cleanName(field_item.title) + '\" class=\"liz-filter-field-date\" value=\"' + field_item['max'] + '\" style=\"width:100px;\">';\n                    html += '</span>';\n\n                    // http://jsfiddle.net/Lcrsd3jt/45/\n                    // pour avoir un date et time picker, see https://github.com/trentrichardson/jQuery-Timepicker-Addon\n                    html += '<div id=\"liz-filter-datetime-range' + lizMap.cleanName(field_item.title) + '\">';\n                    html += '    <div>';\n                    html += '        <div id=\"liz-filter-slider-range' + lizMap.cleanName(field_item.title) + '\"></div>';\n                    html += '    </div>';\n                    html += '</div>';\n\n                    html += getFormFieldFooter(field_item);\n                    $(\"#filter-field-order\" + String(field_item.order)).append(html);\n                    $(\"#filter input.liz-filter-field-date\").datepicker({\n                        dateFormat: 'yy-mm-dd',\n                        changeMonth: true,\n                        changeYear: true,\n                        minDate: new Date(feat['min']),\n                        maxDate: new Date(feat['max'])\n                    });\n\n                    addFieldEvents(field_item);\n\n                }, 'json');\n\n            }\n\n            // Get the HTML form element for the numeric field type\n            /**\n             *\n             * @param field_item\n             */\n            function numericFormInput(field_item) {\n                // Since LWC >=3.7, we can configure a field with the end value\n                var fieldNames = '';\n                let lizmap_plugin_metadata = lizMap.getLizmapDesktopPluginMetadata();\n                if (lizmap_plugin_metadata.lizmap_web_client_target_version >= 30700) {\n                    fieldNames += field_item.start_field;\n                    if ('end_field' in field_item && field_item.end_field != '') {\n                        fieldNames += ',' + field_item.end_field;\n                    }\n                } else {\n                    fieldNames += field_item.field;\n                }\n\n                var sdata = {\n                    request: 'getMinAndMaxValues',\n                    layerId: field_item.layerId,\n                    fieldname: fieldNames,\n                    filter: ''\n                };\n                $.get(globalThis['filterConfigData'].url, sdata, function (result) {\n                    if (!checkResult(result)) {\n                        return false;\n                    }\n\n                    for (var a in result) {\n                        var feat = result[a];\n                        globalThis['filterConfig'][field_item.order]['min'] = Number(feat['min']);\n                        globalThis['filterConfig'][field_item.order]['max'] = Number(feat['max']);\n                    }\n\n                    var html = '';\n                    html += getFormFieldHeader(field_item);\n                    html += '<span style=\"white-space:nowrap\">';\n                    html += '<input id=\"liz-filter-field-min-numeric' + lizMap.cleanName(field_item.title) + '\" type=\"number\" value=\"' + field_item['min'] + '\" step=\"' + 1 + '\" min=\"' + field_item['min'] + '\" max=\"' + field_item['max'] + '\" class=\"liz-filter-field-numeric\" style=\"width:100px;\">';\n                    html += '<input id=\"liz-filter-field-max-numeric' + lizMap.cleanName(field_item.title) + '\" type=\"number\" value=\"' + field_item['max'] + '\" step=\"' + field_item['step'] + '\" min=\"' + field_item['min'] + '\" max=\"' + field_item['max'] + '\" class=\"liz-filter-field-numeric\" style=\"width:100px;\">';\n                    html += '</span>';\n\n                    html += '<div id=\"liz-filter-numeric-range' + lizMap.cleanName(field_item.title) + '\">';\n                    html += '    <div>';\n                    html += '        <div id=\"liz-filter-slider-range' + lizMap.cleanName(field_item.title) + '\"></div>';\n                    html += '    </div>';\n                    html += '</div>';\n\n                    html += getFormFieldFooter(field_item);\n\n                    $(\"#filter-field-order\" + String(field_item.order)).append(html);\n\n                    addFieldEvents(field_item);\n\n                }, 'json');\n\n            }\n\n            // Get the HTML form element for the text field type\n            /**\n             *\n             * @param field_item\n             */\n            function textFormInput(field_item) {\n                // Ajout des données d'autocompletion\n                var field = field_item['field'];\n                var sdata = {\n                    request: 'getUniqueValues',\n                    layerId: field_item.layerId,\n                    fieldname: field,\n                    filter: ''\n                };\n                $.get(globalThis['filterConfigData'].url, sdata, function (result) {\n                    if (!checkResult(result)) {\n                        return false;\n                    }\n\n                    var autocompleteData = [];\n                    for (var a in result) {\n                        var feat = result[a];\n                        if (feat['v'] === null || !feat['v'] || (typeof feat['v'] === 'string' && feat['v'].trim() === ''))\n                            continue;\n                        autocompleteData.push(feat['v']);\n                    }\n\n                    var html = '';\n                    html += getFormFieldHeader(field_item);\n                    html += '<div style=\"width: 100%;\">'\n                    html += '<input id=\"liz-filter-field-text' + lizMap.cleanName(field_item.title) + '\" class=\"liz-filter-field-text\" value=\"\" title=\"' + lizDict['filter.input.text.title'] + '\" placeholder=\"' + lizDict['filter.input.text.placeholder'] + '\">';\n                    html += '</div>'\n                    html += getFormFieldFooter(field_item);\n\n                    $(\"#filter-field-order\" + String(field_item.order)).append(html);\n                    addFieldEvents(field_item);\n\n                    $(\"#liz-filter-field-text\" + lizMap.cleanName(field_item.title)).autocomplete({\n                        source: autocompleteData,\n                        autoFocus: false, // do not autofocus, because this prevents from searching with LIKE\n                        delay: 200,\n                        minLength: 2,\n                        select: function (event, ui) {\n                            $(this).val(ui.item.value);\n                            $(this).change();\n                        }\n                    });\n                }, 'json');\n            }\n\n            // Get the HTML form element for the uniqueValues field type\n            // possible format: checkboxes or select\n            /**\n             *\n             * @param field_item\n             */\n            function uniqueValuesFormInput(field_item) {\n\n                // Get data\n                const fetchRequests = [];\n\n                // Get unique values data (and counters)\n                var sdata = {\n                    request: 'getUniqueValues',\n                    layerId: field_item.layerId,\n                    fieldname: field_item.field,\n                    filter: ''\n                };\n\n                fetchRequests.push(\n                    fetch(globalThis['filterConfigData'].url + '&' + new URLSearchParams(sdata)).then(response => {\n                        return response.json();\n                    })\n                );\n\n                // Get keys/values if defined\n                let keyValues = {};\n\n                const layerName = lizMap.getLayerConfigById(field_item.layerId)[0];\n                const fieldConf = lizMap.keyValueConfig[layerName]?.[field_item.field];\n                if (fieldConf) {\n                    if (fieldConf.type == 'ValueMap') {\n                        keyValues = fieldConf.data;\n                    } else {\n                        // Get source layer typename from it ID\n                        let getSourceLayer = lizMap.getLayerConfigById(fieldConf.source_layer_id);\n                        if( getSourceLayer && getSourceLayer.length == 2) {\n                            const sourceLayerConfig = getSourceLayer[1];\n                            const source_typename = sourceLayerConfig?.shortname || sourceLayerConfig?.typename || sourceLayerConfig?.name;\n                            if (source_typename != undefined) {\n                                fetchRequests.push(\n                                    lizMap.mainLizmap.wfs.getFeature({\n                                        TYPENAME: source_typename,\n                                        PROPERTYNAME: fieldConf.code_field + ',' + fieldConf.label_field,\n                                        // we must not use null for exp_filter but '' if no filter is active\n                                        EXP_FILTER: fieldConf.exp_filter ? fieldConf.exp_filter : ''\n                                    })\n                                );\n                            }\n                        }\n\n                    }\n                }\n\n                Promise.all(fetchRequests).then(responses => {\n                    const [result, rawKeyValues] = responses;\n\n                    if (!checkResult(result)) {\n                        return false;\n                    }\n\n                    if (rawKeyValues) {\n                        rawKeyValues.features.forEach(feature => keyValues[feature.properties[fieldConf.code_field]] = feature.properties[fieldConf.label_field]);\n                    }\n\n                    // Build UI\n                    var html = '';\n                    html += getFormFieldHeader(field_item);\n\n                    if (field_item.format == 'select') {\n                        html += '<select id=\"liz-filter-field-' + lizMap.cleanName(field_item.title) + '\" class=\"liz-filter-field-select\">';\n                        html += '<option value=\"\"> --- </option>';\n                        html += '</select>';\n                    }\n                    html += getFormFieldFooter(field_item);\n\n                    $(\"#filter-field-order\" + String(field_item.order)).append(html);\n\n                    if (!('items' in globalThis['filterConfig'][field_item.order])) {\n                        globalThis['filterConfig'][field_item.order]['items'] = {};\n                    }\n\n                    for (const feat of result) {\n                        globalThis['filterConfig'][field_item.order]['items'][DOMPurify.sanitize(feat['v'])] = feat['c'];\n                    }\n\n                    var dhtml = '';\n                    var fkeys = Object.keys(\n                        globalThis['filterConfig'][field_item.order]['items']\n                    );\n\n                    // Order fkeys alphabetically (which means sort checkboxes for each field)\n                    fkeys.sort(function (a, b) {\n                        return a.localeCompare(b);\n                    });\n\n                    for (const f_val of fkeys) {\n                        // Replace key by value if defined\n                        var label = keyValues.hasOwnProperty(f_val) ? keyValues[f_val] : f_val;\n\n                        if (field_item.format == 'select') {\n                            dhtml += `<option value=\"${lizMap.cleanName(f_val)}\">${label}</option>`;\n                        } else {\n                            var inputId = 'liz-filter-field-' + lizMap.cleanName(field_item.title) + '-' + lizMap.cleanName(f_val);\n                            dhtml += `<label class=\"checkbox\"><input id=\"${inputId}\" class=\"liz-filter-field-value\" type=\"checkbox\" value=\"${lizMap.cleanName(f_val)}\">${label}</label>`;\n                        }\n                    }\n                    var id = 'liz-filter-box-' + lizMap.cleanName(field_item.title);\n                    if (field_item.format == 'select') {\n                        $('#' + id + ' select').append(dhtml);\n                    } else {\n                        $('#' + id + ' p').append(dhtml);\n                    }\n\n                    addFieldEvents(field_item);\n                });\n            }\n\n            // Generate filter string for a field\n            // Depending on the selected inputs\n            /**\n             *\n             * @param field_item\n             */\n            function setFormFieldFilter(field_item) {\n                if (globalThis['filterConfigData'].deactivated) {\n                    return false;\n                }\n\n                // Set filter depending on field type\n                // Unique values\n                if (field_item.type == 'uniquevalues') {\n                    setUniqueValuesFilter(field_item);\n                }\n\n                // Dates\n                if (field_item.type == 'date') {\n                    setDateFilter(field_item);\n                }\n\n                // Numeric\n                if (field_item.type == 'numeric') {\n                    setNumericFilter(field_item);\n                }\n\n                // Texte\n                if (field_item.type == 'text') {\n                    setTextFilter(field_item);\n                }\n\n                // Update global form filter\n                activateFilter();\n            }\n\n            // Set the filter for the uniqueValues field type\n            /**\n             *\n             * @param field_item\n             */\n            function setUniqueValuesFilter(field_item) {\n                var field_config = globalThis['filterConfig'][field_item.order]\n\n                // First loop through each field value\n                // And check if the item (e.g checkbox) is selected or not\n                globalThis['filterConfig'][field_item.order]['data'] = {}\n                var allchecked = true;\n                var nonechecked = true;\n                if (field_config.format == 'select') {\n                    var selectId = '#liz-filter-field-' + lizMap.cleanName(field_item.title);\n                    var selectVal = $(selectId).val();\n                    var clist = [];\n                    for (var f_val in globalThis['filterConfig'][field_item.order]['items']) {\n                        // Get checked status\n                        if (Array.isArray(selectVal)) {\n                            var achecked = selectVal.includes(lizMap.cleanName(f_val));\n                        } else {\n                            var achecked = (selectVal == lizMap.cleanName(f_val));\n                        }\n                        if (!achecked) {\n                            allchecked = false;\n                        } else {\n                            nonechecked = false;\n                            clist.push(f_val.replace(/'/g, \"''\"));\n                        }\n                        globalThis['filterConfig'][field_item.order]['data'][f_val] = achecked;\n                    }\n                }\n                if (field_config.format == 'checkboxes') {\n                    var clist = [];\n                    for (var f_val in globalThis['filterConfig'][field_item.order]['items']) {\n                        // Get checked status\n                        var inputId = '#liz-filter-field-' + lizMap.cleanName(field_item.title) + '-' + lizMap.cleanName(f_val);\n                        var achecked = $(inputId).is(':checked');\n                        if (!achecked) {\n                            allchecked = false;\n                        } else {\n                            nonechecked = false;\n                            clist.push(f_val.replace(/'/g, \"''\"));\n                        }\n                        globalThis['filterConfig'][field_item.order]['data'][f_val] = achecked;\n                    }\n                }\n                globalThis['filterConfig'][field_item.order]['allchecked'] = allchecked;\n                globalThis['filterConfig'][field_item.order]['nonechecked'] = nonechecked;\n                globalThis['filterConfig'][field_item.order]['selected'] = clist;\n                var filter = null;\n                var field = field_item['field'];\n                if (clist.length) {\n                    // Check if the value '' is present. If so, we should also search for NULL\n                    let hasEmptyValue = false;\n\n                    // If there is a separator in the field values, and we need\n                    // to explode the values into single items, we need to use\n                    // LIKE statements joined with OR\n                    if ('splitter' in field_item && field_item['splitter'] != '') {\n\n                        filter = ' ( ';\n                        var sep = '';\n                        var lk = 'LIKE';\n\n                        // For a PostgreSQL layer, we can use ILIKE instead of LIKE\n                        // for WMS filtered requests to be case insensitive\n                        if (field_item.provider == 'postgres') {\n                            lk = 'ILIKE';\n                        }\n                        for (var i in clist) {\n                            var cval = clist[i];\n                            // If cval is '', we should store this information\n                            if (cval === '') {\n                                hasEmptyValue = true;\n                            }\n\n                            // Create the filter for this value\n                            filter += sep + '\"' + field + '\"' + \" \" + lk + \" '%\" + cval + \"%' \";\n                            // We need to use a OR to display features with\n                            // 'Theatre, Culture' or 'Theatre', or 'Culture, Information'\n                            // When 'Theatre' and 'Culture' are checked in the list\n                            sep = ' OR ';\n                        }\n                        // Add NULL values\n                        if (hasEmptyValue) {\n                            filter += ` OR \"${field}\" IS NULL `;\n                        }\n                        filter += ' ) ';\n                    } else {\n                        // Search for empty values (to add the rule OR \"field\" IS NULL )\n                        if (clist.includes('')) {\n                            hasEmptyValue = true;\n                        }\n                        // If there is not separator in the field values, use IN to get all features\n                        // corresponding to one of the checked values\n                        filter = '\"' + field + '\"' + \" IN ( '\" + clist.join(\"' , '\") + \"' ) \";\n                        // Add NULL values\n                        if (hasEmptyValue) {\n                            filter = ` ( ${filter} OR \"${field}\" IS NULL ) `;\n                        }\n                    }\n                }\n                globalThis['filterConfig'][field_item.order]['filter'] = filter;\n\n            }\n\n            // Set the filter for the Date type\n            /**\n             *\n             * @param field_item\n             */\n            function setDateFilter(field_item) {\n                var filters = [];\n\n                // get input values\n                var min_id = '#liz-filter-field-min-date' + lizMap.cleanName(field_item.title);\n                var max_id = '#liz-filter-field-max-date' + lizMap.cleanName(field_item.title);\n                var min_val = $(min_id).val().trim();\n                var max_val = $(max_id).val().trim();\n\n                // Do nothing if min and max values entered equals the field min and max possible values\n                if (min_val == field_item['min'] && max_val == field_item['max']) {\n                    globalThis['filterConfig'][field_item.order]['filter'] = null;\n                    return true;\n                }\n\n                // fields\n                // Since LWC >=3.7, min_date & max_date\n                // are replaced by start_field & end_field\n                var start_field_property = 'min_date';\n                var end_field_property = 'max_date';\n                let lizmap_plugin_metadata = lizMap.getLizmapDesktopPluginMetadata();\n                if (lizmap_plugin_metadata.lizmap_web_client_target_version >= 30700) {\n                    start_field_property = 'start_field';\n                    end_field_property = 'end_field';\n                }\n                const startField = field_item[start_field_property]\n                const endField = (end_field_property in field_item) ? field_item[end_field_property] : field_item[start_field_property];\n\n                // min date filter\n                if (min_val && Date.parse(min_val)) {\n                    filters.push('( \"' + startField + '\"' + \" >= '\" + min_val + \"'\" + \" OR \" + ' \"' + endField + '\"' + \" >= '\" + min_val + \"' )\");\n                } else {\n                    min_val = null;\n                }\n\n                // max date filter\n                if (max_val && Date.parse(max_val)) {\n                    // Add one day to the max values as we cannot select hours\n                    // This allow to select features with the max value. Eg a feature with 2023-10-25 12:20:01\n                    // must be selected if max date is 2023-10-25 wich is indeed 2023-10-25 00:00:00\n                    let max_val_new = new Date(Date.parse(max_val));\n                    // Add a day\n                    max_val_new.setDate(max_val_new.getDate() + 1);\n                    // Truncate to keep only date & transform into string\n                    let max_val_new_str = formatDT(max_val_new, 'yy-mm-dd');\n                    // We use strict < instead of <= because we just add a day to the max value\n                    filters.push('( \"' + startField + '\"' + \" < '\" + max_val_new_str + \"'\" + \" OR \" + ' \"' + endField + '\"' + \" < '\" + max_val_new_str + \"' )\");\n                } else {\n                    max_val = null;\n                }\n\n                var filter = null;\n                if (filters.length) {\n                    var filter = ' ( ';\n                    filter += filters.join(' AND ');\n                    filter += ' ) ';\n                }\n                globalThis['filterConfig'][field_item.order]['data'] = {\n                    'min_date': min_val,\n                    'max_date': max_val\n                };\n                globalThis['filterConfig'][field_item.order]['filter'] = filter;\n\n            }\n\n            // Set the filter for the Numeric type\n            /**\n             *\n             * @param field_item\n             */\n            function setNumericFilter(field_item) {\n                var filters = [];\n\n                // get input values\n                var min_id = '#liz-filter-field-min-numeric' + lizMap.cleanName(field_item.title);\n                var max_id = '#liz-filter-field-max-numeric' + lizMap.cleanName(field_item.title);\n                var min_val = $(min_id).val().trim();\n                var max_val = $(max_id).val().trim();\n\n                // Do nothing if min and max values entered equals the field min and max possible values\n                if (min_val == field_item['min'] && max_val == field_item['max']) {\n                    globalThis['filterConfig'][field_item.order]['filter'] = null;\n                    return true;\n                }\n\n                // fields\n                var startField = '';\n                var endField = null;\n\n                // Since LWC >=3.7, we can configure a field with the end value\n                let lizmap_plugin_metadata = lizMap.getLizmapDesktopPluginMetadata();\n                if (lizmap_plugin_metadata.lizmap_web_client_target_version >= 30700) {\n                    startField = field_item.start_field;\n                    endField = ('end_field' in field_item && field_item.end_field != '') ? field_item.end_field : startField;\n                } else {\n                    startField = field_item.field;\n                }\n\n                // min value filter\n                if (min_val != '') {\n                    var min_val_filter = '( ';\n                    min_val_filter += '\"' + startField + '\"' + \" >= '\" + min_val + \"'\";\n                    if (endField) {\n                        min_val_filter += \" OR \" + ' \"' + endField + '\"' + \" >= '\" + min_val + \"'\";\n                    }\n                    min_val_filter += ' )';\n                    filters.push(min_val_filter);\n                } else {\n                    min_val = null;\n                }\n\n                // max value filter\n                if (max_val != '') {\n                    var max_val_filter = '( ';\n                    max_val_filter += '\"' + startField + '\"' + \" <= '\" + max_val + \"'\";\n                    if (endField) {\n                        max_val_filter += \" OR \" + ' \"' + endField + '\"' + \" <= '\" + max_val + \"'\";\n                    }\n                    max_val_filter += ' )';\n                    filters.push(max_val_filter);\n                } else {\n                    max_val = null;\n                }\n\n                var filter = null;\n                if (filters.length) {\n                    var filter = ' ( ';\n                    filter += filters.join(' AND ');\n                    filter += ' ) ';\n                }\n                globalThis['filterConfig'][field_item.order]['data'] = {\n                    'min': min_val,\n                    'max': max_val\n                };\n                globalThis['filterConfig'][field_item.order]['filter'] = filter;\n\n            }\n\n            // Set the filter for a text field_item\n            /**\n             *\n             * @param field_item\n             */\n            function setTextFilter(field_item) {\n\n                var id = '#liz-filter-field-text' + lizMap.cleanName(field_item.title);\n                var val = $(id).val().trim().replace(/'/g, \"''\");\n\n                globalThis['filterConfig'][field_item.order]['data'] = {\n                    'text': val\n                };\n                var filter = null;\n                var lk = 'LIKE';\n                if (field_item.provider == 'postgres') {\n                    lk = 'ILIKE';\n                }\n                var field = field_item['field'];\n                if (val) {\n                    filter = '\"' + field + '\"' + \" \" + lk + \" '%\" + val + \"%'\";\n                }\n\n                globalThis['filterConfig'][field_item.order]['data'] = {\n                    'text': val\n                };\n                globalThis['filterConfig'][field_item.order]['filter'] = filter;\n            }\n\n            /**\n             * Get the list of feature ids for a given filter.\n             *\n             * This is needed to trigger the filter with the selection tool\n             * @param {string} filter - The SQL like filter\n             * @param pkField\n             * @param aCallBack\n             */\n            function getFilteredFeatureIds(filter, pkField, aCallBack) {\n                filter = typeof filter !== 'undefined' ? filter : '';\n                var layerId = globalThis['filterConfigData'].layerId;\n                var field = pkField;\n                var sdata = {\n                    request: 'getUniqueValues',\n                    layerId: layerId,\n                    fieldname: field,\n                    filter: filter\n                };\n                $.get(globalThis['filterConfigData'].url, sdata, function (result) {\n                    if (!checkResult(result)) {\n                        return false;\n                    }\n                    var ids = [];\n                    for (var a in result) {\n                        var feat = result[a];\n                        if (feat['v'] === null || !feat['v'] || (typeof feat['v'] === 'string' && feat['v'].trim() === ''))\n                            continue;\n                        ids.push(feat['v']);\n                    }\n                    if (aCallBack) {\n                        aCallBack(ids);\n                    }\n                }, 'json');\n            }\n\n            /**\n             * Get the method to use to trigger the layer filter\n             *\n             * 'simple' means like before 3.6: directly change layer request_params and run\n             * 'full' means we first get the features ids for the filter and then trigger the\n             * Lizmap filter based on the attribute table methods. This will cascade the filter\n             * to child layers.\n             *\n             * If there an attribute table config for this layer\n             * we use the filter with selection, in order\n             * to trigger the filter for the children tables\n             * and propagate the filter to the other tools\n             * such as the dataviz, the attribute table, etc.\n             *\n             * You can force the method in the JS console with;\n             * globalThis['filterConfigData'].filterMethod = 'simple'\n             * @returns {string} filterMethod - The method: simple or full\n             */\n            function getFilterMethod() {\n\n                // Default is simple\n                var filterMethod = 'simple';\n\n                // If the filter method is already configured, use it\n                if (globalThis['filterConfigData'].hasOwnProperty('filterMethod')) {\n                    filterMethod = globalThis['filterConfigData'].filterMethod;\n                    if (filterMethod == 'simple' || filterMethod == 'full') {\n                        return filterMethod;\n                    }\n                }\n\n                // If the layer has attribute layer configuration, use full\n                var layerName = globalThis['filterConfigData'].layerName;\n                if ('attributeLayers' in lizMap.config && layerName in lizMap.config.attributeLayers) {\n                    var attributeLayerConfig = lizMap.config.attributeLayers[layerName];\n                    var pkField = attributeLayerConfig['primaryKey'];\n                    if (pkField.split(',').length == 1) {\n                        filterMethod = 'full';\n                    }\n                }\n\n                return filterMethod;\n            }\n\n\n            /**\n             * Compute the global filter to pass to the layer\n             * and apply it to the map and other tools\n             *\n             */\n            function activateFilter() {\n                var layerId = globalThis['filterConfigData'].layerId;\n                var layerName = globalThis['filterConfigData'].layerName;\n\n                var afilter = [];\n                for (var o in globalThis['filterConfig']) {\n                    var field_item = globalThis['filterConfig'][o];\n                    if ('title' in field_item && field_item['filter'] && field_item.layerId == layerId) {\n                        afilter.push(field_item['filter']);\n                    }\n                }\n\n                // We use AND clause between fields\n                var filter = afilter.join(' AND ');\n\n                // Deactivate the filter if it is empty.\n                // It can occur when the user unchecks the only checkbox\n                // which was checked before,\n                // or resetted the field input with the reset button\n                // when only this field filter was active\n                if (afilter.length == 0 || filter.trim() == '') {\n                    deactivateFilter();\n                    return true;\n                }\n\n                // Lizmap method to filter the data: simple or full\n                var filterMethod = getFilterMethod();\n                if (filterMethod == 'simple') {\n                    // Use a simple filter only for the getmap and other WMS/WFS queries\n                    lizMap.triggerLayerFilter(layerName, filter);\n                } else {\n                    // Get the filtered features fids\n                    var pkField = lizMap.config.attributeLayers[layerName]['primaryKey'];\n                    getFilteredFeatureIds(filter, pkField, function (filteredIds) {\n                        // Pass a fake false filter if no ids are returned.\n                        // It means the global filter between fields returns no data\n                        if (filteredIds.length == 0) {\n                            filteredIds = [-9999999];\n                        }\n                        // Update the selectedfeatures object\n                        if (!lizMap.config.layers[layerName]['selectedFeatures']) {\n                            lizMap.config.layers[layerName]['selectedFeatures'] = [];\n                        }\n                        lizMap.config.layers[layerName]['selectedFeatures'] = filteredIds;\n\n                        // Trigger the filter based on these selected features\n                        lizMap.events.triggerEvent(\"layerfeaturefilterselected\",\n                            { 'featureType': layerName }\n                        );\n                    });\n                }\n\n                // Get the feature count and display it\n                getFeatureCount(filter);\n\n                if ($('#liz-filter-zoom').is(\":visible\")) {\n                    setZoomExtent(filter);\n                }\n\n                // Set the filter in the global variable\n                globalThis['filterConfigData'].filter = filter;\n\n            }\n\n            // Deactivate the layer filter\n            // And display all features\n            /**\n             *\n             */\n            function deactivateFilter() {\n                var layerId = globalThis['filterConfigData'].layerId;\n\n                globalThis['filterConfigData'].filter = undefined;\n\n                // Deactivate all triggers to avoid unnecessary requests\n                // and then empty all the input values\n                globalThis['filterConfigData'].deactivated = true;\n                for (var o in globalThis['filterConfig']) {\n                    var field_item = globalThis['filterConfig'][o];\n                    if ('title' in field_item && field_item.layerId == layerId) {\n                        resetFormField(field_item.order);\n                    }\n                }\n                globalThis['filterConfigData'].deactivated = false;\n\n                // Remove filter on map layers\n                var layerName = globalThis['filterConfigData'].layerName;\n\n                // Lizmap method to filter the data: simple or full\n                var filterMethod = getFilterMethod();\n                if (filterMethod == 'simple') {\n                    // Use a simple filter only for the getmap and other WMS/WFS queries\n                    lizMap.deactivateMaplayerFilter(layerName);\n\n                    // Refresh plots\n                    lizMap.events.triggerEvent(\"layerFilterParamChanged\",\n                        {\n                            'featureType': layerName,\n                            'filter': null,\n                            'updateDrawing': false\n                        }\n                    );\n                } else {\n                    // Deactivate the filter\n                    lizMap.events.triggerEvent('layerfeatureremovefilter',\n                        { 'featureType': layerName }\n                    );\n                }\n\n\n                // Get feature count\n                getFeatureCount();\n\n                // Set zoom extent\n                if ($('#liz-filter-zoom').is(\":visible\")) {\n                    setZoomExtent();\n                }\n\n                // Remove feature info geometry\n                removeFeatureInfoGeometry();\n\n            }\n\n            /**\n             *\n             * @param field_item_order\n             */\n            function resetFormField(field_item_order) {\n\n                var field_item = globalThis['filterConfig'][field_item_order];\n\n                if (field_item.type == 'date') {\n                    $('#liz-filter-field-min-date' + lizMap.cleanName(field_item.title)).val(field_item['min']);\n                    $('#liz-filter-field-max-date' + lizMap.cleanName(field_item.title)).val(field_item['max']).change(); // .change() so that the slider is also resetted\n                }\n                else if (field_item['type'] == 'numeric') {\n                    $('#liz-filter-field-min-numeric' + lizMap.cleanName(field_item.title)).val(field_item['min']);\n                    $('#liz-filter-field-max-numeric' + lizMap.cleanName(field_item.title)).val(field_item['max']).change();\n                }\n                else if (field_item['type'] == 'uniquevalues') {\n                    if (field_item.format == 'checkboxes') {\n                        $('#liz-filter-box-' + lizMap.cleanName(field_item.title) + ' input.liz-filter-field-value').prop(\"checked\", false);\n                    }\n                    else if (field_item.format == 'select') {\n                        var selectField = $('#liz-filter-field-' + lizMap.cleanName(field_item.title));\n                        // If the select is multiple && sumoSelect has been used to transform the combobox\n                        if ('sumo' in selectField[0]) {\n                            if (selectField[0].hasAttribute('multiple')) {\n                                selectField[0].sumo.unSelectAll();\n                            } else {\n                                selectField[0].sumo.unSelectItem(selectField.val());\n                            }\n                        } else {\n                            var firstOptionValue = selectField.find('option:first').val();\n                            selectField.val(firstOptionValue);\n                        }\n                    }\n                }\n                else if (field_item['type'] == 'text') {\n                    $('#liz-filter-field-text' + lizMap.cleanName(field_item.title)).val('');\n                }\n\n                // Remove filter in stored object\n                globalThis['filterConfig'][field_item.order]['filter'] = null;\n\n            }\n\n            /**\n             * Removes the getFeatureInfo geometry\n             */\n            function removeFeatureInfoGeometry() {\n                lizMap.mainLizmap.map.clearHighlightFeatures();\n            }\n\n            /**\n             * Adapt the size of the dock\n             */\n            function adaptLayerFilterSize() {\n                lizMap.events.on({\n                    // Adapt dock size to display metadata\n                    dockopened: function (e) {\n                        if (e.id == 'filter') {\n                            lizMap.updateContentSize();\n                        }\n                    },\n                    rightdockclosed: function () {\n                    },\n                    minidockclosed: function () {\n                    },\n                    layerfeatureremovefilter: function () {\n                        var layerId = globalThis['filterConfigData'].layerId;\n\n                        globalThis['filterConfigData'].filter = undefined;\n\n                        // We need to reset the form\n                        // Deactivate all triggers to avoid unnecessary requests\n                        globalThis['filterConfigData'].deactivated = true;\n                        for (var o in globalThis['filterConfig']) {\n                            var field_item = globalThis['filterConfig'][o];\n                            if (!('title' in field_item) || field_item.layerId !== layerId) {\n                                continue;\n                            }\n                            resetFormField(field_item.order);\n                        }\n                        globalThis['filterConfigData'].deactivated = false;\n\n                        // Get feature count\n                        getFeatureCount();\n                    }\n                });\n\n            }\n\n            /**\n             *\n             * @param aDate\n             * @param dateFormat\n             */\n            function formatDT(aDate, dateFormat) {\n                var formatted = $.datepicker.formatDate(dateFormat, aDate);\n                return formatted;\n            }\n\n            // Add an event on the inputs of a given field\n            // For example, do something when a checkbox is clicked\n            // This triggers the calculation of the filter for the field\n            /**\n             *\n             * @param field_item\n             */\n            function addFieldEvents(field_item) {\n                var container = 'liz-filter-box-' + lizMap.cleanName(field_item.title);\n                var field_config = globalThis['filterConfig'][field_item.order]\n\n                if (field_item.type == 'uniquevalues') {\n                    if (field_item.format == 'checkboxes') {\n                        $('#' + container + ' input.liz-filter-field-value').click(function () {\n                            var self = $(this);\n                            // Do nothing if disabled\n                            if (self.hasClass('disabled'))\n                                return false;\n\n                            // Filter the data\n                            setFormFieldFilter(field_item);\n                        });\n                    }\n                    if (field_item.format == 'select') {\n\n                        $('#liz-filter-field-' + lizMap.cleanName(field_item.title)).change(function () {\n                            // Filter the data\n                            setFormFieldFilter(field_item);\n                        });\n                    }\n                }\n\n                // date\n                if (field_config['type'] == 'date') {\n\n                    var hasSlider = (true);\n                    if (hasSlider) {\n                        // Get value in seconds\n                        var min_val = Date.parse(field_item['min']) / 1000;\n                        var max_val = Date.parse(field_item['max']) / 1000;\n\n                        // Add a function which will use a timeout\n                        // to prevent too heavy load on server\n                        // when using setFormFieldFilter\n                        var timer = null;\n                        /**\n                         *\n                         * @param e\n                         * @param ui\n                         */\n                        function onDateChange(e, ui) {\n                            if (globalThis['filterConfigData'].deactivated)\n                                return false;\n                            clearTimeout(timer);\n                            timer = setTimeout(function () {\n                                var dt_cur_from = new Date(ui.values[0] * 1000); //.format(\"yyyy-mm-dd hh:ii:ss\");\n                                $('#liz-filter-field-min-date' + lizMap.cleanName(field_item.title)).val(\n                                    formatDT(dt_cur_from, 'yy-mm-dd')\n                                )\n                                var dt_cur_to = new Date(ui.values[1] * 1000); //.format(\"yyyy-mm-dd hh:ii:ss\");\n                                $('#liz-filter-field-max-date' + lizMap.cleanName(field_item.title)).val(\n                                    formatDT(dt_cur_to, 'yy-mm-dd')\n                                )\n\n                                setFormFieldFilter(field_item);\n                            }, 150);\n                        }\n\n                        $(\"#liz-filter-slider-range\" + lizMap.cleanName(field_item.title)).slider({\n                            range: true,\n                            min: min_val,\n                            max: max_val,\n                            step: 86400,\n                            values: [min_val, max_val],\n                            change: function (e, ui) {\n                                onDateChange(e, ui);\n                            },\n                            slide: function (e, ui) {\n                                var dt_cur_from = new Date(ui.values[0] * 1000); //.format(\"yyyy-mm-dd hh:ii:ss\");\n                                $('#liz-filter-field-min-date' + lizMap.cleanName(field_item.title)).val(\n                                    formatDT(dt_cur_from, 'yy-mm-dd')\n                                )\n                                var dt_cur_to = new Date(ui.values[1] * 1000); //.format(\"yyyy-mm-dd hh:ii:ss\");\n                                $('#liz-filter-field-max-date' + lizMap.cleanName(field_item.title)).val(\n                                    formatDT(dt_cur_to, 'yy-mm-dd')\n                                )\n                            }\n                        });\n                    }\n\n                    $('#liz-filter-field-min-date' + lizMap.cleanName(field_item.title) + ', #liz-filter-field-max-date' + lizMap.cleanName(field_item.title)).change(function () {\n                        // Filter the data. Only if the slider is not activated (if it is activated, it triggers the filter)\n                        if (!hasSlider) {\n                            setFormFieldFilter(field_item);\n                        } else {\n                            // Change values of the slider\n                            $(\"#liz-filter-slider-range\" + lizMap.cleanName(field_item.title)).slider(\n                                \"values\",\n                                [\n                                    Date.parse($('#liz-filter-field-min-date' + lizMap.cleanName(field_item.title)).val()) / 1000,\n                                    Date.parse($('#liz-filter-field-max-date' + lizMap.cleanName(field_item.title)).val()) / 1000\n                                ]\n                            );\n                        }\n                    });\n                }\n\n                // numeric\n                if (field_config['type'] == 'numeric') {\n\n                    var hasSlider = (true);\n                    if (hasSlider) {\n                        var min_val = field_item['min'];\n                        var max_val = field_item['max'];\n\n                        // Add a function which will use a timeout\n                        // to prevent too heavy load on server\n                        // when using setFormFieldFilter\n                        var timer = null;\n                        /**\n                         *\n                         * @param e\n                         * @param ui\n                         */\n                        function onNumericChange(e, ui) {\n                            if (globalThis['filterConfigData'].deactivated)\n                                return false;\n                            clearTimeout(timer);\n                            timer = setTimeout(function () {\n                                var dt_cur_from = ui.values[0];\n                                $('#liz-filter-field-min-numeric' + lizMap.cleanName(field_item.title)).val(dt_cur_from);\n                                var dt_cur_to = ui.values[1];\n                                $('#liz-filter-field-max-numeric' + lizMap.cleanName(field_item.title)).val(dt_cur_to);\n\n                                setFormFieldFilter(field_item);\n                            }, 300);\n                        }\n\n                        $(\"#liz-filter-slider-range\" + lizMap.cleanName(field_item.title)).slider({\n                            range: true,\n                            min: min_val,\n                            max: max_val,\n                            step: 1,\n                            values: [min_val, max_val],\n                            change: function (e, ui) {\n                                onNumericChange(e, ui);\n                            },\n                            slide: function (e, ui) {\n                                var dt_cur_from = ui.values[0];\n                                $('#liz-filter-field-min-numeric' + lizMap.cleanName(field_item.title)).val(dt_cur_from);\n                                var dt_cur_to = ui.values[1];\n                                $('#liz-filter-field-max-numeric' + lizMap.cleanName(field_item.title)).val(dt_cur_to);\n                            }\n                        });\n                    }\n\n                    $('#liz-filter-field-min-numeric' + lizMap.cleanName(field_item.title) + ', #liz-filter-field-max-numeric' + lizMap.cleanName(field_item.title)).change(function () {\n                        // Filter the data. Only if the slider is not activated (if it is activated, it triggers the filter)\n                        if (!hasSlider) {\n                            setFormFieldFilter(field_item);\n                        } else {\n                            // Change values of the slider\n                            $(\"#liz-filter-slider-range\" + lizMap.cleanName(field_item.title)).slider(\n                                \"values\",\n                                [\n                                    $('#liz-filter-field-min-numeric' + lizMap.cleanName(field_item.title)).val(),\n                                    $('#liz-filter-field-max-numeric' + lizMap.cleanName(field_item.title)).val()\n                                ]\n                            );\n                        }\n                    });\n                }\n\n\n                // text\n                if (field_config['type'] == 'text') {\n                    $('#liz-filter-field-text' + lizMap.cleanName(field_item.title)).change(function () {\n                        // Filter the data\n                        setFormFieldFilter(field_item);\n                    });\n                }\n\n                // Add event on reset buttons\n                $('#liz-filter-box-' + lizMap.cleanName(field_item.title) + ' button.liz-filter-reset-field').click(function () {\n                    resetFormField($(this).val());\n                    activateFilter();\n                });\n\n                // Add tooltip\n                $('#liz-filter-box-' + lizMap.cleanName(field_item.title) + ' [title]').tooltip();\n\n            }\n\n            /**\n             *\n             * @param filter\n             */\n            function getFeatureCount(filter) {\n                filter = typeof filter !== 'undefined' ? filter : '';\n                var layerId = globalThis['filterConfigData'].layerId;\n\n                var sdata = {\n                    request: 'getFeatureCount',\n                    layerId: layerId,\n                    filter: filter\n                };\n                $.get(globalThis['filterConfigData'].url, sdata, function (result) {\n                    if (!result)\n                        return false;\n                    if ('status' in result && result['status'] == 'error') {\n                        console.log(result.title + ': ' + result.detail);\n                        return false;\n                    }\n                    for (var a in result) {\n                        var feat = result[a];\n                        var nb = feat['c'];\n                        try {\n                            nb = (new Intl.NumberFormat()).format(nb);\n                        } catch (error) {\n                            nb = feat['c'];\n                        }\n                        $('#liz-filter-item-layer-total-count').html(nb);\n                    }\n\n                }, 'json');\n            }\n\n            /**\n             *\n             * @param filter\n             */\n            function setZoomExtent(filter) {\n                filter = typeof filter !== 'undefined' ? filter : '';\n\n                var layerId = globalThis['filterConfigData'].layerId;\n\n                // Get map projection and layer extent\n                var mapProjection = lizMap.map.getProjection();\n                if (mapProjection == 'EPSG:900913')\n                    mapProjection = 'EPSG:3857';\n\n                // Get layer\n                var layerName = globalThis['filterConfigData'].layerName;\n\n                if (!filter) {\n                    // Use layer extent\n                    var itemConfig = lizMap.config.layers[layerName];\n                    if ('bbox' in itemConfig) {\n                        var lex = itemConfig['bbox'][mapProjection]['bbox'];\n                        var extent = lex[0] + ',' + lex[1] + ',' + lex[2] + ',' + lex[3];\n                        $('#liz-filter-zoom').val(extent);\n                    }\n                    return false;\n                }\n\n                // If a filter is set, request the extent with filter\n                var sdata = {\n                    request: 'getExtent',\n                    layerId: layerId,\n                    filter: filter,\n                    crs: mapProjection\n                };\n                $.get(globalThis['filterConfigData'].url, sdata, function (result) {\n                    if (!result)\n                        return false;\n                    if ('status' in result && result['status'] == 'error') {\n                        console.log(result.title + ': ' + result.detail);\n                        // Hide Zoom button\n                        $('#liz-filter-zoom').hide();\n                        return;\n                    }\n\n                    for (var a in result) {\n                        //BOX(33373 7527405.72750002,449056.961709125 7724585.66040861)\n                        var sourcebbox = result[a]['bbox'];\n                        if (!sourcebbox)\n                            return false;\n                        var sbbox = $.parseJSON(sourcebbox);\n                        var bbox = sbbox.bbox;\n                        var extent = bbox[0] + ',' + bbox[1] + ',' + bbox[2] + ',' + bbox[3];\n                        $('#liz-filter-zoom').val(extent);\n                    }\n\n                }, 'json');\n            }\n\n            /**\n             *\n             */\n            function zoomToFeatures() {\n                var bounds = $('#liz-filter-zoom').val();\n                var abounds = null;\n                if (bounds) {\n                    abounds = bounds.split(',');\n                }\n                if (!bounds || abounds.length != 4) {\n                    return false;\n                }\n                lizMap.mainLizmap.map.getView().fit(abounds);\n                return false;\n            }\n\n            // Launch LayerFilter feature\n            addLayerFilterToolInterface();\n            launchLayerFilterTool(globalThis['filterConfigData'].layerId);\n\n            // Listen to the layer selector changes\n            $('#liz-filter-layer-selector').change(function () {\n                deactivateFilter();\n                globalThis['filterConfigData'].layerId = $(this).val();\n                launchLayerFilterTool($(this).val());\n            });\n\n        } // uicreated\n    });\n\n\n}();\n"],"names":["entries","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","Object","freeze","seal","create","apply","construct","Reflect","x","fun","thisValue","args","Func","arrayForEach","unapply","Array","prototype","forEach","arrayLastIndexOf","lastIndexOf","arrayPop","pop","arrayPush","push","arraySplice","splice","stringToLowerCase","String","toLowerCase","stringToString","toString","stringMatch","match","stringReplace","replace","stringIndexOf","indexOf","stringTrim","trim","objectHasOwnProperty","hasOwnProperty","regExpTest","RegExp","test","typeErrorCreate","func","TypeError","_len2","arguments","length","_key2","thisArg","_len","_key","addToSet","set","array","transformCaseFunc","undefined","l","element","lcElement","cleanArray","index","clone","object","newObject","property","value","isArray","constructor","lookupGetter","prop","desc","get","html$1","svg$1","svgFilters","svgDisallowed","mathMl$1","mathMlDisallowed","html","svg","mathMl","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","CUSTOM_ELEMENT","EXPRESSIONS","__proto__","getGlobal","window","purify","createDOMPurify","DOMPurify","root","version","removed","document","nodeType","Element","isSupported","originalDocument","currentScript","DocumentFragment","HTMLTemplateElement","Node","NodeFilter","NamedNodeMap","MozNamedAttrMap","HTMLFormElement","DOMParser","trustedTypes","ElementPrototype","cloneNode","remove","getNextSibling","getChildNodes","getParentNode","template","createElement","content","ownerDocument","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","hooks","afterSanitizeAttributes","afterSanitizeElements","afterSanitizeShadowDOM","beforeSanitizeAttributes","beforeSanitizeElements","beforeSanitizeShadowDOM","uponSanitizeAttribute","uponSanitizeElement","uponSanitizeShadowNode","createHTMLDocument","IS_ALLOWED_URI$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","CUSTOM_ELEMENT_HANDLING","tagNameCheck","writable","configurable","enumerable","attributeNameCheck","allowCustomizedBuiltInElements","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","SAFE_FOR_XML","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","CONFIG","formElement","isRegexOrFunction","testValue","Function","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","table","tbody","TRUSTED_TYPES_POLICY","createHTML","createScriptURL","purifyHostElement","createPolicy","suffix","ATTR_NAME","hasAttribute","getAttribute","policyName","scriptUrl","_","console","warn","_createTrustedTypesPolicy","ALL_SVG_TAGS","ALL_MATHML_TAGS","_forceRemove","node","removeChild","_removeAttribute","name","attribute","getAttributeNode","from","removeAttribute","setAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","createDocument","innerHTML","body","insertBefore","createTextNode","childNodes","call","_createNodeIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","SHOW_PROCESSING_INSTRUCTION","SHOW_CDATA_SECTION","_isClobbered","nodeName","textContent","attributes","namespaceURI","hasChildNodes","_isNode","_executeHooks","currentNode","data","hook","_sanitizeElements","tagName","allowedTags","firstElementChild","_isBasicCustomElement","parentNode","i","childClone","__removalCount","parent","parentTagName","Boolean","_checkValidNamespace","expr","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","forceKeepAttr","attr","getAttributeType","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","sanitize","importedNode","returnNode","appendChild","firstChild","nodeIterator","shadowroot","shadowrootmode","serializedHTML","outerHTML","doctype","setConfig","clearConfig","isValidAttribute","tag","addHook","entryPoint","hookFunction","removeHook","removeHooks","removeAllHooks","lizMap","events","on","globalThis","keys","$","addClass","launchLayerFilterTool","layerId","getConfig","getLayerConfigById","layerName","formFilterLayersSorted","o","field_item","append","order","conf","getFormFieldInput","getLayerFilterForm","dockopened","e","id","updateContentSize","rightdockclosed","minidockclosed","layerfeatureremovefilter","filter","deactivated","resetFormField","getFeatureCount","is","setZoomExtent","field_config","fetchRequests","sdata","request","fieldname","field","fetch","url","URLSearchParams","then","response","json","keyValues","fieldConf","keyValueConfig","type","getSourceLayer","source_layer_id","sourceLayerConfig","source_typename","shortname","typename","mainLizmap","wfs","getFeature","TYPENAME","PROPERTYNAME","code_field","label_field","EXP_FILTER","exp_filter","Promise","all","responses","result","rawKeyValues","checkResult","features","feature","properties","getFormFieldHeader","format","cleanName","title","feat","dhtml","fkeys","sort","a","b","localeCompare","f_val","label","addFieldEvents","uniqueValuesFormInput","start_field_property","end_field_property","getLizmapDesktopPluginMetadata","lizmap_web_client_target_version","end_field","dmin","formatDT","Date","dmax","datepicker","dateFormat","changeMonth","changeYear","minDate","maxDate","dateFormInput","fieldNames","start_field","Number","numericFormInput","autocompleteData","lizDict","autocomplete","source","autoFocus","delay","minLength","select","event","ui","this","val","item","change","textFormInput","log","detail","setFormFieldFilter","allchecked","nonechecked","selectId","selectVal","clist","achecked","includes","inputId","hasEmptyValue","sep","lk","provider","cval","join","setUniqueValuesFilter","filters","min_id","max_id","min_val","max_val","startField","endField","parse","max_val_new","setDate","getDate","max_val_new_str","setDateFilter","min_val_filter","max_val_filter","setNumericFilter","setTextFilter","activateFilter","getFilterMethod","filterMethod","config","attributeLayers","split","afilter","deactivateFilter","triggerLayerFilter","pkField","aCallBack","ids","getFilteredFeatureIds","filteredIds","layers","triggerEvent","deactivateMaplayerFilter","map","clearHighlightFeatures","field_item_order","selectField","sumo","unSelectAll","unSelectItem","firstOptionValue","find","aDate","formatDate","container","click","hasClass","hasSlider","timer","onDateChange","clearTimeout","setTimeout","dt_cur_from","values","dt_cur_to","slider","range","min","max","step","slide","onNumericChange","tooltip","nb","Intl","NumberFormat","error","mapProjection","getProjection","itemConfig","lex","extent","crs","hide","sourcebbox","bbox","parseJSON","flayers","lconfig_get","lname","lconf","displayName","getVectorLayerResultFormat","getLayerFilterDockRoot","bounds","abounds","getView","fit","zoomToFeatures","request_params","exportVectorLayer","addLayerFilterToolInterface"],"sourceRoot":""}