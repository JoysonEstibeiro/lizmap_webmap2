{"version":3,"file":"edition.js","mappings":"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","sources":["webpack://lizmap-web-client/./assets/src/legacy/edition.js"],"sourcesContent":["/**\n * @module legacy/edition.js\n * @name Edition\n * @copyright 2023 3Liz\n * @license MPL-2.0\n */\n\nvar lizEdition = function() {\n\n    /**\n     * Prevent the user from quitting the page\n     * when and editing session is active.\n     * @param {Event} event\n     */\n    const beforeUnloadHandler = (event) => {\n        if (lizMap.editionPending) {\n            event.preventDefault();\n            event.returnValue = '';\n        }\n    }\n    window.addEventListener('beforeunload', beforeUnloadHandler);\n\n\n    /**\n     *\n     * @param layerID\n     * @param feature\n     * @param relation\n     */\n    function FeatureEditionData(layerID, feature, relation) {\n        /** @member {string} QGIS layer id */\n        this.layerId = layerID;\n        /** @member {object} QGIS layer config */\n        this.config = null;\n        /** @member {} */\n        this.feature = feature;\n        /** @member {} */\n        this.relation = relation;\n        /** @member {FeatureEditionData}  parent feature */\n        this.parent = null;\n        /** @member {boolean} backToParent tell if we can edit the parent after a save */\n        this.backToParent = false;\n        /** @member {[Feature, FormData][]} new features to save on submit (features created after a split) */\n        this.newfeatures = [];\n        /**@member {string} pivot tell if the parent is in n to m relation with the child*/\n        this.pivot = null;\n    }\n    FeatureEditionData.prototype = {\n        setParentToEditAfterSave: function (parent) {\n            this.backToParent = (!!parent);\n            this.parent = parent;\n        },\n        get geometryType () {\n            if (this.config) {\n                return this.config.geometryType;\n            }\n            return '';\n        },\n    };\n\n    /**\n     *\n     */\n    function EditionLayerData() {\n        /** @member {boolean} If the layer is spatial or not */\n        this.spatial = false;\n        /** @member {object} draw control */\n        this.drawControl = null;\n        /** @member {string} Which submit button has been clicked */\n        this.submitActor = 'submit';\n        /** @member {OpenLayers.Layer.Vector} OL layer editLayer for edition */\n        this.ol = null;\n        /** @member {FeatureEditionData}  the current data about the edited feature */\n        this.currentFeature = null;\n        /** @member {OpenLayers.Layer.Vector}  layer editSplitLayer to stores temporary geometry of new features */\n        this.splitOl = null;\n\n        /** @member {OpenLayers.Rule[]} custom rules for the editLayer */\n        this.olStyleCustomRules = [];\n        /** @member {OpenLayers.Rule[]} custom rules for the editSplitLayer */\n        this.splitOlStyleCustomRules = [];\n\n    }\n    EditionLayerData.prototype = {\n        get config () {\n            return this.currentFeature.config;\n        },\n\n        get geometryType () {\n            if (this.currentFeature && this.currentFeature.config) {\n                return this.currentFeature.config.geometryType;\n            }\n            return '';\n        },\n\n        get newfeatures () {\n            return this.currentFeature.newfeatures\n        },\n\n        get id () {\n            return this.currentFeature.layerId\n        },\n\n        get parent() {\n            return this.currentFeature.parent;\n        },\n\n        get projCode() {\n            return this.ol.projection.projCode;\n        },\n\n        deactivateControl : function() {\n            if (this.drawControl && this.drawControl.active) {\n                this.drawControl.deactivate();\n            }\n        },\n\n        clearLayers: function() {\n            if (this.ol) {\n                this.ol.destroyFeatures();\n            }\n\n            if (this.splitOl) {\n                this.splitOl.destroyFeatures();\n            }\n        },\n\n        clear: function() {\n            this.currentFeature = null;\n            this.spatial = false;\n            this.drawControl = null;\n            this.submitActor = 'submit';\n            this.clearLayers();\n        },\n\n        createLayers : function() {\n            // Initialize layer for features created after a split\n            var style, styleMap;\n            var splitLayer = map.getLayersByName('editSplitLayer');\n            if (splitLayer.length == 0) {\n                style = new OpenLayers.Style();\n                style.addRules([\n                    new OpenLayers.Rule({\n                        symbolizer: {\n                            \"Point\": {\n                                pointRadius: 6\n                            },\n                            \"Line\": {\n                                strokeWidth: 4,\n                                fillColor: \"#1353ac\",\n                                strokeColor: \"#d6eeff\"\n                            },\n                            \"Polygon\": {\n                                strokeWidth: 2\n                            }\n                        }\n                    })\n                ]);\n\n                if (this.splitOlStyleCustomRules.length) {\n                    style.addRules(this.splitOlStyleCustomRules);\n                }\n\n                styleMap = new OpenLayers.StyleMap({\"default\": style});\n                this.splitOl = new OpenLayers.Layer.Vector('editSplitLayer', {styleMap: styleMap});\n                map.addLayer(this.splitOl);\n            }\n\n            // initialize layer\n            var editLayer = map.getLayersByName( 'editLayer' );\n            if (editLayer.length == 0) {\n                style = new OpenLayers.Style();\n                style.addRules([\n                    new OpenLayers.Rule({symbolizer:  {\n                        \"Point\": {\n                            pointRadius: 6\n                        },\n                        \"Line\": {\n                            strokeWidth: 4,\n                        },\n                        \"Polygon\": {\n                            strokeWidth: 2\n                        }\n                    }})\n                ]);\n\n                if (this.olStyleCustomRules.length) {\n                    style.addRules(this.olStyleCustomRules);\n                }\n\n                styleMap = new OpenLayers.StyleMap({\"default\": style});\n                this.ol = new OpenLayers.Layer.Vector('editLayer',{styleMap:styleMap});\n                map.addLayer(this.ol);\n            }\n        },\n\n        getFeature : function() {\n            if (this.spatial && this.ol && this.ol.features.length != 0) {\n                return this.ol.features[0];\n            }\n            return null;\n        },\n\n        removeEditedFeature : function(feat) {\n            this.ol.removeFeatures( [feat]);\n        },\n\n        /**\n         *\n         * @param {object} feat\n         * @param {FormData} formData\n         */\n        moveEditedFeatureToSplitLayer : function(feat, formData) {\n            this.ol.removeFeatures( [feat]);\n            this.splitOl.addFeatures([feat]);\n            this.currentFeature.newfeatures.push([feat, formData]);\n        },\n\n        setDrawControl: function(drawControl) {\n            this.drawControl = drawControl;\n            this.spatial = true;\n        },\n\n        replaceFeature: function (newFeature) {\n            this.clearLayers();\n            this.ol.addFeatures([newFeature]);\n        },\n\n        canEditParentFeature : function() {\n            return (this.currentFeature.parent != null && this.currentFeature.backToParent);\n        },\n\n        restoreSplitFeatures : function() {\n            var layer = this.splitOl;\n            layer.destroyFeatures();\n            var featList = this.currentFeature.newfeatures.map(function(newFeat){ return newFeat[0]; });\n            if (featList.length) {\n                layer.addFeatures(featList);\n            }\n        }\n    };\n\n    var config = null;\n    var layers = null;\n    var map = null;\n    var controls = null;\n\n    // Map control for edition\n    var editCtrls = null;\n\n    // Edition layer data\n    var editionLayer = new EditionLayerData();\n\n    // Edition type : createFeature or modifyFeature\n    var editionType = null;\n\n    // Edition message management\n    var editionMessageTimeoutId = null;\n    /**\n     *\n     */\n    function cleanEditionMessage() {\n        var $EditionMessage = $('#lizmap-edition-message');\n        if ( $EditionMessage.length != 0 ) {\n            $EditionMessage.remove();\n        }\n        editionMessageTimeoutId = null;\n    }\n    /**\n     *\n     * @param aMessage\n     * @param aType\n     * @param aClose\n     */\n    function addEditionMessage(aMessage, aType, aClose){\n        if ( editionMessageTimeoutId ) {\n            window.clearTimeout(editionMessageTimeoutId);\n            editionMessageTimeoutId = null;\n        }\n        var $EditionMessage = $('#lizmap-edition-message');\n        if ( $EditionMessage.length != 0 ) {\n            $EditionMessage.remove();\n        }\n        lizMap.addMessage(aMessage, aType, aClose).attr('id','lizmap-edition-message');\n        editionMessageTimeoutId = window.setTimeout(cleanEditionMessage, 5000);\n    }\n\n    /**\n     *\n     * @param evt\n     */\n    function afterReshapeSpliting(evt) {\n        var splitFeatures = evt.features;\n        var geometryType = editionLayer.geometryType;\n        var removableFeat = null;\n        if ( geometryType == 'line' ) {\n            if ( splitFeatures[0].geometry.getLength() < splitFeatures[1].geometry.getLength() )\n                removableFeat = splitFeatures[0];\n            else\n                removableFeat = splitFeatures[1];\n        }\n        else if ( geometryType == 'polygon' ) {\n            if ( splitFeatures[0].geometry.getArea() < splitFeatures[1].geometry.getArea() )\n                removableFeat = splitFeatures[0];\n            else\n                removableFeat = splitFeatures[1];\n        }\n        if (removableFeat) {\n            editionLayer.removeEditedFeature(removableFeat);\n        }\n        // Update form geometry field from added geometry\n        var feat = editionLayer.getFeature();\n        if (feat) {\n            updateGeometryColumnFromFeature(feat);\n        }\n        $('#edition-geomtool-nodetool').click();\n        return false;\n    }\n\n\n    /**\n     *\n     * @param evt\n     */\n    function beforeFeatureSpliting(evt) {\n\n        var form = $('#edition-form-container form');\n        if (checkFormBeforeSubmit(form) !== 'ok') {\n            // content of the form is not good, we couldn't create a new feature\n            addEditionMessage(lizDict['edition.splitfeat.form.error'],'error',true);\n            return false;\n        }\n        if (!form.attr('data-new-feature-action')) {\n            addEditionMessage(lizDict['edition.splitfeat.tech.error'],'error',true);\n            return false;\n        }\n        return true;\n    }\n\n\n    /**\n     *\n     * @param evt\n     */\n    function afterFeatureSpliting(evt) {\n\n        // determine the two new geometry\n        var splitFeatures = evt.features;\n        var geometryType = editionLayer.geometryType;\n        var newFeature = null;\n        if ( geometryType == 'line' ) {\n            if ( splitFeatures[0].geometry.getLength() < splitFeatures[1].geometry.getLength() )\n                newFeature = splitFeatures[0];\n            else\n                newFeature = splitFeatures[1];\n        }\n        else if ( geometryType == 'polygon' ) {\n            if ( splitFeatures[0].geometry.getArea() < splitFeatures[1].geometry.getArea() )\n                newFeature = splitFeatures[0];\n            else\n                newFeature = splitFeatures[1];\n        }\n\n        // store one of the new geometry (the most little one), as a new feature\n        if (newFeature) {\n            var form = $('#edition-form-container form');\n            // Get edition datasource geometry column name\n            var gColumn = form.find('input[name=\"liz_geometryColumn\"]').val();\n            var geom = '';\n            // create a new form that will be used to store the new feature\n            var data = new FormData(form.get(0));\n            if ('set' in data) {\n                data.set('liz_featureId', '');\n                data.set('__JFORMS_TOKEN__', '');\n                if (gColumn) {\n                    geom = calculateGeometryColumnFromFeature(newFeature);\n                    data.set(gColumn, geom);\n                }\n            }\n            else {\n                // IE/Edge<12 workaround - no support of FormData.set()\n                var featureIdField = form.find('input[name=\"liz_featureId\"]');\n                var geomField = form.find('input[name=\"'+gColumn+'\"]');\n                var tokenField = form.find('input[name=\"__JFORMS_TOKEN__\"]');\n                var oldFeatureId = featureIdField.val();\n                var oldGeom = geomField.val();\n                var oldToken = tokenField.val();\n                featureIdField.val('');\n                tokenField.val('');\n                if (gColumn) {\n                    geom = calculateGeometryColumnFromFeature(newFeature);\n                    geomField.val(geom);\n                }\n                data = new FormData(form.get(0));\n                featureIdField.val(oldFeatureId);\n                geomField.val(oldGeom);\n                tokenField.val(oldToken)\n            }\n            // move new feature into the temporary layer\n            editionLayer.moveEditedFeatureToSplitLayer(newFeature, data);\n        }\n\n        // Update geometry column with the other geometry\n        var feat = editionLayer.getFeature();\n        if (feat) {\n            updateGeometryColumnFromFeature( feat );\n        }\n        $('#edition-geomtool-nodetool').click();\n        return false;\n    }\n\n\n    /**\n     * Function: OpenLayers.Geometry.pointOnSegment\n     * Note that the OpenLayers.Geometry.segmentsIntersect doesn't work with points\n     *\n     * Parameters:\n     * point - {Object} An object with x and y properties representing the\n     *     point coordinates.\n     * segment - {Object} An object with x1, y1, x2, and y2 properties\n     *     representing endpoint coordinates.\n     *\n     * Returns:\n     * {Boolean} Returns true if the point is on the segment.\n     * @param point\n     * @param segment\n     */\n    OpenLayers.Geometry.pointOnSegment = function(point, segment) {\n    // Is the point inside the BBox of the segment\n        if(point.x < Math.min(segment.x1, segment.x2) || point.x > Math.max(segment.x1, segment.x2) ||\n       point.y < Math.min(segment.y1, segment.y2) || point.y > Math.max(segment.y1, segment.y2))\n        {\n            return false;\n        }\n\n        // Avoid dividing by zero\n        if( segment.x1 == segment.x2 || segment.y1 == segment.y2 ||\n        (point.x == segment.x1 && point.y == segment.y1) ||\n        (point.x == segment.x2 && point.y == segment.y2) )\n        {\n            return true;\n        }\n\n        // Is the point on the line\n        if(((segment.x1 - point.x) / (segment.y1 - point.y)).toFixed(5) ==\n       ((segment.x2 - point.x) / (segment.y2 - point.y)).toFixed(5))\n        {\n            return true;\n        }\n\n        return false;\n    };\n\n    /**\n     *\n     */\n    function deactivateDrawFeature() {\n        $('#edition-point-coord-crs-layer').html(lizDict['edition.point.coord.crs.layer']).val('').hide();\n        $('#edition-point-coord-crs-map').html(lizDict['edition.point.coord.crs.map']).val('').hide();\n        $('#edition-point-coord-x').val('');\n        $('#edition-point-coord-y').val('');\n        if ( $('#edition-point-coord-geolocation').is(':checked') )\n            $('#edition-point-coord-geolocation').click();\n        $('#edition-point-coord-add').hide();\n        $('#edition-segment-length').parents('.control-group').addClass('hidden');\n        $('#edition-segment-angle').parents('.control-group').addClass('hidden');\n\n        lizMap.events.triggerEvent(\"lizmapeditiondrawfeaturedeactivated\",\n            {\n                'layerId': editionLayer['id'],\n                'editionConfig': editionLayer['config']\n            }\n        );\n    }\n\n    /**\n     *\n     */\n    function activateDrawFeature() {\n        var eform = $('#edition-form-container form');\n        var srid = eform.find('input[name=\"liz_srid\"]').val();\n        if ( srid != '' && !('EPSG:'+srid in Proj4js.defs) )\n            Proj4js.defs['EPSG:'+srid] = eform.find('input[name=\"liz_proj4\"]').val();\n        $('#edition-point-coord-crs-layer').html(lizDict['edition.point.coord.crs.layer']+' - EPSG:'+srid).val(srid).show();\n\n        var mapProjCode = editionLayer.projCode;\n        var mapSrid = mapProjCode.replace('EPSG:','');\n        $('#edition-point-coord-crs-map').html(lizDict['edition.point.coord.crs.map']+' - EPSG:'+mapSrid).val(mapSrid).show();\n\n        if ( editionLayer.geometryType == 'point' )\n            $('#edition-point-coord-add').hide();\n        else\n            $('#edition-point-coord-add').show();\n\n        $('#handle-point-coord').show();\n\n        lizMap.events.triggerEvent(\"lizmapeditiondrawfeatureactivated\",\n            {\n                'layerId': editionLayer['id'],\n                'editionConfig': editionLayer['config'],\n                'drawControl': editionLayer['drawControl']\n            }\n        );\n    }\n\n    /**\n     *\n     */\n    function keyUpPointCoord() {\n        var x = parseFloat($('#edition-point-coord-x').val());\n        var y = parseFloat($('#edition-point-coord-y').val());\n        if ( !isNaN(x) && !isNaN(y) ) {\n            var vertex = new OpenLayers.Geometry.Point(x,y);\n            // Get SRID and transform geometry\n            var srid = $('#edition-point-coord-crs').val();\n            vertex.transform( 'EPSG:'+srid, editionLayer['ol'].projection );\n            var geometryType = editionLayer.geometryType;\n            if ( !editCtrls[geometryType].handler.point ) {\n                var px = editCtrls[geometryType].handler.layer.getViewPortPxFromLonLat({lon:vertex.x,lat:vertex.y});\n                editCtrls[geometryType].handler.createFeature(px);\n                editCtrls[geometryType].handler.point.geometry.x = vertex.x;\n                editCtrls[geometryType].handler.point.geometry.y = vertex.y;\n                editCtrls[geometryType].handler.point.geometry.clearBounds();\n            } else {\n                editCtrls[geometryType].handler.point.geometry.x = vertex.x;\n                editCtrls[geometryType].handler.point.geometry.y = vertex.y;\n                editCtrls[geometryType].handler.point.geometry.clearBounds();\n\n                displaySegmentsLengthAndAngle(editCtrls[geometryType].handler.layer.features[0].geometry);\n            }\n            editCtrls[geometryType].handler.drawFeature();\n        }\n    }\n\n    // Redraw layers\n    /**\n     *\n     * @param layerId\n     */\n    function redrawLayers( layerId ) {\n        var willBeRedrawnLayerIds = [layerId];\n\n        //check relations\n        if( 'relations' in config ) {\n            for( var rx in config.relations ){\n                // get children layer ids\n                if( rx == layerId ) {\n                    var layerRelations = config.relations[layerId];\n                    for( var lid in layerRelations ) {\n                        var relation = layerRelations[lid];\n                        if ( $.inArray( relation.referencingLayer, willBeRedrawnLayerIds ) != -1 )\n                            continue;\n                        willBeRedrawnLayerIds.push( relation.referencingLayer );\n                    }\n                }\n                // get pivot linked layer ids\n                else if( rx == 'pivot' && layerId in config.relations.pivot) {\n                    var pivotLayers = config.relations.pivot[layerId];\n                    for( var pId in pivotLayers ) {\n                        if ( $.inArray( pId, willBeRedrawnLayerIds ) != -1 )\n                            continue;\n                        willBeRedrawnLayerIds.push( pId );\n                    }\n                }\n                // get parent layer id\n                else {\n                    if ( $.inArray( rx, willBeRedrawnLayerIds ) != -1 )\n                        continue;\n                    var layerRelations = config.relations[rx];\n                    for( var lid in layerRelations ) {\n                        var relation = layerRelations[lid];\n                        if( relation.referencingLayer == layerId )\n                            willBeRedrawnLayerIds.push( rx );\n                    }\n                }\n            }\n        }\n\n        // Effectively redraw layers\n        var redrawnLayerIds = [];\n        while( willBeRedrawnLayerIds.length > 0 ) {\n            var lid = willBeRedrawnLayerIds.shift();\n            var childLayerConfig = lizMap.getLayerConfigById(\n                lid,\n                config.layers,\n                'id'\n            );\n\n            // if no config\n            if( !childLayerConfig )\n                continue;\n\n            var qgisName = childLayerConfig[0];\n            childLayerConfig = childLayerConfig[1];\n\n            if (!('geometryType' in childLayerConfig) || childLayerConfig.geometryType == 'none')\n                continue;\n\n            const olLayer = lizMap.mainLizmap.map.getLayerByName(qgisName);\n\n            if (olLayer === undefined || !olLayer.getVisible()) {\n                continue;\n            }\n\n            olLayer.getSource().changed();\n        }\n        return redrawnLayerIds;\n    }\n\n    /**\n     *\n     * @param parentLayerId\n     * @param childLayerId\n     * @param pivotId\n     */\n    function getRelationInfo(parentLayerId, childLayerId, pivotId){\n        if( 'relations' in config && parentLayerId in config.relations) {\n            if (pivotId) {\n                const pivotAttributeLayerConf = lizMap.getLayerConfigById( pivotId, lizMap.config.attributeLayers, 'layerId' );\n                if(pivotAttributeLayerConf && pivotAttributeLayerConf[1]?.pivot == 'True'){\n                    var pivot = config.relations.pivot[pivotId]\n                    if (pivot) {\n                        // validate pivot reference\n                        var validRelation = true;\n                        Object.keys(pivot).forEach((k)=>{\n                            if(validRelation){\n                                if(k == parentLayerId || k == childLayerId){\n                                    var pvRelation = config.relations[k] || [];\n                                    var pr = pvRelation.filter((rel)=>{\n                                        return rel.referencingLayer == pivotId;\n                                    })\n                                    if(pr.length == 0) validRelation = false;\n                                } else validRelation = false;\n                            }\n                        })\n                        if(validRelation) return pivot;\n                    }\n                }\n            } else {\n                var layerRelations = config.relations[parentLayerId];\n                for( var lridx in layerRelations ) {\n                    var relation = layerRelations[lridx];\n                    if (relation.referencingLayer == childLayerId) {\n                        return relation;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     *\n     */\n    function finishEdition() {\n\n        // Put old OL2 map at bottom\n        lizMap.mainLizmap.newOlMap = true;\n\n        // Lift the constraint on edition\n        lizMap.editionPending = false;\n        $('#mapmenu .edition').removeClass('edition-pending');\n\n        // Deactivate edition map controls\n        if( editCtrls ){\n            editionLayer.deactivateControl();\n            $('#edition-geomtool-container button i').removeClass('line');\n            $('#edition-geomtool-container').hide();\n            editCtrls.modify.mode = OpenLayers.Control.ModifyFeature.RESHAPE;\n            editCtrls.modify.createVertices = true;\n            editCtrls.panel.deactivate();\n        }\n\n        // Remove messages\n        $('#lizmap-edition-message').remove();\n\n        // Empty and hide tables\n        $('#edition-children-container').hide().html('');\n\n        // Empty and hide form and tools\n        $('#edition-form-container').hide().html('');\n        $('#edition-waiter').hide();\n\n        // Display create tools back if there are eligible layers\n        if( hasCreateLayers() ){\n            $('#edition-creation').show();\n        }else{\n            $('#edition-modification-msg').show();\n            $('#dock-close').click();\n        }\n\n        // Hide edition tabs\n        $('.edition-tabs').hide();\n\n        // Display digitization tab back\n        $('.edition-tabs a[href=\"#tabdigitization\"]').show();\n    }\n\n    // Is there at least one layer with creation capability?\n    /**\n     *\n     */\n    function hasCreateLayers(){\n        if ('editionLayers' in config) {\n            for (const name in config.editionLayers) {\n                const editionLayer = config.editionLayers[name];\n                if(editionLayer.capabilities.createFeature === \"True\"){\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Sleep function\n     * @param {number} sleepDuration Duration to wait (milliseconds)\n     * @returns {Promise}\n     */\n    const editingDelay = sleepDuration => new Promise((resolve, reject) => {\n        setTimeout(_ => resolve(), sleepDuration)\n    });\n\n\n    /**\n     *\n     */\n    function addEditionControls() {\n        // Edition layers\n        if ('editionLayers' in config) {\n            // fill in the combobox containing editable layers\n            var elconfig = {};\n            var elk = [];\n            for (var alName in config.editionLayers) {\n                var al = config.editionLayers[alName];\n                if (\n                    al.capabilities.createFeature == \"False\"\n                 && al.capabilities.modifyAttribute == \"False\"\n                 && al.capabilities.deleteFeature == \"False\"\n                 && al.capabilities.modifyGeometry == \"False\"\n                ) {\n                    delete config.editionLayers[alName];\n                    continue;\n                }\n\n                if (\n                    alName in config.layers\n                    && al.capabilities.createFeature == \"True\"\n                ) {\n                    var alConfig = config.layers[alName];\n                    elconfig[al.order] = {\n                        id: alConfig.id,\n                        title: alConfig.title,\n                        order: al.order\n                    };\n                    elk.push(al.order);\n                }\n            }\n            // Sort by order (int)\n            elk.sort(function (a, b) {\n                return a - b;\n            });\n            for ( var i in elk ) {\n                var alConfig = elconfig[elk[i]];\n                $('#edition-layer').append('<option value=\"'+alConfig.id+'\">'+alConfig.title+'</option>');\n            }\n            if( hasCreateLayers() ){\n                $('#edition-modification-msg').hide();\n            }\n            else{\n                $('#edition-creation').hide();\n            }\n\n            editionLayer.createLayers();\n            var editLayer = editionLayer.ol;\n\n            // initialize controls\n            editCtrls = {\n                panel: new OpenLayers.Control({\n                    type: OpenLayers.Control.TYPE_TOOL,\n                    eventListeners: {\n                        activate: function( evt ) {\n                            lizMap.deactivateToolControls( evt );\n                        },\n                        deactivate: function( evt ) {\n                            for ( var c in editCtrls ) {\n                                if ( c != 'panel' && editCtrls[c].active )\n                                    editCtrls[c].deactivate();\n                            }\n                        }\n                    }\n                }),\n                point: new OpenLayers.Control.DrawFeature(editLayer,\n                    OpenLayers.Handler.Point,{\n                        eventListeners: {\n                            activate: activateDrawFeature,\n                            deactivate: deactivateDrawFeature\n                        }\n                    }),\n                line: new OpenLayers.Control.DrawFeature(editLayer,\n                    OpenLayers.Handler.Path,{\n                        eventListeners: {\n                            activate: activateDrawFeature,\n                            deactivate: deactivateDrawFeature\n                        }\n                    }),\n                polygon: new OpenLayers.Control.DrawFeature(editLayer,\n                    OpenLayers.Handler.Polygon,{\n                        eventListeners: {\n                            activate: activateDrawFeature,\n                            deactivate: deactivateDrawFeature\n                        }\n                    }),\n                modify: new OpenLayers.Control.ModifyFeature(editLayer),\n                reshape: new OpenLayers.Control.Split({layer:editLayer,eventListeners: {aftersplit:afterReshapeSpliting}}),\n                featsplit: new OpenLayers.Control.Split({\n                    layer:editLayer,\n                    eventListeners: {\n                        beforesplit:beforeFeatureSpliting,\n                        aftersplit:afterFeatureSpliting\n                    }})\n            };\n            for ( var ctrl in editCtrls ) {\n                if ( ctrl != 'panel' )\n                    editCtrls[ctrl].events.on({\n                        activate: function( evt ){\n                            evt.object.layer.setVisibility(true);\n                        },\n                        deactivate: function( evt ){\n                            evt.object.layer.setVisibility(false);\n                        }\n                    });\n                map.addControls([editCtrls[ctrl]]);\n            }\n            controls['edition'] = editCtrls.panel;\n\n\n            // edit layer events\n            editLayer.events.on({\n\n                featureadded: function() {\n                    // Deactivate draw control\n                    if( !editCtrls )\n                        return false;\n                    var geometryType = editionLayer.geometryType;\n                    var drawWasActivated = editCtrls[geometryType].active;\n                    if (drawWasActivated)\n                        editCtrls[geometryType].deactivate();\n\n                    // Get feature\n                    var feat = editLayer.features[0];\n\n                    // Update form geometry field from added geometry\n                    updateGeometryColumnFromFeature( feat );\n\n                    // Activate modify control\n                    if (drawWasActivated || editionLayer['config'].capabilities.modifyGeometry == \"True\"){\n                        // activate edition\n                        editCtrls.panel.activate();\n                        // then modify\n                        editCtrls.modify.activate();\n                        $('#edition-geomtool-nodetool').click();\n                        editCtrls.modify.selectFeature( feat );\n                        if (geometryType === 'line'){\n                            $('#edition-geomtool-container button i').addClass('line');\n                        }\n                        if (geometryType !== 'point'){\n                            $('#edition-geomtool-container').show();\n                        }\n                    }\n\n                    // Display form tab and hide tool to handle coords for point geometry\n                    // TODO : allow use of coords tool when editing point\n                    if (geometryType === 'point') {\n                        $('.edition-tabs a[href=\"#tabform\"]').tab('show');\n                        $('#handle-point-coord').hide();\n                    }\n\n                    // Inform user he can now modify\n                    addEditionMessage(lizDict['edition.select.modify.activate'],'info',true);\n                },\n\n                featuremodified: function(evt) {\n                    if ( evt.feature.geometry == null )\n                        return;\n                    // Update form geometry field from added geometry\n                    updateGeometryColumnFromFeature( evt.feature );\n\n                },\n\n                featureselected: function(evt) {\n                    if ( evt.feature.geometry == null )\n                        return;\n\n                },\n\n                featureunselected: function(evt) {\n                    if ( evt.feature.geometry == null )\n                        return;\n\n                    updateGeometryColumnFromFeature(evt.feature);\n                },\n\n                sketchmodified: function(evt) {\n                    // Force drawing point on geolocation position\n                    if ($('#edition-point-coord-geolocation').is(':checked')){\n                        var [lon, lat] = lizMap.mainLizmap.geolocation.getPositionInCRS(editionLayer['ol'].projection);\n                        evt.vertex.x = lon;\n                        evt.vertex.y = lat;\n                    }else{\n                        var vertex = evt.vertex.clone();\n                        displayCoordinates(vertex);\n                    }\n\n                    displaySegmentsLengthAndAngle(evt.feature.geometry);\n                },\n\n                vertexmodified: function(evt) {\n                }\n            });\n\n            $('#edition-draw').click(async function(){\n                // Do nothing if not enabled\n                if ( $(this).hasClass('disabled') )\n                    return false;\n                // Deactivate previous edition\n                if( lizMap.editionPending){\n                    // Show editing dock\n                    document.querySelector('li.edition:not(.active) #button-edition')?.click();\n\n                    // Display a confirmation message\n                    // We need to add a delay in order to show the editing dock\n                    // If not the confirm message is displayed before the editing dock is shown\n                    await editingDelay(10);\n                    if ( !confirm( lizDict['edition.confirm.cancel'] ) ) {\n                        return false;\n                    }\n\n                    finishEdition();\n                    editionLayer.clear();\n                }\n\n                // Activate edition\n                editCtrls.panel.activate();\n\n                // Launch edition to gather edition layer info\n                launchEdition( $('#edition-layer').val(), null);\n                return false;\n            });\n\n            $('#edition-point-coord-form').submit(function(){\n                return false;\n            });\n            $('#edition-point-coord-crs').change(function(){\n                if (editCtrls[editionLayer.geometryType].handler.point !== null) {\n                    var vertex = editCtrls[editionLayer.geometryType].handler.point.geometry.clone();\n                    displayCoordinates(vertex);\n                }\n            });\n            $('#edition-point-coord-x').keyup(keyUpPointCoord);\n            $('#edition-point-coord-y').keyup(keyUpPointCoord);\n            $('#edition-point-coord-geolocation').change(function(){\n                if ( $(this).is(':checked') ) {\n                    $('#edition-point-coord-x').attr('disabled','disabled');\n                    $('#edition-point-coord-y').attr('disabled','disabled');\n\n                    if (lizMap.mainLizmap.geolocation.isTracking){\n                        var geometryType = editionLayer.geometryType;\n                        var [lon, lat] = lizMap.mainLizmap.geolocation.getPositionInCRS(editionLayer['ol'].projection);\n                        if (lon && lat){\n                            var px = editCtrls[geometryType].handler.layer.getViewPortPxFromLonLat({ lon: lon, lat: lat });\n                            editCtrls[geometryType].handler.modifyFeature(px);\n\n                            // Set X and Y input with geolocation position value as it is more precise than position given by edit controls\n                            displayCoordinates(new OpenLayers.Geometry.Point(lon, lat));\n                        }\n                    }\n                } else {\n                    $('#edition-point-coord-x').removeAttr('disabled');\n                    $('#edition-point-coord-y').removeAttr('disabled');\n                }\n                lizMap.mainLizmap.geolocation.isLinkedToEdition = $(this).is(':checked');\n            });\n            $('#edition-point-coord-add').click(function(){\n                var geometryType = editionLayer.geometryType;\n                if (geometryType != 'point' && editCtrls[geometryType].handler.point) {\n                    var node = editCtrls[geometryType].handler.point.geometry;\n                    editCtrls[geometryType].handler.insertXY(node.x, node.y);\n                }\n            });\n            $('#edition-point-coord-submit').click(function(){\n                var geometryType = editionLayer.geometryType;\n\n                // Assert we have a geometry\n                if (editCtrls[geometryType].handler.getGeometry()){\n                    if (geometryType === 'point') {\n                        // Take average point if mode is enabled\n                        if (lizMap.mainLizmap.geolocationSurvey.averageRecordMode && lizMap.mainLizmap.geolocationSurvey.positionAverageInMapCRS !== undefined){\n                            editCtrls[geometryType].handler.point.geometry.x = lizMap.mainLizmap.geolocationSurvey.positionAverageInMapCRS[0];\n                            editCtrls[geometryType].handler.point.geometry.y = lizMap.mainLizmap.geolocationSurvey.positionAverageInMapCRS[1];\n                            editCtrls[geometryType].handler.drawFeature();\n                        }\n                        editCtrls[geometryType].handler.finalize();\n                    } else {\n                        editCtrls[geometryType].handler.finishGeometry();\n                    }\n                }\n            });\n\n            $('#edition-geomtool-restart-drawing').click(function(){\n                if ( !confirm( lizDict['edition.confirm.restart-drawing'] ) ) {\n                    return false;\n                }\n\n                var ctrl = editCtrls[editionLayer.geometryType];\n                // Check drawing is active\n                if (ctrl.active)\n                    return false;\n\n                // Disable every modifying geometry controls\n                editCtrls.featsplit.deactivate();\n                editCtrls.reshape.deactivate();\n                editCtrls.modify.mode = OpenLayers.Control.ModifyFeature.RESHAPE;\n                editCtrls.modify.createVertices = true;\n                editCtrls.modify.deactivate();\n                editCtrls.panel.deactivate();\n                // Clear edition layers\n                editionLayer.clearLayers();\n                // activate drawing control\n                ctrl.activate();\n            });\n\n            $('#edition-geomtool-nodetool').click(function(){\n                editCtrls.reshape.deactivate();\n                editCtrls.featsplit.deactivate();\n                editCtrls.modify.mode = OpenLayers.Control.ModifyFeature.RESHAPE;\n                editCtrls.modify.createVertices = true;\n                editCtrls.modify.activate();\n                var feat = editionLayer.getFeature();\n                if (feat.geometry) {\n                    // we unselect then select, to trigger corresponding events\n                    if ( editCtrls.modify.feature )\n                        editCtrls.modify.unselectFeature( feat );\n                    editCtrls.modify.selectFeature( feat );\n                }\n            });\n            $('#edition-geomtool-drag').click(function(){\n                editCtrls.reshape.deactivate();\n                editCtrls.featsplit.deactivate();\n                editCtrls.modify.mode = OpenLayers.Control.ModifyFeature.DRAG;\n                editCtrls.modify.createVertices = false;\n                editCtrls.modify.activate();\n                var feat = editionLayer.getFeature();\n                if (feat) {\n                    // we unselect then select, to trigger corresponding events\n                    if ( editCtrls.modify.feature )\n                        editCtrls.modify.unselectFeature( feat );\n                    editCtrls.modify.selectFeature( feat );\n                }\n            });\n            $('#edition-geomtool-rotate').click(function(){\n                editCtrls.reshape.deactivate();\n                editCtrls.featsplit.deactivate();\n                editCtrls.modify.mode = OpenLayers.Control.ModifyFeature.ROTATE;\n                editCtrls.modify.createVertices = false;\n                editCtrls.modify.activate();\n                var feat = editionLayer.getFeature();\n                if (feat) {\n                    // we unselect then select, to trigger corresponding events\n                    if ( editCtrls.modify.feature )\n                        editCtrls.modify.unselectFeature( feat );\n                    editCtrls.modify.selectFeature( feat );\n                }\n            });\n            $('#edition-geomtool-reshape').click(function(){\n                var feat = editionLayer.getFeature();\n                if (feat && editCtrls.modify.feature) {\n                    editCtrls.modify.unselectFeature(feat);\n                }\n                editCtrls.modify.deactivate();\n                editCtrls.featsplit.deactivate();\n                editCtrls.reshape.activate();\n            });\n\n            $('#edition-geomtool-split').click(function(){\n                var feat = editionLayer.getFeature();\n                if (feat && editCtrls.modify.feature) {\n                    editCtrls.modify.unselectFeature(feat);\n                }\n                editCtrls.modify.deactivate();\n                editCtrls.reshape.deactivate();\n                editCtrls.featsplit.activate();\n            });\n\n            $('#edition-geomtool-container button, lizmap-reverse-geom').tooltip( {\n                placement: 'top'\n            } );\n\n            // Geolocation\n\n            // Toggle geolocation UI part based on tracking state\n            lizMap.mainEventDispatcher.addListener(\n                () => {\n                    const geolocationIsTracking = lizMap.mainLizmap.geolocation.isTracking;\n                    $('#edition-point-coord-geolocation-group').toggle(geolocationIsTracking);\n                    if (geolocationIsTracking){\n                        if ($('#edition-point-coord-geolocation').is(':checked')){\n                            $('#edition-point-coord-x').attr('disabled', 'disabled');\n                            $('#edition-point-coord-y').attr('disabled', 'disabled');\n                        }\n                    }else{\n                        $('#edition-point-coord-x').removeAttr('disabled');\n                        $('#edition-point-coord-y').removeAttr('disabled');\n                    }\n                },\n                'geolocation.isTracking'\n            );\n\n            // Make modifyFeature follow geolocation when active\n            lizMap.mainEventDispatcher.addListener(\n                () => {\n                    if (editionLayer && ('config' in editionLayer) ) {\n                        $('#edition-point-coord-geolocation').removeAttr('disabled');\n                        var geometryType = editionLayer.geometryType;\n                        if ($('#edition-point-coord-geolocation').is(':checked') && editCtrls[geometryType].active ) {\n                            // Move point\n                            var [lon, lat] = lizMap.mainLizmap.geolocation.getPositionInCRS(editionLayer['ol'].projection);\n                            var px = editCtrls[geometryType].handler.layer.getViewPortPxFromLonLat({ lon: lon, lat: lat});\n                            editCtrls[geometryType].handler.modifyFeature(px);\n\n                            displayCoordinates(new OpenLayers.Geometry.Point(lon, lat));\n                        }\n                    }\n                },\n                'geolocation.position'\n            );\n\n        } else {\n            $('#edition').parent().remove();\n            $('#button-edition').remove();\n            $('#edition-form-container').hide();\n        }\n    }\n\n    // Display coordinates. Vertex is in map projection\n    /**\n     *\n     * @param vertex\n     */\n    function displayCoordinates(vertex){\n        // Get SRID and transform geometry\n        var srid = $('#edition-point-coord-crs').val();\n        var displayProj = new OpenLayers.Projection('EPSG:' + srid);\n        vertex.transform(editionLayer['ol'].projection, displayProj);\n\n        if (displayProj.getUnits() === 'degrees') {\n            $('#edition-point-coord-x').val(vertex.x.toFixed(6));\n            $('#edition-point-coord-y').val(vertex.y.toFixed(6));\n        } else {\n            $('#edition-point-coord-x').val(vertex.x.toFixed(3));\n            $('#edition-point-coord-y').val(vertex.y.toFixed(3));\n        }\n    }\n\n    /**\n     *\n     * @param components\n     * @param projection\n     * @param showTotal\n     */\n    function displaySegmentsLength(components, projection, showTotal){\n        $('#edition-segment-length').parents('.control-group').removeClass('hidden');\n\n        const componentsCount = components.length;\n        const lastSegmentLength = (new OpenLayers.Geometry.LineString([components[componentsCount - 2], components[componentsCount - 1]])).getGeodesicLength(projection);\n\n        if (showTotal){\n            let allSegmentsLength = 0;\n\n            if (componentsCount > 1) {\n                for (let index = 0; index < componentsCount - 1; index++) {\n                    let line = new OpenLayers.Geometry.LineString([components[index], components[index + 1]]);\n                    allSegmentsLength += line.getGeodesicLength(projection);\n                }\n            } else {\n                allSegmentsLength = lastSegmentLength;\n            }\n            $('#edition-segment-length').text(lastSegmentLength.toFixed(3) + ' / ' + allSegmentsLength.toFixed(3));\n        }else{\n            $('#edition-segment-length').text(lastSegmentLength.toFixed(3));\n\n        }\n\n        lizMap.mainLizmap.edition.lastSegmentLength = lastSegmentLength.toFixed(3);\n    }\n\n    /*\n    * Display the angle ABC between three points (in degrees)\n    *\n    * A first point, ex: {x: 0, y: 0}\n    * B center point\n    * C second point\n    */\n    /**\n     *\n     * @param A\n     * @param B\n     * @param C\n     */\n    function displayAngleBetweenThreePoints(A, B, C){\n        $('#edition-segment-angle').parents('.control-group').removeClass('hidden');\n\n        const AB = Math.sqrt(Math.pow(B.x - A.x, 2) + Math.pow(B.y - A.y, 2));\n        const BC = Math.sqrt(Math.pow(B.x - C.x, 2) + Math.pow(B.y - C.y, 2));\n        const AC = Math.sqrt(Math.pow(C.x - A.x, 2) + Math.pow(C.y - A.y, 2));\n        let angleInDegrees = (Math.acos((BC * BC + AB * AB - AC * AC) / (2 * BC * AB)) * 180)/Math.PI;\n\n        if (isNaN(angleInDegrees)){\n            angleInDegrees = 0;\n        }\n\n        $('#edition-segment-angle').text(angleInDegrees.toFixed(2));\n    }\n\n    // Display drawing segment length and angle when eligible\n    /**\n     *\n     * @param drawingGeom\n     */\n    function displaySegmentsLengthAndAngle(drawingGeom){\n        if (drawingGeom.CLASS_NAME === \"OpenLayers.Geometry.LineString\"\n            && drawingGeom.components\n            && drawingGeom.components.length > 1) {\n            const components = drawingGeom.components;\n            const componentsLength = components.length;\n\n            displaySegmentsLength(\n                components,\n                editionLayer['ol'].projection,\n                true\n            );\n\n            if (componentsLength > 2) {\n                displayAngleBetweenThreePoints(components[componentsLength - 1], components[componentsLength - 2], components[componentsLength - 3]);\n            }\n        } else if (drawingGeom.CLASS_NAME === \"OpenLayers.Geometry.Polygon\"\n            && drawingGeom.components\n            && drawingGeom.components[0].components.length > 2) {\n            const clonedComponents = drawingGeom.clone().components[0].components;\n            clonedComponents.pop();\n            const clonedComponentsLength = clonedComponents.length;\n\n            displaySegmentsLength(\n                clonedComponents,\n                editionLayer['ol'].projection,\n                false\n            );\n\n            if (clonedComponentsLength > 2) {\n                displayAngleBetweenThreePoints(clonedComponents[clonedComponentsLength - 1], clonedComponents[clonedComponentsLength - 2], clonedComponents[clonedComponentsLength - 3])\n            }\n        }\n    }\n\n    /**\n     *\n     */\n    function cancelEdition(){\n        // Deactivate previous edition\n        finishEdition();\n\n        // back to parent\n        if ( editionLayer.canEditParentFeature()) {\n            launchEditionOfParent();\n        } else {\n            editionLayer.clear();\n            // trigger edition form closed\n            lizMap.events.triggerEvent(\n                'lizmapeditionformclosed'\n            );\n        }\n    }\n\n    // Start edition of a new feature or an existing one\n    /**\n     *\n     * @param aLayerId\n     * @param aFid\n     * @param aParent\n     * @param aCallback\n     */\n    function launchEdition( aLayerId, aFid, aParent, aCallback ) {\n        var editedFeature = new FeatureEditionData(aLayerId, null, null);\n\n        // Get parent relation\n        var parentInfo = null;\n        if (aParent != null && ('layerId' in aParent) && ('feature' in aParent)) {\n            var parentLayerId = aParent['layerId'];\n            var parentFeat = aParent['feature'];\n            var pivotId = aParent['pivotId']\n            if ('relations' in config &&\n                parentLayerId in config.relations) {\n                var relation = getRelationInfo(parentLayerId, aLayerId, pivotId);\n                if (relation != null && (pivotId ||\n                    relation.referencingLayer == aLayerId)\n                ) {\n                    // the given parent information corresponds to a real parent\n                    // of the feature we want to edit, we take care about it\n\n                    if (lizMap.editionPending && editionLayer['id'] == parentLayerId) {\n                        var formFeatureId = $('#edition-form-container form input[name=\"liz_featureId\"]').val();\n                        var formLayerId = $('#edition-form-container form input[name=\"liz_layerId\"]').val();\n                        if (formLayerId == parentLayerId && formFeatureId == parentFeat.id.split('.').pop()) {\n                            // the current edited feature is the parent of the\n                            // feature we want to edit, let's retrieve its current data\n                            parentInfo = editionLayer.currentFeature;\n                            parentInfo.relation = relation;\n                            parentInfo.feature = parentFeat;\n                            if (pivotId) parentInfo.pivot = pivotId;\n                            editedFeature.setParentToEditAfterSave(parentInfo);\n                            // and clear edition context\n                            finishEdition();\n                        }\n                    }\n\n                    if (!parentInfo) {\n                        // let's store parent data into a FeatureEditionData\n                        parentInfo = new FeatureEditionData(parentLayerId, parentFeat, relation);\n                        if (pivotId) parentInfo.pivot = pivotId;\n                        editedFeature.parent = parentInfo;\n                    }\n                }\n            }\n        }\n\n        return internalLaunchEdition(editedFeature, aFid, aCallback);\n    }\n\n    /**\n     *\n     */\n    function launchEditionOfParent() {\n        var parentInfo = editionLayer['parent'];\n        var parentFeat = parentInfo.feature;\n\n        return internalLaunchEdition(parentInfo, parentFeat.id.split('.').pop());\n    }\n\n\n    /**\n     *\n     * @param {FeatureEditionData} editedFeature\n     * @param aFid\n     * @param {Function} aCallback\n     * @returns {boolean}\n     */\n    async function internalLaunchEdition(editedFeature, aFid, aCallback) {\n\n        // Deactivate previous edition when the feature to edit has no\n        // relation to the current edited feature\n        if (lizMap.editionPending) {\n            // Show editing dock\n            document.querySelector('li.edition:not(.active) #button-edition')?.click();\n\n            // Display a confirmation message\n            // We need to add a delay in order to show the editing dock\n            // If not the confirm message is displayed before the editing dock is shown\n            await editingDelay(10);\n            if ( !confirm( lizDict['edition.confirm.cancel'] ) ) {\n                return false;\n            }\n\n            // Finish editing\n            finishEdition();\n        }\n\n\n        editionLayer.clear();\n\n        // Check if edition is configured in lizmap\n        if ( !('editionLayers' in config) )\n            return false;\n\n        // Get edition map controls\n        if( !editCtrls )\n            return false;\n\n        lizMap.editionPending = true;\n        $('#mapmenu .edition').addClass('edition-pending');\n\n        // check that layers for edition are there\n        editionLayer.createLayers();\n\n        // Initialize edition data\n        var getLayer = lizMap.getLayerConfigById( editedFeature.layerId, config.editionLayers, 'layerId' );\n        if (!getLayer) {\n            lizMap.editionPending = false;\n            $('#mapmenu .edition').removeClass('edition-pending');\n            return false;\n        }\n\n        editedFeature.config = getLayer[1];\n\n        editionLayer.currentFeature = editedFeature;\n\n        // Check if layer is spatial\n        var geometryType = editedFeature.geometryType;\n        if( geometryType in editCtrls ){\n            editionLayer.setDrawControl(editCtrls[geometryType]);\n        }\n\n        // Get form and display it\n        getEditionForm( aFid, aCallback );\n\n        editionLayer.restoreSplitFeatures();\n\n        // Hide bottom dock\n        $('#bottom-dock').trigger('mouseleave');\n\n        return true;\n    }\n\n    /*\n     * Get edition form from service\n     * @param featureId Feature id to edit : in null-> create feature\n     */\n    /**\n     *\n     * @param featureId\n     * @param aCallback\n     */\n    function getEditionForm( featureId, aCallback ){\n\n        $('#edition-waiter').show();\n        $('#edition-form-container').hide();\n\n        // Get edition type\n        editionType = featureId ? 'modifyFeature' : 'createFeature';\n\n        // Deactivate previous form\n        var originalForm = $('#edition-form-container form');\n        if ( originalForm.length != 0 ) {\n            originalForm.unbind('submit');\n        }\n\n        // Build params\n        var params = Object.assign({}, globalThis['lizUrls'].params, {\n            layerId: editionLayer['id']\n        })\n        if (featureId) {\n            params['featureId'] = featureId;\n        }\n\n        // Get form via web service\n        var service = globalThis['lizUrls'].edition + '?' + new URLSearchParams(params);\n        // TODO: replaced by Utils.fetch\n        fetch(service.replace('getFeature', editionType))\n            .then(response => {\n                if (response.ok) {\n                    return response;\n                }\n                return Promise.reject('Invalid response: '+response.status+' '+response.statusText);\n            }).then(response => {\n                const contentType = response.headers.get('Content-Type') || '';\n\n                if (contentType.includes('text/plain')) {\n                    return response.text();\n                }\n                return Promise.reject('Invalid response content: '+contentType);\n            }).then(data => {\n                // Activate some controls\n                if( !editCtrls )\n                    return false;\n                if ( !editionLayer['id'] )\n                    return false;\n\n                // Hide drawfeature controls : they will go back when finishing edition or canceling\n                $('#edition-modification-msg').hide();\n                $('#edition-creation').hide();\n\n                // Show edition tabs\n                $('.edition-tabs').show();\n\n                // Display the form: after the previous show to be sure\n                // tabs visibility test (see: ) return correct response\n                // See \"Check li (tabs) visibility\" in displayEditionForm method\n                displayEditionForm( data );\n\n                // Put old OL2 map on top and synchronize position with new OL map\n                lizMap.mainLizmap.newOlMap = false;\n\n                if( aCallback )\n                    aCallback( editionLayer['id'], featureId );\n            })\n            .catch(e => {\n                console.error(e);\n\n                // Deactivate edition\n                finishEdition();\n\n                // Display the message\n                addEditionMessage(lizDict['edition.message.error.fetch.form'], 'error', true);\n            });\n    }\n\n    /*\n     * Activate combobox widget\n     *\n     */\n    /**\n     *\n     * @param selectCombobox\n     */\n    function activateCombobox( selectCombobox ){\n        selectCombobox.combobox({\n            \"minLength\": 1,\n            \"position\": { my : \"left bottom\", position: \"flip\" },\n            \"selected\": function(evt, ui){\n                if ( ui.item ) {\n                    var self = $(this);\n                    var uiItem = $(ui.item);\n                    window.setTimeout(function(){\n                        self.val(uiItem.val()).change();\n                    }, 1);\n                }\n            }\n        });\n        selectCombobox.parent().find('span > input')\n            .removeClass('label ui-corner-left ui-state-default ui-widget-content ui-widget');\n    }\n\n    /*\n     * Activate autocomplete widget\n     *\n     */\n    /**\n     *\n     * @param selectAutocomplete\n     */\n    function activateAutocomplete( selectAutocomplete ){\n        var wrapper = $( \"<span>\" )\n            .addClass( \"custom-autocomplete\" )\n            .insertAfter( selectAutocomplete );\n        var selected = selectAutocomplete.children( \":selected\" ),\n            value = selected.val() ? selected.text() : \"\";\n        var input = $( \"<input>\" )\n            .appendTo( wrapper )\n            .val( value )\n            .attr( \"title\", \"\" )\n            .addClass( \"custom-autocomplete-input\" )\n            .autocomplete({\n                source: function( request, response ) {\n                // Get the unaccentuated version of the requested term\n                    let unaccentuatedTerm = (request.term) ? request.term.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : request.term;\n                    var matcher = new RegExp( $.ui.autocomplete.escapeRegex(unaccentuatedTerm), \"i\" );\n                    response( selectAutocomplete.children( \"option\" ).map(function() {\n                        let text = $( this ).text();\n                        // Remove accentuated characters\n                        text = text.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n                        // Compare the normalized requested term to the normalized option text\n                        if (this.value && ( !unaccentuatedTerm || matcher.test(text) )) {\n                            return {\n                                label: text,\n                                value: text,\n                                option: this\n                            };\n                        }\n                    }) );\n                }\n            });\n        input.autocomplete( \"widget\" ).css(\"z-index\",\"1050\");\n\n        // Add delay and minimum length to avoid performance issues\n        // for big datasets\n        input.autocomplete('option', 'delay', 300);\n        input.autocomplete('option', 'minLength', 3);\n\n\n        input.attr('name', selectAutocomplete.attr('name'));\n        selectAutocomplete.attr('name', input.attr('name')+'_source');\n        selectAutocomplete.hide();\n    }\n\n    /*\n     * Display the edition form\n     * @param {string} data  html corresponding to the form or the result of a submit\n     */\n    /**\n     *\n     * @param data\n     */\n    function displayEditionForm (data) {\n        // Firstly does the edition-form-container already has a form ?\n        var oldSerializeArray = $('#edition-form-container form').serializeArray();\n\n        // Add data, erase the current form\n        var formContainer = $('#edition-form-container');\n        formContainer.html(data);\n        // the new form\n        var form = $('#edition-form-container form#jforms_view_edition');\n\n        // Response contains a form\n        if ( form.length != 0 ) {\n            var newSerializeArray = form.serializeArray();\n\n            // Get edition type from form data\n            var formFeatureId = form.find('input[name=\"liz_featureId\"]').val();\n            editionType = formFeatureId ? 'modifyFeature' : 'createFeature';\n\n            // Keep a copy of original geometry data\n            if( editionLayer['spatial'] && editionType == 'modifyFeature' ){\n                var gColumn = form.find('input[name=\"liz_geometryColumn\"]').val();\n                if( gColumn != '' ){\n                    var originalGeom = form.find('input[name=\"'+gColumn+'\"]').val();\n                    // XXX: liz_wkt is not used. remove it?\n                    $('#edition-hidden-form input[name=\"liz_wkt\"]').val( originalGeom );\n                }\n            }\n\n            // Manage child form\n            if ( editionLayer['parent'] != null ){\n                var parentInfo = editionLayer['parent'];\n                var relation = parentInfo['relation'];\n                var relationRefField = relation.referencingField;\n                var parentFeatProp = parentInfo['feature'].properties[relation.referencedField];\n                var pivot = parentInfo.pivot;\n                // link feature only when the user is creating a new feature (avoid duplicate associations on pivot)\n                if (pivot && editionType == 'createFeature') {\n                    // get referencing field\n                    var referencedField = config.relations[parentInfo.layerId].filter((rel) => {\n                        return rel.referencingLayer == pivot;\n                    })[0]?.referencedField\n                    if (referencedField){\n                        var parentLayerConf = lizMap.getLayerConfigById(parentInfo.layerId);\n                        if(parentLayerConf[1]){\n                            // add hidden input for manage feature link\n                            var hiddenInput = $('<input type=\"hidden\"></input>')\n                                .attr('id', pivot+'_hidden')\n                                .attr('name', \"liz_pivot\")\n                                .attr('value', pivot+\":\"+parentInfo.layerId+\":\"+parentInfo['feature'].properties[referencedField]);\n                            form.find('div.jforms-hiddens').append(hiddenInput);\n                            var futureLinkInfo = '<div class=\"control-group\"><p id=\"edition-link-pivot\">'+lizDict['edition.link.pivot.add'].replace('%f','<b>'+parentInfo['feature'].properties[referencedField]+'</b>').replace(\"%l\",'<b>'+parentLayerConf[1].title+'</b>')+'</p></div>';\n                            form.find(\".control-group\").last().append(futureLinkInfo);\n                        }\n\n                    }\n                } else {\n                    var select = form.find('select[name=\"'+relationRefField+'\"]');\n                    if( select.length == 1 ){\n                        // select the option via jquery (and fire event with \"change\", will update depending controls)\n                        select.val(parentFeatProp).change();\n                        // create a disabled input with selected option value (will look alike a select)\n                        let readOnlyInput4Select = $('<input type=\"text\" disabled value=\"'+$(\"select[name=\"+relationRefField+\"] option:selected\").html() +'\" />');\n                        select.parent().append(readOnlyInput4Select);\n                        // hide the select, we don't want to see it, but it need to still be enable for controls that depends of its value\n                        select.addClass('hide');\n                    } else {\n                        var input = form.find('input[name=\"'+relationRefField+'\"]');\n                        if( input.length == 1 && input.attr('type') != 'hidden'){\n                            // Disable the select, the value will be stored in an hidden input\n                            input.val(parentFeatProp)\n                                .attr('disabled','disabled');\n                            // Create hidden input to store value because the select is disabled\n                            var hiddenInput = $('<input type=\"hidden\"></input>')\n                                .attr('id', input.attr('id')+'_hidden')\n                                .attr('name', relationRefField)\n                                .attr('value', parentFeatProp);\n                            form.find('div.jforms-hiddens').append(hiddenInput);\n                            // Disable required constraint\n                            jFormsJQ.getForm($('#edition-form-container form').attr('id'))\n                                .getControl(relationRefField)\n                                .required=false;\n                        }\n                        else\n                            input.val(parentFeatProp);\n                    }\n                }\n\n            }\n\n            // Create combobox based on RelationValue with fieldEditable\n            var selectComboboxes = form.find('select.combobox:not(:disabled)');\n            for( var i=0, len=selectComboboxes.length; i<len; i++ ) {\n                var selectCombobox = $(selectComboboxes[i]);\n                activateCombobox(selectCombobox);\n            }\n            var selectAutocompletes = form.find('select.autocomplete:not(:disabled)');\n            for( var i=0, len=selectAutocompletes.length; i<len; i++ ) {\n                var selectAutocomplete = $(selectAutocompletes[i]);\n                activateAutocomplete(selectAutocomplete);\n            }\n\n            // If the form has been reopened after a successful save, refresh data\n            var formStatus = form.find('input[name=\"liz_status\"]').val();\n            if( formStatus == '0' ) {\n                if ( oldSerializeArray.length != 0 ){\n                    var layerId = editionLayer['id'];\n\n                    // Trigger event\n                    var ev = 'lizmapeditionfeaturecreated';\n                    if( editionType == 'modifyFeature' )\n                        ev = 'lizmapeditionfeaturemodified';\n\n                    lizMap.events.triggerEvent(\n                        ev,\n                        { 'layerId': layerId}\n                    );\n\n                    // Redraw layers\n                    redrawLayers( layerId );\n                }\n\n                var geometryType = editionLayer.geometryType;\n                let feat = getFeatureFromGeometryColumn();\n                // Creation for new feature or existing one without geometry\n                if( editionType == 'createFeature' || !feat ){\n                    // Activate drawFeature control only if relevant\n                    if( (editionLayer['config'].capabilities.createFeature == \"True\"\n                      || (!feat && editionLayer['config'].capabilities.modifyGeometry == \"True\"))\n                    && geometryType in editCtrls ){\n                        $('#edition-geomtool-container button i').removeClass('line');\n                        $('#edition-geomtool-container').hide();\n                        editCtrls.modify.mode = OpenLayers.Control.ModifyFeature.RESHAPE;\n                        editCtrls.modify.createVertices = true;\n                        editCtrls.modify.deactivate();\n                        editionLayer.clearLayers();\n                        var ctrl = editCtrls[geometryType];\n                        if ( !ctrl.active ) {\n                            ctrl.activate();\n\n                            if(lizMap.checkMobile()){\n                                addEditionMessage(lizDict['edition.draw.activate.mobile'], 'info', true);\n                            }else{\n                                addEditionMessage(lizDict['edition.draw.activate'],'info',true);\n                            }\n                        }\n                        // Need to get geometry from form and add feature to the openlayer layer\n                        if( feat ){\n                            editionLayer['ol'].addFeatures([feat]);\n                            editCtrls.modify.activate();\n                            $('#edition-geomtool-nodetool').click();\n                            editCtrls.modify.selectFeature( feat );\n                            if (geometryType == 'line')\n                                $('#edition-geomtool-container button i').addClass('line');\n                            if (geometryType != 'point')\n                                $('#edition-geomtool-container').show();\n                        }\n                    } else {\n                        $('.edition-tabs a[href=\"#tabdigitization\"]').hide();\n                    }\n                }\n                // Modification\n                else{\n                    // Activate modification control\n                    if ( editionLayer['config'].capabilities.modifyGeometry == \"True\"\n                    && geometryType in editCtrls ){\n                        // Need to get geometry from form and add feature to the openlayer layer\n                        feat = updateFeatureFromGeometryColumn();\n                        if( feat ){\n                            editCtrls.modify.activate();\n                            $('#edition-geomtool-nodetool').click();\n                            editCtrls.modify.selectFeature( feat );\n                            if (geometryType == 'line')\n                                $('#edition-geomtool-container button i').addClass('line');\n                            if (geometryType != 'point')\n                                $('#edition-geomtool-container').show();\n                        }\n                    }else{\n                        $('.edition-tabs a[href=\"#tabdigitization\"]').hide();\n                    }\n\n                    addEditionMessage(lizDict['edition.select.modify.activate'],'info',true);\n                }\n            }\n\n            // Check tabs visibility\n            // We need to force showing the container before testing li visibility\n            formContainer.show();\n            // Check li (tabs) visibility\n            var visibleTabs = form.children('ul.nav-tabs').find('li').filter(\n                function(){\n                    return $(this).css('display') !== 'none';\n                });\n            if (visibleTabs.length == 0 ) {\n                // No tabs visible, hide the tab content\n                $('#'+form.attr('id')+'-tab-content').hide();\n            } else {\n                // Activate form tabs based on QGIS drag&drop form layout mode\n                form.children('ul.nav-tabs').find('li:first a').click().blur();\n            }\n            // Handle group visibilities based on QGIS drag&drop form layout mode\n            handleGroupVisibilities( form );\n            // Display label for futur action without bootstrap control-label class\n            $('#'+form.attr('id')+'_liz_future_action_label').removeClass('control-label');\n\n            // Handle JS events on form (submit, etc.)\n            handleEditionFormSubmit( form );\n\n            // Send signal\n            lizMap.events.triggerEvent(\"lizmapeditionformdisplayed\",\n                {\n                    'layerId': editionLayer['id'],\n                    'featureId': formFeatureId,\n                    'editionConfig': editionLayer['config']\n                }\n            );\n\n        }\n\n        // Else it means no form has been sent back\n        // We consider it was a successful edition with no option to reopen the form\n        // Or an error has been raised and sent back\n        if ( form.length == 0 ) {\n            controls['edition'].deactivate();\n            controls['edition'].activate();\n            let layerId = editionLayer['id'];\n            let returnedMessage = '';\n            let pkVals = null;\n\n            // Get the newly created or updated feature primary key(s) value(s)\n            if ( data != '' ) {\n                // Get the hidden fields values\n                const hiddenForm = document.querySelector('#edition-form-container form.liz_close_feature_form');\n                if (hiddenForm) {\n                    const closeFeaturePkValsJson = hiddenForm.querySelector('input#liz_close_feature_pk_vals').value;\n\n                    // Parse the JSON containing the primary key(s) value(s)\n                    try {\n                        pkVals = JSON.parse(closeFeaturePkValsJson);\n                        hiddenForm.parentNode.removeChild(hiddenForm);\n                    } catch (e) {\n                        console.error(e);\n                    }\n                }\n\n                // Get the Jelix message if the response data contains one\n                // Only if not already taken from the hidden form\n                // For example when having the error \"Feature not editable\"\n                // TODO: we should not rely on this content to known when to display a message\n                if (data.includes('<ul class=\"jelix-msg\">')) {\n                    returnedMessage = data;\n                }\n            }\n\n            // Trigger event\n            var ev = 'lizmapeditionfeaturecreated';\n            if( editionType == 'modifyFeature' ) {\n                ev = 'lizmapeditionfeaturemodified';\n            }\n            lizMap.events.triggerEvent(ev,\n                { 'layerId': layerId, 'primaryKeys': pkVals}\n            );\n\n            // Redraw layers\n            redrawLayers( layerId );\n\n            // Deactivate edition\n            finishEdition();\n\n            // Display the message in JS\n            if ( returnedMessage != '' ) {\n                // Display the message\n                addEditionMessage( returnedMessage, 'info', true);\n            }\n\n        }\n\n        $('#edition-waiter').hide();\n\n        // Activate edition dock if not yet\n        $('li.edition:not(.active) #button-edition').click();\n\n        // Hide popup\n        if( $('#liz_layer_popup_close').length )\n            $('#liz_layer_popup_close').click();\n        if( $('#mapmenu .nav-list > li.popupcontent > a').length ){\n            if( $('#mapmenu .nav-list > li.popupcontent').hasClass('active') ){\n                $('#button-popupcontent').click();\n                $('div.lizmapPopupContent').remove();\n            }\n        }\n\n        if (form.length == 0) {\n            if (editionLayer.canEditParentFeature()) {\n                // back to parent\n                launchEditionOfParent();\n            } else {\n                editionLayer.clear();\n                lizMap.mainLizmap.map.clearHighlightFeatures();\n                // trigger edition form closed\n                lizMap.events.triggerEvent(\n                    'lizmapeditionformclosed'\n                );\n            }\n        }\n    }\n\n    /**\n     *\n     * @param form\n     */\n    function dynamicGroupVisibilities( form ){\n        const tForm = jFormsJQ.getForm(form.attr('id'));\n\n        // Copy only necessary parameters before fetch\n        const currentFormData = new FormData(tForm.element);\n        const sentFormData = new FormData();\n\n        // Append form parameters for validation\n        sentFormData.append('__form', tForm.selector);\n        sentFormData.append('__formid', tForm.formId);\n        sentFormData.append('__JFORMS_TOKEN__', currentFormData.get('__JFORMS_TOKEN__'));\n\n        // Append form parameters used in expression related to group visibilities\n        for (const depName of tForm.groupDependencies) {\n            for (const value of currentFormData.getAll(depName)) {\n                sentFormData.append(depName, value);\n            }\n        }\n\n        fetch(jFormsJQ.groupVisibilitiesUrl,{\n            method: \"POST\",\n            body: sentFormData\n        }).then(function (response) {\n            return response.json();\n        }).then(function (data) {\n            for (var groupId in data) {\n                var group = $('#' + groupId);\n                if (group.hasClass('tab-pane')) {\n                    // group is tab content\n                    // so manage tab visibility\n                    var tab = form.children('ul.nav-tabs').find('li a[href=\"#' + groupId + '\"]');\n                    var tabParent = tab.parent();\n                    if (data[groupId]) {\n                        // tab has to be visible\n                        if (!tabParent.is(':visible')) {\n                            tabParent.show();\n                        }\n                        var tabContent = $('#' + form.attr('id') + '-tab-content');\n                        if (tabContent.is(':hidden')) {\n                            // the tab content has to be displayed\n                            // because at least one tab is visible\n                            tabContent.show();\n                            tab.click().blur();\n                        }\n                    } else {\n                        // tab will be hidden\n                        if (!tabParent.hasClass('active')) {\n                            // it is not the active one\n                            // just hide it\n                            tabParent.hide();\n                        } else {\n                            if (tabParent.prev(':visible').length > 0) {\n                                // the previous tab is visible\n                                // it can become the new active\n                                tabParent.prev().children('a').first().click().blur();\n                                tabParent.hide();\n                            } else if (tabParent.next(':visible').length > 0) {\n                                // the next tab is visible\n                                // it can become the new active\n                                tabParent.next().children('a').first().click().blur();\n                                tabParent.hide();\n                            } else {\n                                // no siblings tabs are visible\n                                // hide the tab content\n                                tabParent.hide();\n                                $('#' + form.attr('id') + '-tab-content').hide();\n                            }\n                        }\n                    }\n                } else {\n                    // for other groups just hide or show\n                    if (data[groupId]) {\n                        group.show();\n                    } else {\n                        group.hide();\n                    }\n                }\n            }\n        });\n    }\n\n    /**\n     *\n     * @param form\n     */\n    function handleGroupVisibilities( form ){\n        // use jFormsJQ\n        var tForm = jFormsJQ.getForm(form.attr('id'));\n\n        // get group dependencies\n        if (!tForm.groupDependencies)\n            return;\n        var dependencies = tForm.groupDependencies;\n\n        // the form has some dependencies : we put a listener\n        // on these dependencies, so when these dependencies\n        // change, we retrieve the new group visibilities\n        for(var i=0, len=dependencies.length; i< len; i++) {\n            var depName = dependencies[i];\n            var elt = form.find('#'+form.attr('id')+'_'+depName);\n            if (elt.length != 0) {\n                elt.change(function() {\n                    dynamicGroupVisibilities(form);\n                });\n            }\n        }\n    }\n\n    /**\n     *\n     * @param form\n     */\n    function handleEditionFormSubmit( form ){\n        // Detect click on submit buttons\n        editionLayer['submitActor'] = 'submit';\n        form.find('input[type=\"submit\"]').click(function(evt){\n            var subprefix = form.attr('id') + '_' + '_submit' + '_';\n            var submitActor = $(this).attr('id').replace(subprefix, '');\n            editionLayer['submitActor'] = submitActor;\n\n            // Confirm the use of the cancel button\n            if ( submitActor == 'cancel' ) {\n                evt.stopPropagation();\n                if ( confirm( lizDict['edition.confirm.cancel'] ) )\n                    displayEditionForm( '' );\n                return false;\n            }\n        });\n\n        // If needed, copy the geometry from the openlayer feature\n        var feat = editionLayer.getFeature();\n        if (feat) {\n            updateGeometryColumnFromFeature( feat );\n        }\n\n\n        form.submit(function(evt) {\n\n            // Cancel edition if this submit button has been used\n            if(editionLayer['submitActor'] == 'cancel'){\n                cancelEdition();\n                return false;\n            }\n\n            //  check form\n            var msg = checkFormBeforeSubmit(form, evt);\n\n            // save has been canceled because of some errors in the form\n            if (msg === false) {\n                return false;\n            }\n\n            // Some client side errors have been detected in form\n            if( msg != 'ok' ){\n                addEditionMessage( msg, 'info', true);\n                return false;\n            }\n\n            // Set submit button value\n            var submit_hidden_id = form.attr('id') + '_' + '_submit';\n            $('#' + submit_hidden_id).val(editionLayer['submitActor']);\n\n            // send values\n            $('#edition-waiter').show();\n\n            var newFeatureUrl = form.attr('data-new-feature-action');\n            var url = form.attr('action');\n            var featureData = new FormData(form.get(0));\n            var formResult = '';\n\n            var sendFormPromise = sendNewFeatureForm(url, featureData);\n            sendFormPromise.then(function(data) {\n                formResult = data;\n            }).catch(e => {\n                console.error(e);\n                $('#edition-waiter').hide();\n                // Display the message\n                addEditionMessage(lizDict['edition.message.error.send.feature'], 'error', true);\n            });\n            editionLayer.newfeatures.forEach(function(newFeatForm) {\n                sendFormPromise = sendFormPromise.then(() => sendNewFeatureForm(newFeatureUrl, newFeatForm[1]));\n            });\n            sendFormPromise.then(() => {\n                displayEditionForm( formResult );\n            });\n\n            return false;\n        });\n    }\n\n\n    /**\n     *\n     * @param url\n     * @param {FormData} formData\n     * @returns {Promise}\n     */\n    function sendNewFeatureForm(url, formData) {\n        return new Promise(function(resolve, reject) {\n\n            var request = new XMLHttpRequest();\n            request.open(\"POST\", url);\n            request.onload = function() {\n                if (request.status == 200) {\n                    resolve(request.responseText);\n                } else {\n                    reject(new Error(`Nouveau message d'erreur`, { cause: request }));\n                }\n            };\n            request.addEventListener(\"error\", reject);\n            request.addEventListener(\"abort\", reject);\n            request.send(formData);\n        });\n    }\n\n    /**\n     * Check the content of the form\n     * @param {jQuery} form\n     * @param {DOMEvent|null} evt\n     * @returns {string|boolean}\n     */\n    function checkFormBeforeSubmit(form, evt){\n\n        // Jelix checks\n        if (evt) {\n            if (!jFormsJQ._submitListener(evt)) {\n                return false;\n            }\n        }\n        else {\n            form.trigger('jFormsUpdateFields');\n            if (!jFormsJQ.verifyForm(form.get(0))) {\n                return false;\n            }\n        }\n\n        var msg = 'ok';\n        if (\n            editionLayer['spatial']\n            && 'allow_without_geom' in editionLayer['config'].capabilities\n            && editionLayer['config'].capabilities.allow_without_geom == 'False'){\n\n            var gColumn = form.find('input[name=\"liz_geometryColumn\"]').val();\n            var formGeom = form.find('input[name=\"'+gColumn+'\"]').val();\n            if( formGeom.trim() == '' ){\n                msg = lizDict['edition.message.error.no.geometry'];\n            }\n\n        }\n        return msg;\n    }\n\n    /**\n     *\n     * @param feat\n     */\n    function calculateGeometryColumnFromFeature(feat) {\n        if (feat.geometry == null) {\n            return '';\n        }\n\n        if (!editionLayer['ol']) {\n            return '';\n        }\n\n        // Clone passed geometry\n        var geom = feat.geometry.clone();\n\n        // Get SRID and transform geometry\n        var eform = $('#edition-form-container form');\n        var srid = eform.find('input[name=\"liz_srid\"]').val();\n        if (srid != '' && !('EPSG:'+srid in Proj4js.defs)) {\n            Proj4js.defs['EPSG:'+srid] = eform.find('input[name=\"liz_proj4\"]').val();\n        }\n        geom.transform(editionLayer['ol'].projection, 'EPSG:'+srid);\n        return geom;\n    }\n\n\n    /**\n     *\n     * @param feat\n     */\n    function updateGeometryColumnFromFeature( feat ){\n\n        var geom = calculateGeometryColumnFromFeature(feat);\n        if (geom === '') {\n            return false;\n        }\n\n        var eform = $('#edition-form-container form');\n        var srid = eform.find('input[name=\"liz_srid\"]').val();\n        if (srid != '' && !('EPSG:'+srid in Proj4js.defs)) {\n            Proj4js.defs['EPSG:'+srid] = eform.find('input[name=\"liz_proj4\"]').val();\n        }\n\n        // Get edition datasource geometry column name\n\n        var gColumn = eform.find('input[name=\"liz_geometryColumn\"]').val();\n\n        // Set hidden geometry field\n        eform.find('input[name=\"'+gColumn+'\"]').val(geom).change();\n        // dispatch event\n        var formFeatureId = eform.find('input[name=\"liz_featureId\"]').val();\n        var formLayerId = eform.find('input[name=\"liz_layerId\"]').val();\n        lizMap.events.triggerEvent(\"lizmapeditiongeometryupdated\",\n            {\n                'layerId': formLayerId,\n                'featureId': formFeatureId,\n                'geometry': geom,\n                'srid': srid\n            }\n        );\n        return true;\n    }\n\n    /**\n     *\n     */\n    function getFeatureFromGeometryColumn(){\n        // Get editLayer\n        var editLayer = editionLayer['ol'];\n        if ( !editLayer )\n            return null;\n\n        // Get form\n        var eform = $('#edition-form-container form');\n\n        // Get edition datasource geometry column name\n        var gColumn = eform.find('input[name=\"liz_geometryColumn\"]').val();\n\n        var srid = eform.find('input[name=\"liz_srid\"]').val();\n        if ( srid != '' && !('EPSG:'+srid in Proj4js.defs) )\n            Proj4js.defs['EPSG:'+srid] = eform.find('input[name=\"liz_proj4\"]').val();\n\n        if ( gColumn != '' ) {\n            var wkt = eform.find('input[name=\"'+gColumn+'\"]').val();\n            if (wkt != '' ) {\n                var format = new OpenLayers.Format.WKT({\n                    externalProjection: 'EPSG:'+srid,\n                    internalProjection: editionLayer['ol'].projection\n                });\n                return format.read(wkt);\n            }\n        }\n        return null;\n    }\n\n    /**\n     *\n     */\n    function updateFeatureFromGeometryColumn(){\n\n        var feat = getFeatureFromGeometryColumn();\n        if ( feat == null ) {\n            feat = new OpenLayers.Feature.Vector( );\n        }\n\n        // Get feature id\n        feat.fid = $('#edition-form-container form').find('input[name=\"liz_featureId\"]').val();\n        editionLayer.replaceFeature(feat);\n        return feat;\n    }\n\n\n    /**\n     *\n     * @param aLayerId\n     * @param aFeatureId\n     * @param aMessage\n     * @param aCallback\n     */\n    function deleteEditionFeature( aLayerId, aFeatureId, aMessage, aCallback ){\n        // Edition layers\n        if ( !('editionLayers' in config) )\n            return false;\n\n        var eConfig = lizMap.getLayerConfigById(\n            aLayerId,\n            config.editionLayers,\n            'layerId'\n        );\n        if ( !eConfig || eConfig[1].capabilities.deleteFeature == \"False\" )\n            return false;\n        var aName = eConfig[0];\n        var configLayer = config.layers[aName];\n        var typeName = eConfig[0].split(' ').join('_');\n        if ( 'shortname' in configLayer && configLayer.shortname != '' )\n            typeName = configLayer.shortname;\n\n        // check if the layer has n to m relations\n        var hasNToMRelations = false, isPivot = !!lizMap.config?.relations?.pivot?.[aLayerId];\n        if(lizMap.config?.relations?.[aLayerId]){\n            hasNToMRelations = lizMap.config.relations[aLayerId].some((el)=>{\n                const pivotAttributeLayerConf = lizMap.getLayerConfigById( el.referencingLayer, lizMap.config.attributeLayers, 'layerId' );\n                // The referencingLayer has no attribute layer configuration\n                if (!Array.isArray(pivotAttributeLayerConf ) || pivotAttributeLayerConf.length != 2) {\n                    return false;\n                }\n                return lizMap.config.relations.pivot &&\n                    lizMap.config.relations.pivot[el.referencingLayer] != null &&\n                    pivotAttributeLayerConf[1]?.pivot == 'True';\n            })\n        }\n        var deleteConfirm = lizDict['edition.confirm.delete'];\n\n        if(aMessage){\n            if(hasNToMRelations || isPivot){\n                deleteConfirm = aMessage;\n            } else {\n                deleteConfirm += '\\n' + aMessage;\n            }\n        }\n\n        if ( !confirm( deleteConfirm ) )\n            return false;\n\n        var eService = globalThis['lizUrls'].edition + '?' + new URLSearchParams(globalThis['lizUrls'].params);\n        $.get(eService.replace('getFeature','deleteFeature'),{\n            layerId: aLayerId,\n            featureId: aFeatureId,\n            linkedRecords: hasNToMRelations ? 'ntom' : ''\n        }, function(data){\n            addEditionMessage( data, 'info', true);\n\n            if ( aCallback )\n                aCallback( aLayerId, aFeatureId );\n\n            lizMap.events.triggerEvent(\"lizmapeditionfeaturedeleted\",\n                {\n                    'layerId': aLayerId,\n                    'featureId': aFeatureId,\n                    'featureType': aName,\n                    'updateDrawing': true\n                }\n            );\n\n            // Redraw layers\n            redrawLayers( aLayerId );\n        });\n        return false;\n    }\n\n\n    lizMap.events.on({\n        uicreated: () => {\n\n            config = lizMap.config;\n            layers = lizMap.layers;\n            map = lizMap.map;\n            controls = lizMap.controls;\n\n            var editionOptions = {\n                addStyleRulesToSplitLayers : function(rules) {\n                    editionLayer.splitOlStyleCustomRules = editionLayer.splitOlStyleCustomRules.concat(rules);\n                },\n                addStyleRulesToEditLayers : function(rules) {\n                    editionLayer.olStyleCustomRules = editionLayer.olStyleCustomRules.concat(rules);\n                },\n            };\n            lizMap.events.triggerEvent(\n                'lizmapeditionfeatureinit',\n                {\n                    \"editorOptions\" : editionOptions\n                }\n            );\n\n            addEditionControls();\n\n            lizMap.launchEdition = function( aLayerId, aFid, aParent, aCallback) {\n                return launchEdition( aLayerId, aFid, aParent, aCallback);\n            };\n\n            lizMap.deleteEditionFeature = function( aLayerId, aFid, aMessage, aCallback ){\n                return deleteEditionFeature( aLayerId, aFid, aMessage, aCallback );\n            };\n        } // uicreated\n    });\n}();\n\n\n/**\n *\n */\nfunction lizEditionErrorDecorator(){\n    this.message = '';\n}\n\nlizEditionErrorDecorator.prototype = {\n    start : function(form){\n        this.message = '';\n        this.form = form;\n        $(\"#\"+form.name+\" .jforms-error\").removeClass('jforms-error');\n        $('#'+form.name+'_errors').empty().hide();\n    },\n    addError : function(control, messageType){\n        var elt = this.form.element.elements[control.name];\n        if (elt && elt.nodeType) {\n            $(elt).addClass('jforms-error');\n        }\n        var name = control.name.replace(/\\[\\]/, '');\n        $(\"#\"+this.form.name+\"_\"+name+\"_label\").addClass('jforms-error');\n\n        if(messageType == 1){\n            this.message  += '<p class=\"error\"> '+control.errRequired + \"</p>\";\n        }else if(messageType == 2){\n            this.message  += '<p class=\"error\"> ' +control.errInvalid + \"</p>\";\n        }else{\n            this.message  += '<p class=\"error\"> Error on \\''+control.label+\"' </p>\";\n        }\n    },\n    end : function(){\n        var errid = this.form.name+'_errors';\n        var div = document.getElementById(errid);\n        if(this.message != ''){\n            if (!div) {\n                div = document.createElement('div');\n                div.setAttribute('class', 'jforms-error-list alert alert-block alert-error');\n                div.setAttribute('id', errid);\n                $(this.form.element).first().before(div);\n            }\n            var jdiv = $(div);\n            jdiv.hide().html(this.message).fadeIn();\n        }\n        else if (div) {\n            $(div).hide();\n        }\n    }\n};\n\nwindow.lizEditionErrorDecorator = lizEditionErrorDecorator;\n"],"names":["lizEditionErrorDecorator","this","message","FeatureEditionData","layerID","feature","relation","layerId","config","parent","backToParent","newfeatures","pivot","EditionLayerData","spatial","drawControl","submitActor","ol","currentFeature","splitOl","olStyleCustomRules","splitOlStyleCustomRules","window","addEventListener","event","lizMap","editionPending","preventDefault","returnValue","prototype","setParentToEditAfterSave","geometryType","id","projCode","projection","deactivateControl","active","deactivate","clearLayers","destroyFeatures","clear","createLayers","style","styleMap","map","getLayersByName","length","OpenLayers","Style","addRules","Rule","symbolizer","pointRadius","strokeWidth","fillColor","strokeColor","StyleMap","Layer","Vector","addLayer","getFeature","features","removeEditedFeature","feat","removeFeatures","moveEditedFeatureToSplitLayer","formData","addFeatures","push","setDrawControl","replaceFeature","newFeature","canEditParentFeature","restoreSplitFeatures","layer","featList","newFeat","controls","editCtrls","editionLayer","editionType","editionMessageTimeoutId","cleanEditionMessage","$EditionMessage","$","remove","addEditionMessage","aMessage","aType","aClose","clearTimeout","addMessage","attr","setTimeout","afterReshapeSpliting","evt","splitFeatures","removableFeat","geometry","getLength","getArea","updateGeometryColumnFromFeature","click","beforeFeatureSpliting","form","checkFormBeforeSubmit","lizDict","afterFeatureSpliting","gColumn","find","val","geom","data","FormData","get","set","calculateGeometryColumnFromFeature","featureIdField","geomField","tokenField","oldFeatureId","oldGeom","oldToken","deactivateDrawFeature","html","hide","is","parents","addClass","events","triggerEvent","activateDrawFeature","eform","srid","Proj4js","defs","show","mapSrid","replace","keyUpPointCoord","x","parseFloat","y","isNaN","vertex","Geometry","Point","transform","handler","point","clearBounds","displaySegmentsLengthAndAngle","px","getViewPortPxFromLonLat","lon","lat","createFeature","drawFeature","redrawLayers","willBeRedrawnLayerIds","rx","relations","layerRelations","lid","inArray","referencingLayer","pivotLayers","pId","shift","childLayerConfig","getLayerConfigById","layers","qgisName","olLayer","mainLizmap","getLayerByName","undefined","getVisible","getSource","changed","finishEdition","newOlMap","removeClass","modify","mode","Control","ModifyFeature","RESHAPE","createVertices","panel","hasCreateLayers","name","editionLayers","capabilities","pointOnSegment","segment","Math","min","x1","x2","max","y1","y2","toFixed","editingDelay","sleepDuration","Promise","resolve","reject","_","displayCoordinates","displayProj","Projection","getUnits","displaySegmentsLength","components","showTotal","componentsCount","lastSegmentLength","LineString","getGeodesicLength","allSegmentsLength","index","text","edition","displayAngleBetweenThreePoints","A","B","C","AB","sqrt","pow","BC","AC","angleInDegrees","acos","PI","drawingGeom","CLASS_NAME","componentsLength","clonedComponents","clone","pop","clonedComponentsLength","launchEdition","aLayerId","aFid","aParent","aCallback","editedFeature","parentInfo","parentLayerId","parentFeat","pivotId","childLayerId","pivotAttributeLayerConf","attributeLayers","validRelation","Object","keys","forEach","k","filter","rel","lridx","getRelationInfo","formFeatureId","split","internalLaunchEdition","launchEditionOfParent","async","document","querySelector","confirm","getLayer","featureId","originalForm","unbind","params","assign","globalThis","service","URLSearchParams","fetch","then","response","ok","status","statusText","contentType","headers","includes","displayEditionForm","catch","e","console","error","getEditionForm","trigger","activateAutocomplete","selectAutocomplete","wrapper","insertAfter","selected","children","value","input","appendTo","autocomplete","source","request","unaccentuatedTerm","term","normalize","matcher","RegExp","ui","escapeRegex","test","label","option","css","oldSerializeArray","serializeArray","formContainer","selectCombobox","originalGeom","relationRefField","referencingField","parentFeatProp","properties","referencedField","parentLayerConf","hiddenInput","append","futureLinkInfo","title","last","select","change","readOnlyInput4Select","jFormsJQ","getForm","getControl","required","selectComboboxes","i","len","combobox","my","position","item","self","uiItem","selectAutocompletes","ev","getFeatureFromGeometryColumn","modifyGeometry","Feature","fid","updateFeatureFromGeometryColumn","activate","selectFeature","ctrl","checkMobile","blur","tForm","groupDependencies","dependencies","depName","elt","dynamicGroupVisibilities","handleGroupVisibilities","subprefix","stopPropagation","submit","msg","submit_hidden_id","newFeatureUrl","url","featureData","formResult","sendFormPromise","sendNewFeatureForm","newFeatForm","handleEditionFormSubmit","returnedMessage","pkVals","hiddenForm","closeFeaturePkValsJson","JSON","parse","parentNode","removeChild","hasClass","clearHighlightFeatures","currentFormData","element","sentFormData","selector","formId","getAll","groupVisibilitiesUrl","method","body","json","groupId","group","tab","tabParent","tabContent","prev","first","next","XMLHttpRequest","open","onload","responseText","Error","cause","send","_submitListener","verifyForm","allow_without_geom","trim","formLayerId","wkt","Format","WKT","externalProjection","internalProjection","read","on","uicreated","editionOptions","addStyleRulesToSplitLayers","rules","concat","addStyleRulesToEditLayers","elconfig","elk","alName","al","modifyAttribute","deleteFeature","alConfig","order","sort","a","b","editLayer","type","TYPE_TOOL","eventListeners","deactivateToolControls","c","DrawFeature","Handler","line","Path","polygon","Polygon","reshape","Split","aftersplit","featsplit","beforesplit","object","setVisibility","addControls","featureadded","drawWasActivated","featuremodified","featureselected","featureunselected","sketchmodified","geolocation","getPositionInCRS","vertexmodified","keyup","isTracking","modifyFeature","removeAttr","isLinkedToEdition","node","insertXY","getGeometry","geolocationSurvey","averageRecordMode","positionAverageInMapCRS","finalize","finishGeometry","unselectFeature","DRAG","ROTATE","tooltip","placement","mainEventDispatcher","addListener","geolocationIsTracking","toggle","addEditionControls","deleteEditionFeature","aFeatureId","eConfig","aName","configLayer","join","shortname","hasNToMRelations","isPivot","some","el","Array","isArray","deleteConfirm","eService","linkedRecords","start","empty","addError","control","messageType","elements","nodeType","errRequired","errInvalid","end","errid","div","getElementById","createElement","setAttribute","before","fadeIn"],"sourceRoot":""}