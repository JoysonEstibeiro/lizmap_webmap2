{"version":3,"file":"137.bundle.js","mappings":"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","sources":["webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/geom/Lineal.js","webpack://lizmap-web-client/./node_modules/jsts/java/io/Serializable.js","webpack://lizmap-web-client/./node_modules/jsts/java/util/List.js","webpack://lizmap-web-client/./node_modules/jsts/java/util/Arrays.js","webpack://lizmap-web-client/./node_modules/jsts/java/lang/IndexOutOfBoundsException.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/geom/GeometryComponentFilter.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/geom/MultiLineString.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/geom/GeometryFilter.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/geom/CoordinateSequence.js","webpack://lizmap-web-client/./node_modules/jsts/java/util/SortedSet.js","webpack://lizmap-web-client/./node_modules/jsts/java/util/TreeSet.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/geom/GeometryCollection.js","webpack://lizmap-web-client/./node_modules/jsts/java/lang/System.js","webpack://lizmap-web-client/./node_modules/jsts/java/util/HashMap.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/geom/PrecisionModel.js","webpack://lizmap-web-client/./node_modules/jsts/java/util/NoSuchElementException.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/math/DD.js","webpack://lizmap-web-client/./node_modules/jsts/java/lang/StringBuffer.js","webpack://lizmap-web-client/./node_modules/jsts/hasInterface.js","webpack://lizmap-web-client/./node_modules/jsts/java/lang/IllegalStateException.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/geom/Point.js","webpack://lizmap-web-client/./node_modules/jsts/java/lang/Exception.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/geom/CoordinateArrays.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/algorithm/Orientation.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/util/NumberUtil.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/geom/Coordinate.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/geom/MultiPolygon.js","webpack://lizmap-web-client/./node_modules/jsts/java/lang/Character.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/geom/CoordinateSequences.js","webpack://lizmap-web-client/./node_modules/jsts/java/lang/StringBuilder.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/geom/LinearRing.js","webpack://lizmap-web-client/./node_modules/jsts/java/lang/Integer.js","webpack://lizmap-web-client/./node_modules/jsts/java/lang/Comparable.js","webpack://lizmap-web-client/./node_modules/jsts/java/util/ArrayList.js","webpack://lizmap-web-client/./node_modules/jsts/java/util/Map.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/geom/CoordinateSequenceFactory.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/geom/impl/CoordinateArraySequenceFactory.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/geom/GeometryFactory.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/geom/Dimension.js","webpack://lizmap-web-client/./node_modules/jsts/java/lang/IllegalArgumentException.js","webpack://lizmap-web-client/./node_modules/jsts/java/util/Set.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/math/MathUtil.js","webpack://lizmap-web-client/./node_modules/jsts/java/util/Collection.js","webpack://lizmap-web-client/./node_modules/jsts/java/util/Comparator.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/algorithm/Length.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/geom/LineString.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/geom/CoordinateFilter.js","webpack://lizmap-web-client/./node_modules/jsts/java/lang/Cloneable.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/geom/Puntal.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/geom/MultiPoint.js","webpack://lizmap-web-client/./node_modules/jsts/java/lang/RuntimeException.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/geom/CoordinateSequenceFilter.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/algorithm/CGAlgorithmsDD.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/util/AssertionFailedException.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/util/Assert.js","webpack://lizmap-web-client/./node_modules/jsts/java/lang/UnsupportedOperationException.js","webpack://lizmap-web-client/./node_modules/jsts/java/util/HashSet.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/geom/CoordinateList.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/geom/impl/CoordinateArraySequence.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/algorithm/Area.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/geom/Polygon.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/geom/Envelope.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/geom/CoordinateXY.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/geom/CoordinateXYM.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/geom/CoordinateXYZM.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/geom/Coordinates.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/geom/Polygonal.js","webpack://lizmap-web-client/./node_modules/jsts/java/lang/Long.js","webpack://lizmap-web-client/./node_modules/jsts/java/lang/Double.js","webpack://lizmap-web-client/./node_modules/jsts/org/locationtech/jts/geom/Geometry.js"],"sourcesContent":["export default class Lineal {}\n","export default function Serializable() {}\n","import Collection from './Collection.js'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/List.html\n */\nexport default class List extends Collection {\n  /**\n     * Returns the element at the specified position in this list.\n     * @param {number} index\n     * @return {Object}\n     */\n  get() { }\n  /**\n     * Replaces the element at the specified position in this list with the\n     * specified element (optional operation).\n     * @param {number} index\n     * @param {Object} e\n     * @return {Object}\n     */\n  set() { }\n  /**\n     * Returns true if this collection contains no elements.\n     * @return {boolean}\n     */\n  isEmpty() { }\n}\n","import ArrayList from './ArrayList.js'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Arrays.html\n */\nexport default class Arrays {\n  static sort() {\n    const a = arguments[0]\n    if (arguments.length === 1) {\n      a.sort((a, b) => a.compareTo(b))\n    } else if (arguments.length === 2) {\n      a.sort((a, b) => arguments[1].compare(a, b))\n    } else if (arguments.length === 3) {\n      const t = a.slice(arguments[1], arguments[2])\n      t.sort()\n      const r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length))\n      a.splice(0, a.length)\n      for (const e of r)\n        a.push(e)\n    } else if (arguments.length === 4) {\n      const t = a.slice(arguments[1], arguments[2])\n      t.sort((a, b) => arguments[3].compare(a, b))\n      const r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length))\n      a.splice(0, a.length)\n      for (const e of r)\n        a.push(e)\n    }\n  }\n\n  /**\n   * @param {Array} array\n   * @return {ArrayList}\n   */\n  static asList(array) {\n    const arrayList = new ArrayList()\n    for (const e of array)\n      arrayList.add(e)\n    return arrayList\n  }\n\n  static copyOf(original, newLength) {\n    return original.slice(0, newLength)\n  }\n}\n","import Exception from './Exception.js'\n\nexport default class IndexOutOfBoundsException extends Exception {\n  constructor(message) {\n    super(message)\n    this.name = Object.keys({ IndexOutOfBoundsException })[0]\n  } \n}","export default class GeometryComponentFilter {\n  filter(geom) {}\n}\n","import Geometry from './Geometry.js'\nimport Lineal from './Lineal.js'\nimport Dimension from './Dimension.js'\nimport GeometryCollection from './GeometryCollection.js'\nimport UnsupportedOperationException from '../../../../java/lang/UnsupportedOperationException.js'\nexport default class MultiLineString extends GeometryCollection {\n  constructor() {\n    super()\n    MultiLineString.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    const lineStrings = arguments[0], factory = arguments[1]\n    GeometryCollection.constructor_.call(this, lineStrings, factory)\n  }\n  copyInternal() {\n    const lineStrings = new Array(this._geometries.length).fill(null)\n    for (let i = 0; i < lineStrings.length; i++) \n      lineStrings[i] = this._geometries[i].copy()\n    \n    return new MultiLineString(lineStrings, this._factory)\n  }\n  equalsExact() {\n    if (arguments.length === 2 && (typeof arguments[1] === 'number' && arguments[0] instanceof Geometry)) {\n      const other = arguments[0], tolerance = arguments[1]\n      if (!this.isEquivalentClass(other)) \n        return false\n      \n      return super.equalsExact.call(this, other, tolerance)\n    } else {\n      return super.equalsExact.apply(this, arguments)\n    }\n  }\n  getBoundaryDimension() {\n    if (this.isClosed()) \n      return Dimension.FALSE\n    \n    return 0\n  }\n  isClosed() {\n    if (this.isEmpty()) \n      return false\n    \n    for (let i = 0; i < this._geometries.length; i++) \n      if (!this._geometries[i].isClosed()) \n        return false\n      \n    \n    return true\n  }\n  getTypeCode() {\n    return Geometry.TYPECODE_MULTILINESTRING\n  }\n  getDimension() {\n    return 1\n  }\n  getBoundary() {\n    throw new UnsupportedOperationException()\n  }\n  getGeometryType() {\n    return Geometry.TYPENAME_MULTILINESTRING\n  }\n  get interfaces_() {\n    return [Lineal]\n  }\n}\n","export default class GeometryFilter {\n  filter(geom) {}\n}\n","import Double from '../../../../java/lang/Double.js'\nimport Cloneable from '../../../../java/lang/Cloneable.js'\nexport default class CoordinateSequence {\n  getCoordinate() {\n    if (arguments.length === 1) {\n      const i = arguments[0]\n    } else if (arguments.length === 2) {\n      const index = arguments[0], coord = arguments[1]\n    }\n  }\n  getCoordinateCopy(i) {}\n  createCoordinate() {}\n  getDimension() {}\n  hasM() {\n    return this.getMeasures() > 0\n  }\n  getX(index) {}\n  hasZ() {\n    return this.getDimension() - this.getMeasures() > 2\n  }\n  getMeasures() {\n    return 0\n  }\n  expandEnvelope(env) {}\n  copy() {}\n  getY(index) {}\n  toCoordinateArray() {}\n  getM(index) {\n    if (this.hasM()) {\n      const mIndex = this.getDimension() - this.getMeasures()\n      return this.getOrdinate(index, mIndex)\n    } else {\n      return Double.NaN\n    }\n  }\n  setOrdinate(index, ordinateIndex, value) {}\n  getZ(index) {\n    if (this.hasZ()) \n      return this.getOrdinate(index, 2)\n    else \n      return Double.NaN\n    \n  }\n  size() {}\n  getOrdinate(index, ordinateIndex) {}\n  get interfaces_() {\n    return [Cloneable]\n  }\n}\nCoordinateSequence.X = 0\nCoordinateSequence.Y = 1\nCoordinateSequence.Z = 2\nCoordinateSequence.M = 3\n","import Set from './Set.js'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedSet.html\n */\nexport default class SortedSet extends Set {}\n","import Collection from './Collection.js'\nimport NoSuchElementException from './NoSuchElementException.js'\nimport UnsupportedOperationException from '../lang/UnsupportedOperationException.js'\nimport SortedSet from './SortedSet.js'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeSet.html\n */\nexport default class TreeSet extends SortedSet {\n  constructor(o) {\n    super()\n    this.array = []\n    if (o instanceof Collection)\n      this.addAll(o)\n  }\n\n  contains(o) {\n    for (const e of this.array)\n      if (e.compareTo(o) === 0)\n        return true\n    return false\n  }\n\n  add(o) {\n    if (this.contains(o))\n      return false\n    for (let i = 0, len = this.array.length; i < len; i++) {\n      const e = this.array[i]\n      if (e.compareTo(o) === 1)\n        return !!this.array.splice(i, 0, o)\n    }\n    this.array.push(o)\n    return true\n  }\n\n  addAll(c) {\n    for (const e of c)\n      this.add(e)\n    return true\n  }\n\n  remove() {\n    throw new UnsupportedOperationException()\n  }\n\n  size() {\n    return this.array.length\n  }\n\n  isEmpty() {\n    return this.array.length === 0\n  }\n\n  toArray() {\n    return this.array.slice()\n  }\n\n  iterator() {\n    return new Iterator(this.array)\n  }\n}\n\nclass Iterator {\n  constructor(array) {\n    this.array = array\n    this.position = 0\n  }\n\n  next() {\n    if (this.position === this.array.length)\n      throw new NoSuchElementException()\n    return this.array[this.position++]\n  }\n\n  hasNext() {\n    return this.position < this.array.length\n  }\n\n  remove() {\n    throw new UnsupportedOperationException()\n  }\n}\n","import TreeSet from '../../../../java/util/TreeSet.js'\nimport hasInterface from '../../../../hasInterface.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport GeometryComponentFilter from './GeometryComponentFilter.js'\nimport Dimension from './Dimension.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport Geometry from './Geometry.js'\nimport Arrays from '../../../../java/util/Arrays.js'\nimport CoordinateFilter from './CoordinateFilter.js'\nimport GeometryFilter from './GeometryFilter.js'\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter.js'\nimport Envelope from './Envelope.js'\nimport Assert from '../util/Assert.js'\nexport default class GeometryCollection extends Geometry {\n  constructor() {\n    super()\n    GeometryCollection.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._geometries = null\n    if (arguments.length === 0) {} else if (arguments.length === 2) {\n      let geometries = arguments[0], factory = arguments[1]\n      Geometry.constructor_.call(this, factory)\n      if (geometries === null) \n        geometries = []\n      \n      if (Geometry.hasNullElements(geometries)) \n        throw new IllegalArgumentException('geometries must not contain null elements')\n      \n      this._geometries = geometries\n    }\n  }\n  computeEnvelopeInternal() {\n    const envelope = new Envelope()\n    for (let i = 0; i < this._geometries.length; i++) \n      envelope.expandToInclude(this._geometries[i].getEnvelopeInternal())\n    \n    return envelope\n  }\n  getGeometryN(n) {\n    return this._geometries[n]\n  }\n  getCoordinates() {\n    const coordinates = new Array(this.getNumPoints()).fill(null)\n    let k = -1\n    for (let i = 0; i < this._geometries.length; i++) {\n      const childCoordinates = this._geometries[i].getCoordinates()\n      for (let j = 0; j < childCoordinates.length; j++) {\n        k++\n        coordinates[k] = childCoordinates[j]\n      }\n    }\n    return coordinates\n  }\n  getArea() {\n    let area = 0.0\n    for (let i = 0; i < this._geometries.length; i++) \n      area += this._geometries[i].getArea()\n    \n    return area\n  }\n  copyInternal() {\n    const geometries = new Array(this._geometries.length).fill(null)\n    for (let i = 0; i < geometries.length; i++) \n      geometries[i] = this._geometries[i].copy()\n    \n    return new GeometryCollection(geometries, this._factory)\n  }\n  equalsExact() {\n    if (arguments.length === 2 && (typeof arguments[1] === 'number' && arguments[0] instanceof Geometry)) {\n      const other = arguments[0], tolerance = arguments[1]\n      if (!this.isEquivalentClass(other)) \n        return false\n      \n      const otherCollection = other\n      if (this._geometries.length !== otherCollection._geometries.length) \n        return false\n      \n      for (let i = 0; i < this._geometries.length; i++) \n        if (!this._geometries[i].equalsExact(otherCollection._geometries[i], tolerance)) \n          return false\n        \n      \n      return true\n    } else {\n      return super.equalsExact.apply(this, arguments)\n    }\n  }\n  reverseInternal() {\n    const numGeometries = this._geometries.length\n    const reversed = new ArrayList(numGeometries)\n    for (let i = 0; i < numGeometries; i++) \n      reversed.add(this._geometries[i].reverse())\n    \n    return this.getFactory().buildGeometry(reversed)\n  }\n  getTypeCode() {\n    return Geometry.TYPECODE_GEOMETRYCOLLECTION\n  }\n  getDimension() {\n    let dimension = Dimension.FALSE\n    for (let i = 0; i < this._geometries.length; i++) \n      dimension = Math.max(dimension, this._geometries[i].getDimension())\n    \n    return dimension\n  }\n  getNumGeometries() {\n    return this._geometries.length\n  }\n  getBoundary() {\n    Geometry.checkNotGeometryCollection(this)\n    Assert.shouldNeverReachHere()\n    return null\n  }\n  getGeometryType() {\n    return Geometry.TYPENAME_GEOMETRYCOLLECTION\n  }\n  isEmpty() {\n    for (let i = 0; i < this._geometries.length; i++) \n      if (!this._geometries[i].isEmpty()) \n        return false\n      \n    \n    return true\n  }\n  normalize() {\n    for (let i = 0; i < this._geometries.length; i++) \n      this._geometries[i].normalize()\n    \n    Arrays.sort(this._geometries)\n  }\n  getCoordinate() {\n    if (this.isEmpty()) return null\n    return this._geometries[0].getCoordinate()\n  }\n  getBoundaryDimension() {\n    let dimension = Dimension.FALSE\n    for (let i = 0; i < this._geometries.length; i++) \n      dimension = Math.max(dimension, this._geometries[i].getBoundaryDimension())\n    \n    return dimension\n  }\n  getLength() {\n    let sum = 0.0\n    for (let i = 0; i < this._geometries.length; i++) \n      sum += this._geometries[i].getLength()\n    \n    return sum\n  }\n  getNumPoints() {\n    let numPoints = 0\n    for (let i = 0; i < this._geometries.length; i++) \n      numPoints += this._geometries[i].getNumPoints()\n    \n    return numPoints\n  }\n  compareToSameClass() {\n    if (arguments.length === 1) {\n      const o = arguments[0]\n      const theseElements = new TreeSet(Arrays.asList(this._geometries))\n      const otherElements = new TreeSet(Arrays.asList(o._geometries))\n      return this.compare(theseElements, otherElements)\n    } else if (arguments.length === 2) {\n      const o = arguments[0], comp = arguments[1]\n      const gc = o\n      const n1 = this.getNumGeometries()\n      const n2 = gc.getNumGeometries()\n      let i = 0\n      while (i < n1 && i < n2) {\n        const thisGeom = this.getGeometryN(i)\n        const otherGeom = gc.getGeometryN(i)\n        const holeComp = thisGeom.compareToSameClass(otherGeom, comp)\n        if (holeComp !== 0) return holeComp\n        i++\n      }\n      if (i < n1) return 1\n      if (i < n2) return -1\n      return 0\n    }\n  }\n  apply() {\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      const filter = arguments[0]\n      for (let i = 0; i < this._geometries.length; i++) \n        this._geometries[i].apply(filter)\n      \n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      const filter = arguments[0]\n      if (this._geometries.length === 0) return null\n      for (let i = 0; i < this._geometries.length; i++) {\n        this._geometries[i].apply(filter)\n        if (filter.isDone()) \n          break\n        \n      }\n      if (filter.isGeometryChanged()) this.geometryChanged()\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n      for (let i = 0; i < this._geometries.length; i++) \n        this._geometries[i].apply(filter)\n      \n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n      for (let i = 0; i < this._geometries.length; i++) \n        this._geometries[i].apply(filter)\n      \n    }\n  }\n}\n","export default class System {\n  static arraycopy(src, srcPos, dest, destPos, len) {\n    let c = 0\n    for (let i = srcPos; i < srcPos + len; i++) {\n      dest[destPos + c] = src[i]\n      c++\n    }\n  }\n\n  static getProperty(name) {\n    return {\n      'line.separator': '\\n'\n    }[name]\n  }\n}\n","import ArrayList from './ArrayList.js'\nimport MapInterface from './Map.js'\nimport HashSet from './HashSet.js'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/HashMap.html\n */\nexport default class HashMap extends MapInterface {\n  constructor() {\n    super()\n    this.map = new Map()\n  }\n\n  get(key) {\n    return this.map.get(key) || null\n  }\n\n  put(key, value) {\n    this.map.set(key, value)\n    return value\n  }\n\n  values() {\n    const arrayList = new ArrayList()\n    const it = this.map.values()\n    let o = it.next()\n    while (!o.done) {\n      arrayList.add(o.value)\n      o = it.next()\n    }\n    return arrayList\n  }\n\n  entrySet() {\n    const hashSet = new HashSet()\n    this.map.entries().forEach(entry => hashSet.add(entry))\n    return hashSet\n  }\n\n  size() {\n    return this.map.size()\n  }\n}\n","import HashMap from '../../../../java/util/HashMap.js'\nimport Coordinate from './Coordinate.js'\nimport Double from '../../../../java/lang/Double.js'\nimport Integer from '../../../../java/lang/Integer.js'\nimport Comparable from '../../../../java/lang/Comparable.js'\nimport Serializable from '../../../../java/io/Serializable.js'\nexport default class PrecisionModel {\n  constructor() {\n    PrecisionModel.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._modelType = null\n    this._scale = null\n    if (arguments.length === 0) \n      this._modelType = PrecisionModel.FLOATING\n    else if (arguments.length === 1) \n      if (arguments[0] instanceof Type) {\n        const modelType = arguments[0]\n        this._modelType = modelType\n        if (modelType === PrecisionModel.FIXED) \n          this.setScale(1.0)\n        \n      } else if (typeof arguments[0] === 'number') {\n        const scale = arguments[0]\n        this._modelType = PrecisionModel.FIXED\n        this.setScale(scale)\n      } else if (arguments[0] instanceof PrecisionModel) {\n        const pm = arguments[0]\n        this._modelType = pm._modelType\n        this._scale = pm._scale\n      }\n    \n  }\n  static mostPrecise(pm1, pm2) {\n    if (pm1.compareTo(pm2) >= 0) return pm1\n    return pm2\n  }\n  equals(other) {\n    if (!(other instanceof PrecisionModel)) \n      return false\n    \n    const otherPrecisionModel = other\n    return this._modelType === otherPrecisionModel._modelType && this._scale === otherPrecisionModel._scale\n  }\n  compareTo(o) {\n    const other = o\n    const sigDigits = this.getMaximumSignificantDigits()\n    const otherSigDigits = other.getMaximumSignificantDigits()\n    return Integer.compare(sigDigits, otherSigDigits)\n  }\n  getType() {\n    return this._modelType\n  }\n  toString() {\n    let description = 'UNKNOWN'\n    if (this._modelType === PrecisionModel.FLOATING) \n      description = 'Floating'\n    else if (this._modelType === PrecisionModel.FLOATING_SINGLE) \n      description = 'Floating-Single'\n    else if (this._modelType === PrecisionModel.FIXED) \n      description = 'Fixed (Scale=' + this.getScale() + ')'\n    \n    return description\n  }\n  makePrecise() {\n    if (typeof arguments[0] === 'number') {\n      const val = arguments[0]\n      if (Double.isNaN(val)) return val\n      if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n        const floatSingleVal = val\n        return floatSingleVal\n      }\n      if (this._modelType === PrecisionModel.FIXED) \n        return Math.round(val * this._scale) / this._scale\n      \n      return val\n    } else if (arguments[0] instanceof Coordinate) {\n      const coord = arguments[0]\n      if (this._modelType === PrecisionModel.FLOATING) return null\n      coord.x = this.makePrecise(coord.x)\n      coord.y = this.makePrecise(coord.y)\n    }\n  }\n  getMaximumSignificantDigits() {\n    let maxSigDigits = 16\n    if (this._modelType === PrecisionModel.FLOATING) \n      maxSigDigits = 16\n    else if (this._modelType === PrecisionModel.FLOATING_SINGLE) \n      maxSigDigits = 6\n    else if (this._modelType === PrecisionModel.FIXED) \n      maxSigDigits = 1 + Math.trunc(Math.ceil(Math.log(this.getScale()) / Math.log(10)))\n    \n    return maxSigDigits\n  }\n  setScale(scale) {\n    this._scale = Math.abs(scale)\n  }\n  getScale() {\n    return this._scale\n  }\n  isFloating() {\n    return this._modelType === PrecisionModel.FLOATING || this._modelType === PrecisionModel.FLOATING_SINGLE\n  }\n  get interfaces_() {\n    return [Serializable, Comparable]\n  }\n}\nclass Type {\n  constructor() {\n    Type.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._name = null\n    const name = arguments[0]\n    this._name = name\n    Type.nameToTypeMap.put(name, this)\n  }\n  readResolve() {\n    return Type.nameToTypeMap.get(this._name)\n  }\n  toString() {\n    return this._name\n  }\n  get interfaces_() {\n    return [Serializable]\n  }\n}\nType.nameToTypeMap = new HashMap()\nPrecisionModel.Type = Type\nPrecisionModel.FIXED = new Type('FIXED')\nPrecisionModel.FLOATING = new Type('FLOATING')\nPrecisionModel.FLOATING_SINGLE = new Type('FLOATING SINGLE')\nPrecisionModel.maximumPreciseValue = 9007199254740992.0\n","import Exception from '../lang/Exception.js'\n\nexport default class NoSuchElementException extends Exception {\n  constructor(message) {\n    super(message)\n    this.name = Object.keys({ NoSuchElementException })[0]\n  }\n}","import StringBuffer from '../../../../java/lang/StringBuffer.js'\nimport Double from '../../../../java/lang/Double.js'\nimport Integer from '../../../../java/lang/Integer.js'\nimport Character from '../../../../java/lang/Character.js'\nimport Comparable from '../../../../java/lang/Comparable.js'\nimport Cloneable from '../../../../java/lang/Cloneable.js'\nimport Serializable from '../../../../java/io/Serializable.js'\nimport IllegalStateException from '../../../../java/lang/IllegalStateException.js'\nexport default class DD {\n  constructor() {\n    DD.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._hi = 0.0\n    this._lo = 0.0\n    if (arguments.length === 0) {\n      this.init(0.0)\n    } else if (arguments.length === 1) {\n      if (typeof arguments[0] === 'number') {\n        const x = arguments[0]\n        this.init(x)\n      } else if (arguments[0] instanceof DD) {\n        const dd = arguments[0]\n        this.init(dd)\n      } else if (typeof arguments[0] === 'string') {\n        const str = arguments[0]\n        DD.constructor_.call(this, DD.parse(str))\n      }\n    } else if (arguments.length === 2) {\n      const hi = arguments[0], lo = arguments[1]\n      this.init(hi, lo)\n    }\n  }\n  static determinant() {\n    if (typeof arguments[3] === 'number' && (typeof arguments[2] === 'number' && (typeof arguments[0] === 'number' && typeof arguments[1] === 'number'))) {\n      const x1 = arguments[0], y1 = arguments[1], x2 = arguments[2], y2 = arguments[3]\n      return DD.determinant(DD.valueOf(x1), DD.valueOf(y1), DD.valueOf(x2), DD.valueOf(y2))\n    } else if (arguments[3] instanceof DD && (arguments[2] instanceof DD && (arguments[0] instanceof DD && arguments[1] instanceof DD))) {\n      const x1 = arguments[0], y1 = arguments[1], x2 = arguments[2], y2 = arguments[3]\n      const det = x1.multiply(y2).selfSubtract(y1.multiply(x2))\n      return det\n    }\n  }\n  static sqr(x) {\n    return DD.valueOf(x).selfMultiply(x)\n  }\n  static valueOf() {\n    if (typeof arguments[0] === 'string') {\n      const str = arguments[0]\n      return DD.parse(str)\n    } else if (typeof arguments[0] === 'number') {\n      const x = arguments[0]\n      return new DD(x)\n    }\n  }\n  static sqrt(x) {\n    return DD.valueOf(x).sqrt()\n  }\n  static parse(str) {\n    let i = 0\n    const strlen = str.length\n    while (Character.isWhitespace(str.charAt(i))) i++\n    let isNegative = false\n    if (i < strlen) {\n      const signCh = str.charAt(i)\n      if (signCh === '-' || signCh === '+') {\n        i++\n        if (signCh === '-') isNegative = true\n      }\n    }\n    const val = new DD()\n    let numDigits = 0\n    let numBeforeDec = 0\n    let exp = 0\n    let hasDecimalChar = false\n    while (true) {\n      if (i >= strlen) break\n      const ch = str.charAt(i)\n      i++\n      if (Character.isDigit(ch)) {\n        const d = ch - '0'\n        val.selfMultiply(DD.TEN)\n        val.selfAdd(d)\n        numDigits++\n        continue\n      }\n      if (ch === '.') {\n        numBeforeDec = numDigits\n        hasDecimalChar = true\n        continue\n      }\n      if (ch === 'e' || ch === 'E') {\n        const expStr = str.substring(i)\n        try {\n          exp = Integer.parseInt(expStr)\n        } catch (ex) {\n          if (ex instanceof NumberFormatException) \n            throw new NumberFormatException('Invalid exponent ' + expStr + ' in string ' + str)\n          else throw ex\n        } finally {}\n        break\n      }\n      throw new NumberFormatException('Unexpected character \\'' + ch + '\\' at position ' + i + ' in string ' + str)\n    }\n    let val2 = val\n    if (!hasDecimalChar) numBeforeDec = numDigits\n    const numDecPlaces = numDigits - numBeforeDec - exp\n    if (numDecPlaces === 0) {\n      val2 = val\n    } else if (numDecPlaces > 0) {\n      const scale = DD.TEN.pow(numDecPlaces)\n      val2 = val.divide(scale)\n    } else if (numDecPlaces < 0) {\n      const scale = DD.TEN.pow(-numDecPlaces)\n      val2 = val.multiply(scale)\n    }\n    if (isNegative) \n      return val2.negate()\n    \n    return val2\n  }\n  static createNaN() {\n    return new DD(Double.NaN, Double.NaN)\n  }\n  static copy(dd) {\n    return new DD(dd)\n  }\n  static magnitude(x) {\n    const xAbs = Math.abs(x)\n    const xLog10 = Math.log(xAbs) / Math.log(10)\n    let xMag = Math.trunc(Math.floor(xLog10))\n    const xApprox = Math.pow(10, xMag)\n    if (xApprox * 10 <= xAbs) xMag += 1\n    return xMag\n  }\n  static stringOfChar(ch, len) {\n    const buf = new StringBuffer()\n    for (let i = 0; i < len; i++) \n      buf.append(ch)\n    \n    return buf.toString()\n  }\n  le(y) {\n    return this._hi < y._hi || this._hi === y._hi && this._lo <= y._lo\n  }\n  extractSignificantDigits(insertDecimalPoint, magnitude) {\n    let y = this.abs()\n    let mag = DD.magnitude(y._hi)\n    const scale = DD.TEN.pow(mag)\n    y = y.divide(scale)\n    if (y.gt(DD.TEN)) {\n      y = y.divide(DD.TEN)\n      mag += 1\n    } else if (y.lt(DD.ONE)) {\n      y = y.multiply(DD.TEN)\n      mag -= 1\n    }\n    const decimalPointPos = mag + 1\n    const buf = new StringBuffer()\n    const numDigits = DD.MAX_PRINT_DIGITS - 1\n    for (let i = 0; i <= numDigits; i++) {\n      if (insertDecimalPoint && i === decimalPointPos) \n        buf.append('.')\n      \n      const digit = Math.trunc(y._hi)\n      if (digit < 0 || digit > 9) {}\n      if (digit < 0) \n        break\n      \n      let rebiasBy10 = false\n      let digitChar = 0\n      if (digit > 9) {\n        rebiasBy10 = true\n        digitChar = '9'\n      } else {\n        digitChar = '0' + digit\n      }\n      buf.append(digitChar)\n      y = y.subtract(DD.valueOf(digit)).multiply(DD.TEN)\n      if (rebiasBy10) y.selfAdd(DD.TEN)\n      let continueExtractingDigits = true\n      const remMag = DD.magnitude(y._hi)\n      if (remMag < 0 && Math.abs(remMag) >= numDigits - i) continueExtractingDigits = false\n      if (!continueExtractingDigits) break\n    }\n    magnitude[0] = mag\n    return buf.toString()\n  }\n  sqr() {\n    return this.multiply(this)\n  }\n  getSpecialNumberString() {\n    if (this.isZero()) return '0.0'\n    if (this.isNaN()) return 'NaN '\n    return null\n  }\n  setValue() {\n    if (arguments[0] instanceof DD) {\n      const value = arguments[0]\n      this.init(value)\n      return this\n    } else if (typeof arguments[0] === 'number') {\n      const value = arguments[0]\n      this.init(value)\n      return this\n    }\n  }\n  multiply() {\n    if (arguments[0] instanceof DD) {\n      const y = arguments[0]\n      if (y.isNaN()) return DD.createNaN()\n      return DD.copy(this).selfMultiply(y)\n    } else if (typeof arguments[0] === 'number') {\n      const y = arguments[0]\n      if (Double.isNaN(y)) return DD.createNaN()\n      return DD.copy(this).selfMultiply(y, 0.0)\n    }\n  }\n  isNaN() {\n    return Double.isNaN(this._hi)\n  }\n  reciprocal() {\n    let hc = null, tc = null, hy = null, ty = null, C = null, c = null, U = null, u = null\n    C = 1.0 / this._hi\n    c = DD.SPLIT * C\n    hc = c - C\n    u = DD.SPLIT * this._hi\n    hc = c - hc\n    tc = C - hc\n    hy = u - this._hi\n    U = C * this._hi\n    hy = u - hy\n    ty = this._hi - hy\n    u = hc * hy - U + hc * ty + tc * hy + tc * ty\n    c = (1.0 - U - u - C * this._lo) / this._hi\n    const zhi = C + c\n    const zlo = C - zhi + c\n    return new DD(zhi, zlo)\n  }\n  doubleValue() {\n    return this._hi + this._lo\n  }\n  subtract() {\n    if (arguments[0] instanceof DD) {\n      const y = arguments[0]\n      return this.add(y.negate())\n    } else if (typeof arguments[0] === 'number') {\n      const y = arguments[0]\n      return this.add(-y)\n    }\n  }\n  equals() {\n    if (arguments.length === 1 && arguments[0] instanceof DD) {\n      const y = arguments[0]\n      return this._hi === y._hi && this._lo === y._lo\n    }\n  }\n  isZero() {\n    return this._hi === 0.0 && this._lo === 0.0\n  }\n  selfSubtract() {\n    if (arguments[0] instanceof DD) {\n      const y = arguments[0]\n      if (this.isNaN()) return this\n      return this.selfAdd(-y._hi, -y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      const y = arguments[0]\n      if (this.isNaN()) return this\n      return this.selfAdd(-y, 0.0)\n    }\n  }\n  min(x) {\n    if (this.le(x)) \n      return this\n    else \n      return x\n    \n  }\n  selfDivide() {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof DD) {\n        const y = arguments[0]\n        return this.selfDivide(y._hi, y._lo)\n      } else if (typeof arguments[0] === 'number') {\n        const y = arguments[0]\n        return this.selfDivide(y, 0.0)\n      }\n    } else if (arguments.length === 2) {\n      const yhi = arguments[0], ylo = arguments[1]\n      let hc = null, tc = null, hy = null, ty = null, C = null, c = null, U = null, u = null\n      C = this._hi / yhi\n      c = DD.SPLIT * C\n      hc = c - C\n      u = DD.SPLIT * yhi\n      hc = c - hc\n      tc = C - hc\n      hy = u - yhi\n      U = C * yhi\n      hy = u - hy\n      ty = yhi - hy\n      u = hc * hy - U + hc * ty + tc * hy + tc * ty\n      c = (this._hi - U - u + this._lo - C * ylo) / yhi\n      u = C + c\n      this._hi = u\n      this._lo = C - u + c\n      return this\n    }\n  }\n  dump() {\n    return 'DD<' + this._hi + ', ' + this._lo + '>'\n  }\n  divide() {\n    if (arguments[0] instanceof DD) {\n      const y = arguments[0]\n      let hc = null, tc = null, hy = null, ty = null, C = null, c = null, U = null, u = null\n      C = this._hi / y._hi\n      c = DD.SPLIT * C\n      hc = c - C\n      u = DD.SPLIT * y._hi\n      hc = c - hc\n      tc = C - hc\n      hy = u - y._hi\n      U = C * y._hi\n      hy = u - hy\n      ty = y._hi - hy\n      u = hc * hy - U + hc * ty + tc * hy + tc * ty\n      c = (this._hi - U - u + this._lo - C * y._lo) / y._hi\n      u = C + c\n      const zhi = u\n      const zlo = C - u + c\n      return new DD(zhi, zlo)\n    } else if (typeof arguments[0] === 'number') {\n      const y = arguments[0]\n      if (Double.isNaN(y)) return DD.createNaN()\n      return DD.copy(this).selfDivide(y, 0.0)\n    }\n  }\n  ge(y) {\n    return this._hi > y._hi || this._hi === y._hi && this._lo >= y._lo\n  }\n  pow(exp) {\n    if (exp === 0.0) return DD.valueOf(1.0)\n    let r = new DD(this)\n    let s = DD.valueOf(1.0)\n    let n = Math.abs(exp)\n    if (n > 1) \n      while (n > 0) {\n        if (n % 2 === 1) \n          s.selfMultiply(r)\n        \n        n /= 2\n        if (n > 0) r = r.sqr()\n      }\n    else \n      s = r\n    \n    if (exp < 0) return s.reciprocal()\n    return s\n  }\n  ceil() {\n    if (this.isNaN()) return DD.NaN\n    const fhi = Math.ceil(this._hi)\n    let flo = 0.0\n    if (fhi === this._hi) \n      flo = Math.ceil(this._lo)\n    \n    return new DD(fhi, flo)\n  }\n  compareTo(o) {\n    const other = o\n    if (this._hi < other._hi) return -1\n    if (this._hi > other._hi) return 1\n    if (this._lo < other._lo) return -1\n    if (this._lo > other._lo) return 1\n    return 0\n  }\n  rint() {\n    if (this.isNaN()) return this\n    const plus5 = this.add(0.5)\n    return plus5.floor()\n  }\n  max(x) {\n    if (this.ge(x)) \n      return this\n    else \n      return x\n    \n  }\n  sqrt() {\n    if (this.isZero()) return DD.valueOf(0.0)\n    if (this.isNegative()) \n      return DD.NaN\n    \n    const x = 1.0 / Math.sqrt(this._hi)\n    const ax = this._hi * x\n    const axdd = DD.valueOf(ax)\n    const diffSq = this.subtract(axdd.sqr())\n    const d2 = diffSq._hi * (x * 0.5)\n    return axdd.add(d2)\n  }\n  selfAdd() {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof DD) {\n        const y = arguments[0]\n        return this.selfAdd(y._hi, y._lo)\n      } else if (typeof arguments[0] === 'number') {\n        const y = arguments[0]\n        let H = null, h = null, S = null, s = null, e = null, f = null\n        S = this._hi + y\n        e = S - this._hi\n        s = S - e\n        s = y - e + (this._hi - s)\n        f = s + this._lo\n        H = S + f\n        h = f + (S - H)\n        this._hi = H + h\n        this._lo = h + (H - this._hi)\n        return this\n      }\n    } else if (arguments.length === 2) {\n      const yhi = arguments[0], ylo = arguments[1]\n      let H = null, h = null, T = null, t = null, S = null, s = null, e = null, f = null\n      S = this._hi + yhi\n      T = this._lo + ylo\n      e = S - this._hi\n      f = T - this._lo\n      s = S - e\n      t = T - f\n      s = yhi - e + (this._hi - s)\n      t = ylo - f + (this._lo - t)\n      e = s + T\n      H = S + e\n      h = e + (S - H)\n      e = t + h\n      const zhi = H + e\n      const zlo = e + (H - zhi)\n      this._hi = zhi\n      this._lo = zlo\n      return this\n    }\n  }\n  selfMultiply() {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof DD) {\n        const y = arguments[0]\n        return this.selfMultiply(y._hi, y._lo)\n      } else if (typeof arguments[0] === 'number') {\n        const y = arguments[0]\n        return this.selfMultiply(y, 0.0)\n      }\n    } else if (arguments.length === 2) {\n      const yhi = arguments[0], ylo = arguments[1]\n      let hx = null, tx = null, hy = null, ty = null, C = null, c = null\n      C = DD.SPLIT * this._hi\n      hx = C - this._hi\n      c = DD.SPLIT * yhi\n      hx = C - hx\n      tx = this._hi - hx\n      hy = c - yhi\n      C = this._hi * yhi\n      hy = c - hy\n      ty = yhi - hy\n      c = hx * hy - C + hx * ty + tx * hy + tx * ty + (this._hi * ylo + this._lo * yhi)\n      const zhi = C + c\n      hx = C - zhi\n      const zlo = c + hx\n      this._hi = zhi\n      this._lo = zlo\n      return this\n    }\n  }\n  selfSqr() {\n    return this.selfMultiply(this)\n  }\n  floor() {\n    if (this.isNaN()) return DD.NaN\n    const fhi = Math.floor(this._hi)\n    let flo = 0.0\n    if (fhi === this._hi) \n      flo = Math.floor(this._lo)\n    \n    return new DD(fhi, flo)\n  }\n  negate() {\n    if (this.isNaN()) return this\n    return new DD(-this._hi, -this._lo)\n  }\n  clone() {\n    try {\n      return null\n    } catch (ex) {\n      if (ex instanceof CloneNotSupportedException) \n        return null\n      else throw ex\n    } finally {}\n  }\n  intValue() {\n    return Math.trunc(this._hi)\n  }\n  toString() {\n    const mag = DD.magnitude(this._hi)\n    if (mag >= -3 && mag <= 20) return this.toStandardNotation()\n    return this.toSciNotation()\n  }\n  toStandardNotation() {\n    const specialStr = this.getSpecialNumberString()\n    if (specialStr !== null) return specialStr\n    const magnitude = new Array(1).fill(null)\n    const sigDigits = this.extractSignificantDigits(true, magnitude)\n    const decimalPointPos = magnitude[0] + 1\n    let num = sigDigits\n    if (sigDigits.charAt(0) === '.') {\n      num = '0' + sigDigits\n    } else if (decimalPointPos < 0) {\n      num = '0.' + DD.stringOfChar('0', -decimalPointPos) + sigDigits\n    } else if (sigDigits.indexOf('.') === -1) {\n      const numZeroes = decimalPointPos - sigDigits.length\n      const zeroes = DD.stringOfChar('0', numZeroes)\n      num = sigDigits + zeroes + '.0'\n    }\n    if (this.isNegative()) return '-' + num\n    return num\n  }\n  toSciNotation() {\n    if (this.isZero()) return DD.SCI_NOT_ZERO\n    const specialStr = this.getSpecialNumberString()\n    if (specialStr !== null) return specialStr\n    const magnitude = new Array(1).fill(null)\n    const digits = this.extractSignificantDigits(false, magnitude)\n    const expStr = DD.SCI_NOT_EXPONENT_CHAR + magnitude[0]\n    if (digits.charAt(0) === '0') \n      throw new IllegalStateException('Found leading zero: ' + digits)\n    \n    let trailingDigits = ''\n    if (digits.length > 1) trailingDigits = digits.substring(1)\n    const digitsWithDecimal = digits.charAt(0) + '.' + trailingDigits\n    if (this.isNegative()) return '-' + digitsWithDecimal + expStr\n    return digitsWithDecimal + expStr\n  }\n  abs() {\n    if (this.isNaN()) return DD.NaN\n    if (this.isNegative()) return this.negate()\n    return new DD(this)\n  }\n  isPositive() {\n    return this._hi > 0.0 || this._hi === 0.0 && this._lo > 0.0\n  }\n  lt(y) {\n    return this._hi < y._hi || this._hi === y._hi && this._lo < y._lo\n  }\n  add() {\n    if (arguments[0] instanceof DD) {\n      const y = arguments[0]\n      return DD.copy(this).selfAdd(y)\n    } else if (typeof arguments[0] === 'number') {\n      const y = arguments[0]\n      return DD.copy(this).selfAdd(y)\n    }\n  }\n  init() {\n    if (arguments.length === 1) {\n      if (typeof arguments[0] === 'number') {\n        const x = arguments[0]\n        this._hi = x\n        this._lo = 0.0\n      } else if (arguments[0] instanceof DD) {\n        const dd = arguments[0]\n        this._hi = dd._hi\n        this._lo = dd._lo\n      }\n    } else if (arguments.length === 2) {\n      const hi = arguments[0], lo = arguments[1]\n      this._hi = hi\n      this._lo = lo\n    }\n  }\n  gt(y) {\n    return this._hi > y._hi || this._hi === y._hi && this._lo > y._lo\n  }\n  isNegative() {\n    return this._hi < 0.0 || this._hi === 0.0 && this._lo < 0.0\n  }\n  trunc() {\n    if (this.isNaN()) return DD.NaN\n    if (this.isPositive()) return this.floor(); else return this.ceil()\n  }\n  signum() {\n    if (this._hi > 0) return 1\n    if (this._hi < 0) return -1\n    if (this._lo > 0) return 1\n    if (this._lo < 0) return -1\n    return 0\n  }\n  get interfaces_() {\n    return [Serializable, Comparable, Cloneable]\n  }\n}\nDD.PI = new DD(3.141592653589793116e+00, 1.224646799147353207e-16)\nDD.TWO_PI = new DD(6.283185307179586232e+00, 2.449293598294706414e-16)\nDD.PI_2 = new DD(1.570796326794896558e+00, 6.123233995736766036e-17)\nDD.E = new DD(2.718281828459045091e+00, 1.445646891729250158e-16)\nDD.NaN = new DD(Double.NaN, Double.NaN)\nDD.EPS = 1.23259516440783e-32\nDD.SPLIT = 134217729.0\nDD.MAX_PRINT_DIGITS = 32\nDD.TEN = DD.valueOf(10.0)\nDD.ONE = DD.valueOf(1.0)\nDD.SCI_NOT_EXPONENT_CHAR = 'E'\nDD.SCI_NOT_ZERO = '0.0E0'\n","export default class StringBuffer {\n  constructor(str) {\n    this.str = str\n  }\n  append(e) {\n    this.str += e\n  }\n  setCharAt(i, c) {\n    this.str = this.str.substr(0, i) + c + this.str.substr(i + 1)\n  }\n  toString() {\n    return this.str\n  }\n}","export default function(o, i) {\n  return o.interfaces_ && o.interfaces_.indexOf(i) > -1\n}\n","import Exception from './Exception.js'\n\nexport default class IllegalStateException extends Exception {\n  constructor(message) {\n    super(message)\n    this.name = Object.keys({ IllegalStateException })[0]\n  }\n}\n","import hasInterface from '../../../../hasInterface.js'\nimport GeometryComponentFilter from './GeometryComponentFilter.js'\nimport Dimension from './Dimension.js'\nimport Puntal from './Puntal.js'\nimport IllegalStateException from '../../../../java/lang/IllegalStateException.js'\nimport Geometry from './Geometry.js'\nimport CoordinateFilter from './CoordinateFilter.js'\nimport GeometryFilter from './GeometryFilter.js'\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter.js'\nimport Envelope from './Envelope.js'\nimport Assert from '../util/Assert.js'\nexport default class Point extends Geometry {\n  constructor() {\n    super()\n    Point.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._coordinates = null\n    const coordinates = arguments[0], factory = arguments[1]\n    Geometry.constructor_.call(this, factory)\n    this.init(coordinates)\n  }\n  computeEnvelopeInternal() {\n    if (this.isEmpty()) \n      return new Envelope()\n    \n    const env = new Envelope()\n    env.expandToInclude(this._coordinates.getX(0), this._coordinates.getY(0))\n    return env\n  }\n  getCoordinates() {\n    return this.isEmpty() ? [] : [this.getCoordinate()]\n  }\n  copyInternal() {\n    return new Point(this._coordinates.copy(), this._factory)\n  }\n  equalsExact() {\n    if (arguments.length === 2 && (typeof arguments[1] === 'number' && arguments[0] instanceof Geometry)) {\n      const other = arguments[0], tolerance = arguments[1]\n      if (!this.isEquivalentClass(other)) \n        return false\n      \n      if (this.isEmpty() && other.isEmpty()) \n        return true\n      \n      if (this.isEmpty() !== other.isEmpty()) \n        return false\n      \n      return this.equal(other.getCoordinate(), this.getCoordinate(), tolerance)\n    } else {\n      return super.equalsExact.apply(this, arguments)\n    }\n  }\n  reverseInternal() {\n    return this.getFactory().createPoint(this._coordinates.copy())\n  }\n  getTypeCode() {\n    return Geometry.TYPECODE_POINT\n  }\n  getDimension() {\n    return 0\n  }\n  getNumPoints() {\n    return this.isEmpty() ? 0 : 1\n  }\n  getX() {\n    if (this.getCoordinate() === null) \n      throw new IllegalStateException('getX called on empty Point')\n    \n    return this.getCoordinate().x\n  }\n  getBoundary() {\n    return this.getFactory().createGeometryCollection()\n  }\n  getGeometryType() {\n    return Geometry.TYPENAME_POINT\n  }\n  getCoordinateSequence() {\n    return this._coordinates\n  }\n  getY() {\n    if (this.getCoordinate() === null) \n      throw new IllegalStateException('getY called on empty Point')\n    \n    return this.getCoordinate().y\n  }\n  isSimple() {\n    return true\n  }\n  normalize() {}\n  getCoordinate() {\n    return this._coordinates.size() !== 0 ? this._coordinates.getCoordinate(0) : null\n  }\n  getBoundaryDimension() {\n    return Dimension.FALSE\n  }\n  compareToSameClass() {\n    if (arguments.length === 1) {\n      const other = arguments[0]\n      const point = other\n      return this.getCoordinate().compareTo(point.getCoordinate())\n    } else if (arguments.length === 2) {\n      const other = arguments[0], comp = arguments[1]\n      const point = other\n      return comp.compare(this._coordinates, point._coordinates)\n    }\n  }\n  apply() {\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      const filter = arguments[0]\n      if (this.isEmpty()) \n        return null\n      \n      filter.filter(this.getCoordinate())\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      const filter = arguments[0]\n      if (this.isEmpty()) return null\n      filter.filter(this._coordinates, 0)\n      if (filter.isGeometryChanged()) this.geometryChanged()\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n    }\n  }\n  isEmpty() {\n    return this._coordinates.size() === 0\n  }\n  init(coordinates) {\n    if (coordinates === null) \n      coordinates = this.getFactory().getCoordinateSequenceFactory().create([])\n    \n    Assert.isTrue(coordinates.size() <= 1)\n    this._coordinates = coordinates\n  }\n  get interfaces_() {\n    return [Puntal]\n  }\n}\n","export default class Exception extends Error {\n  constructor(message) {\n    super(message)\n    this.name = Object.keys({ Exception })[0]\n  }\n  toString() {\n    return this.message\n  }\n}\n","import CoordinateList from './CoordinateList.js'\nimport Coordinates from './Coordinates.js'\nimport MathUtil from '../math/MathUtil.js'\nimport System from '../../../../java/lang/System.js'\nimport Comparator from '../../../../java/util/Comparator.js'\nimport Envelope from './Envelope.js'\nexport default class CoordinateArrays {\n  static scroll(coordinates, firstCoordinate) {\n    const i = CoordinateArrays.indexOf(firstCoordinate, coordinates)\n    if (i < 0) return null\n    const newCoordinates = new Array(coordinates.length).fill(null)\n    System.arraycopy(coordinates, i, newCoordinates, 0, coordinates.length - i)\n    System.arraycopy(coordinates, 0, newCoordinates, coordinates.length - i, i)\n    System.arraycopy(newCoordinates, 0, coordinates, 0, coordinates.length)\n  }\n  static removeRepeatedPoints(coord) {\n    if (!CoordinateArrays.hasRepeatedPoints(coord)) return coord\n    const coordList = new CoordinateList(coord, false)\n    return coordList.toCoordinateArray()\n  }\n  static reverse(coord) {\n    const last = coord.length - 1\n    const mid = Math.trunc(last / 2)\n    for (let i = 0; i <= mid; i++) {\n      const tmp = coord[i]\n      coord[i] = coord[last - i]\n      coord[last - i] = tmp\n    }\n  }\n  static removeNull(coord) {\n    let nonNull = 0\n    for (let i = 0; i < coord.length; i++) \n      if (coord[i] !== null) nonNull++\n    \n    const newCoord = new Array(nonNull).fill(null)\n    if (nonNull === 0) return newCoord\n    let j = 0\n    for (let i = 0; i < coord.length; i++) \n      if (coord[i] !== null) newCoord[j++] = coord[i]\n    \n    return newCoord\n  }\n  static copyDeep() {\n    if (arguments.length === 1) {\n      const coordinates = arguments[0]\n      const copy = new Array(coordinates.length).fill(null)\n      for (let i = 0; i < coordinates.length; i++) \n        copy[i] = coordinates[i].copy()\n      \n      return copy\n    } else if (arguments.length === 5) {\n      const src = arguments[0], srcStart = arguments[1], dest = arguments[2], destStart = arguments[3], length = arguments[4]\n      for (let i = 0; i < length; i++) \n        dest[destStart + i] = src[srcStart + i].copy()\n      \n    }\n  }\n  static isEqualReversed(pts1, pts2) {\n    for (let i = 0; i < pts1.length; i++) {\n      const p1 = pts1[i]\n      const p2 = pts2[pts1.length - i - 1]\n      if (p1.compareTo(p2) !== 0) return false\n    }\n    return true\n  }\n  static envelope(coordinates) {\n    const env = new Envelope()\n    for (let i = 0; i < coordinates.length; i++) \n      env.expandToInclude(coordinates[i])\n    \n    return env\n  }\n  static extract(pts, start, end) {\n    start = MathUtil.clamp(start, 0, pts.length)\n    end = MathUtil.clamp(end, -1, pts.length)\n    let npts = end - start + 1\n    if (end < 0) npts = 0\n    if (start >= pts.length) npts = 0\n    if (end < start) npts = 0\n    const extractPts = new Array(npts).fill(null)\n    if (npts === 0) return extractPts\n    let iPts = 0\n    for (let i = start; i <= end; i++) \n      extractPts[iPts++] = pts[i]\n    \n    return extractPts\n  }\n  static isRing(pts) {\n    if (pts.length < 4) return false\n    if (!pts[0].equals2D(pts[pts.length - 1])) return false\n    return true\n  }\n  static ptNotInList(testPts, pts) {\n    for (let i = 0; i < testPts.length; i++) {\n      const testPt = testPts[i]\n      if (CoordinateArrays.indexOf(testPt, pts) < 0) return testPt\n    }\n    return null\n  }\n  static equals() {\n    if (arguments.length === 2) {\n      const coord1 = arguments[0], coord2 = arguments[1]\n      if (coord1 === coord2) return true\n      if (coord1 === null || coord2 === null) return false\n      if (coord1.length !== coord2.length) return false\n      for (let i = 0; i < coord1.length; i++) \n        if (!coord1[i].equals(coord2[i])) return false\n      \n      return true\n    } else if (arguments.length === 3) {\n      const coord1 = arguments[0], coord2 = arguments[1], coordinateComparator = arguments[2]\n      if (coord1 === coord2) return true\n      if (coord1 === null || coord2 === null) return false\n      if (coord1.length !== coord2.length) return false\n      for (let i = 0; i < coord1.length; i++) \n        if (coordinateComparator.compare(coord1[i], coord2[i]) !== 0) return false\n      \n      return true\n    }\n  }\n  static intersection(coordinates, env) {\n    const coordList = new CoordinateList()\n    for (let i = 0; i < coordinates.length; i++) \n      if (env.intersects(coordinates[i])) coordList.add(coordinates[i], true)\n    \n    return coordList.toCoordinateArray()\n  }\n  static measures(pts) {\n    if (pts === null || pts.length === 0) \n      return 0\n    \n    let measures = 0\n    for (const coordinate of pts) \n      measures = Math.max(measures, Coordinates.measures(coordinate))\n    \n    return measures\n  }\n  static hasRepeatedPoints(coord) {\n    for (let i = 1; i < coord.length; i++) \n      if (coord[i - 1].equals(coord[i])) \n        return true\n      \n    \n    return false\n  }\n  static toCoordinateArray(coordList) {\n    return coordList.toArray(CoordinateArrays.coordArrayType)\n  }\n  static dimension(pts) {\n    if (pts === null || pts.length === 0) \n      return 3\n    \n    let dimension = 0\n    for (const coordinate of pts) \n      dimension = Math.max(dimension, Coordinates.dimension(coordinate))\n    \n    return dimension\n  }\n  static atLeastNCoordinatesOrNothing(n, c) {\n    return c.length >= n ? c : []\n  }\n  static indexOf(coordinate, coordinates) {\n    for (let i = 0; i < coordinates.length; i++) \n      if (coordinate.equals(coordinates[i])) \n        return i\n      \n    \n    return -1\n  }\n  static increasingDirection(pts) {\n    for (let i = 0; i < Math.trunc(pts.length / 2); i++) {\n      const j = pts.length - 1 - i\n      const comp = pts[i].compareTo(pts[j])\n      if (comp !== 0) return comp\n    }\n    return 1\n  }\n  static compare(pts1, pts2) {\n    let i = 0\n    while (i < pts1.length && i < pts2.length) {\n      const compare = pts1[i].compareTo(pts2[i])\n      if (compare !== 0) return compare\n      i++\n    }\n    if (i < pts2.length) return -1\n    if (i < pts1.length) return 1\n    return 0\n  }\n  static minCoordinate(coordinates) {\n    let minCoord = null\n    for (let i = 0; i < coordinates.length; i++) \n      if (minCoord === null || minCoord.compareTo(coordinates[i]) > 0) \n        minCoord = coordinates[i]\n      \n    \n    return minCoord\n  }\n}\nclass ForwardComparator {\n  compare(o1, o2) {\n    const pts1 = o1\n    const pts2 = o2\n    return CoordinateArrays.compare(pts1, pts2)\n  }\n  get interfaces_() {\n    return [Comparator]\n  }\n}\nclass BidirectionalComparator {\n  compare(o1, o2) {\n    const pts1 = o1\n    const pts2 = o2\n    if (pts1.length < pts2.length) return -1\n    if (pts1.length > pts2.length) return 1\n    if (pts1.length === 0) return 0\n    const forwardComp = CoordinateArrays.compare(pts1, pts2)\n    const isEqualRev = CoordinateArrays.isEqualReversed(pts1, pts2)\n    if (isEqualRev) return 0\n    return forwardComp\n  }\n  OLDcompare(o1, o2) {\n    const pts1 = o1\n    const pts2 = o2\n    if (pts1.length < pts2.length) return -1\n    if (pts1.length > pts2.length) return 1\n    if (pts1.length === 0) return 0\n    const dir1 = CoordinateArrays.increasingDirection(pts1)\n    const dir2 = CoordinateArrays.increasingDirection(pts2)\n    let i1 = dir1 > 0 ? 0 : pts1.length - 1\n    let i2 = dir2 > 0 ? 0 : pts1.length - 1\n    for (let i = 0; i < pts1.length; i++) {\n      const comparePt = pts1[i1].compareTo(pts2[i2])\n      if (comparePt !== 0) return comparePt\n      i1 += dir1\n      i2 += dir2\n    }\n    return 0\n  }\n  get interfaces_() {\n    return [Comparator]\n  }\n}\nCoordinateArrays.ForwardComparator = ForwardComparator\nCoordinateArrays.BidirectionalComparator = BidirectionalComparator\nCoordinateArrays.coordArrayType = new Array(0).fill(null)\n","import hasInterface from '../../../../hasInterface.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport CGAlgorithmsDD from './CGAlgorithmsDD.js'\nimport CoordinateSequence from '../geom/CoordinateSequence.js'\nexport default class Orientation {\n  static isCCW() {\n    if (arguments[0] instanceof Array) {\n      const ring = arguments[0]\n      const nPts = ring.length - 1\n      if (nPts < 3) throw new IllegalArgumentException('Ring has fewer than 4 points, so orientation cannot be determined')\n      let hiPt = ring[0]\n      let hiIndex = 0\n      for (let i = 1; i <= nPts; i++) {\n        const p = ring[i]\n        if (p.y > hiPt.y) {\n          hiPt = p\n          hiIndex = i\n        }\n      }\n      let iPrev = hiIndex\n      do {\n        iPrev = iPrev - 1\n        if (iPrev < 0) iPrev = nPts\n      } while (ring[iPrev].equals2D(hiPt) && iPrev !== hiIndex)\n      let iNext = hiIndex\n      do \n        iNext = (iNext + 1) % nPts\n      while (ring[iNext].equals2D(hiPt) && iNext !== hiIndex)\n      const prev = ring[iPrev]\n      const next = ring[iNext]\n      if (prev.equals2D(hiPt) || next.equals2D(hiPt) || prev.equals2D(next)) return false\n      const disc = Orientation.index(prev, hiPt, next)\n      let isCCW = null\n      if (disc === 0) \n        isCCW = prev.x > next.x\n      else \n        isCCW = disc > 0\n      \n      return isCCW\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      const ring = arguments[0]\n      const nPts = ring.size() - 1\n      if (nPts < 3) throw new IllegalArgumentException('Ring has fewer than 4 points, so orientation cannot be determined')\n      let hiPt = ring.getCoordinate(0)\n      let hiIndex = 0\n      for (let i = 1; i <= nPts; i++) {\n        const p = ring.getCoordinate(i)\n        if (p.y > hiPt.y) {\n          hiPt = p\n          hiIndex = i\n        }\n      }\n      let prev = null\n      let iPrev = hiIndex\n      do {\n        iPrev = iPrev - 1\n        if (iPrev < 0) iPrev = nPts\n        prev = ring.getCoordinate(iPrev)\n      } while (prev.equals2D(hiPt) && iPrev !== hiIndex)\n      let next = null\n      let iNext = hiIndex\n      do {\n        iNext = (iNext + 1) % nPts\n        next = ring.getCoordinate(iNext)\n      } while (next.equals2D(hiPt) && iNext !== hiIndex)\n      if (prev.equals2D(hiPt) || next.equals2D(hiPt) || prev.equals2D(next)) return false\n      const disc = Orientation.index(prev, hiPt, next)\n      let isCCW = null\n      if (disc === 0) \n        isCCW = prev.x > next.x\n      else \n        isCCW = disc > 0\n      \n      return isCCW\n    }\n  }\n  static index(p1, p2, q) {\n    return CGAlgorithmsDD.orientationIndex(p1, p2, q)\n  }\n}\nOrientation.CLOCKWISE = -1\nOrientation.RIGHT = Orientation.CLOCKWISE\nOrientation.COUNTERCLOCKWISE = 1\nOrientation.LEFT = Orientation.COUNTERCLOCKWISE\nOrientation.COLLINEAR = 0\nOrientation.STRAIGHT = Orientation.COLLINEAR\n","export default class NumberUtil {\n  static equalsWithTolerance(x1, x2, tolerance) {\n    return Math.abs(x1 - x2) <= tolerance\n  }\n}\n","import NumberUtil from '../util/NumberUtil.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport Double from '../../../../java/lang/Double.js'\nimport Comparable from '../../../../java/lang/Comparable.js'\nimport Serializable from '../../../../java/io/Serializable.js'\nimport Assert from '../util/Assert.js'\nimport Cloneable from '../../../../java/lang/Cloneable.js'\nimport Comparator from '../../../../java/util/Comparator.js'\n\nconst kBuf = new ArrayBuffer(8)\nconst kBufAsF64 = new Float64Array(kBuf)\nconst kBufAsI32 = new Int32Array(kBuf)\n\nexport default class Coordinate {\n  constructor() {\n    Coordinate.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.x = null\n    this.y = null\n    this.z = null\n    if (arguments.length === 0) {\n      Coordinate.constructor_.call(this, 0.0, 0.0)\n    } else if (arguments.length === 1) {\n      const c = arguments[0]\n      Coordinate.constructor_.call(this, c.x, c.y, c.getZ())\n    } else if (arguments.length === 2) {\n      const x = arguments[0], y = arguments[1]\n      Coordinate.constructor_.call(this, x, y, Coordinate.NULL_ORDINATE)\n    } else if (arguments.length === 3) {\n      const x = arguments[0], y = arguments[1], z = arguments[2]\n      this.x = x\n      this.y = y\n      this.z = z\n    }\n  }\n  static hashCode(n) {\n    kBufAsF64[0] = n\n    return kBufAsI32[0] ^ kBufAsI32[1]\n  }\n  equals2D() {\n    if (arguments.length === 1) {\n      const other = arguments[0]\n      if (this.x !== other.x) \n        return false\n      \n      if (this.y !== other.y) \n        return false\n      \n      return true\n    } else if (arguments.length === 2) {\n      const c = arguments[0], tolerance = arguments[1]\n      if (!NumberUtil.equalsWithTolerance(this.x, c.x, tolerance)) \n        return false\n      \n      if (!NumberUtil.equalsWithTolerance(this.y, c.y, tolerance)) \n        return false\n      \n      return true\n    }\n  }\n  setM(m) {\n    throw new IllegalArgumentException('Invalid ordinate index: ' + Coordinate.M)\n  }\n  equals3D(other) {\n    return this.x === other.x && this.y === other.y && (this.getZ() === other.getZ() || Double.isNaN(this.getZ()) && Double.isNaN(other.getZ()))\n  }\n  setX(x) {\n    this.x = x\n  }\n  compareTo(o) {\n    const other = o\n    if (this.x < other.x) return -1\n    if (this.x > other.x) return 1\n    if (this.y < other.y) return -1\n    if (this.y > other.y) return 1\n    return 0\n  }\n  getX() {\n    return this.x\n  }\n  copy() {\n    return new Coordinate(this)\n  }\n  toString() {\n    return '(' + this.x + ', ' + this.y + ', ' + this.getZ() + ')'\n  }\n  distance3D(c) {\n    const dx = this.x - c.x\n    const dy = this.y - c.y\n    const dz = this.getZ() - c.getZ()\n    return Math.sqrt(dx * dx + dy * dy + dz * dz)\n  }\n  getY() {\n    return this.y\n  }\n  getM() {\n    return Double.NaN\n  }\n  setOrdinate(ordinateIndex, value) {\n    switch (ordinateIndex) {\n    case Coordinate.X:\n      this.x = value\n      break\n    case Coordinate.Y:\n      this.y = value\n      break\n    case Coordinate.Z:\n      this.setZ(value)\n      break\n    default:\n      throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n    }\n  }\n  getZ() {\n    return this.z\n  }\n  getOrdinate(ordinateIndex) {\n    switch (ordinateIndex) {\n    case Coordinate.X:\n      return this.x\n    case Coordinate.Y:\n      return this.y\n    case Coordinate.Z:\n      return this.getZ()\n    }\n    throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n  }\n  equals(other) {\n    if (!(other instanceof Coordinate)) \n      return false\n    \n    return this.equals2D(other)\n  }\n  equalInZ(c, tolerance) {\n    return NumberUtil.equalsWithTolerance(this.getZ(), c.getZ(), tolerance)\n  }\n  setZ(z) {\n    this.z = z\n  }\n  clone() {\n    try {\n      const coord = null\n      return coord\n    } catch (e) {\n      if (e instanceof CloneNotSupportedException) {\n        Assert.shouldNeverReachHere('this shouldn\\'t happen because this class is Cloneable')\n        return null\n      } else {\n        throw e\n      }\n    } finally {}\n  }\n  setY(y) {\n    this.y = y\n  }\n  distance(c) {\n    const dx = this.x - c.x\n    const dy = this.y - c.y\n    return Math.sqrt(dx * dx + dy * dy)\n  }\n  hashCode() {\n    let result = 17\n    result = 37 * result + Coordinate.hashCode(this.x)\n    result = 37 * result + Coordinate.hashCode(this.y)\n    return result\n  }\n  setCoordinate(other) {\n    this.x = other.x\n    this.y = other.y\n    this.z = other.getZ()\n  }\n  get interfaces_() {\n    return [Comparable, Cloneable, Serializable]\n  }\n}\nclass DimensionalComparator {\n  constructor() {\n    DimensionalComparator.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._dimensionsToTest = 2\n    if (arguments.length === 0) {\n      DimensionalComparator.constructor_.call(this, 2)\n    } else if (arguments.length === 1) {\n      const dimensionsToTest = arguments[0]\n      if (dimensionsToTest !== 2 && dimensionsToTest !== 3) throw new IllegalArgumentException('only 2 or 3 dimensions may be specified')\n      this._dimensionsToTest = dimensionsToTest\n    }\n  }\n  static compare(a, b) {\n    if (a < b) return -1\n    if (a > b) return 1\n    if (Double.isNaN(a)) {\n      if (Double.isNaN(b)) return 0\n      return -1\n    }\n    if (Double.isNaN(b)) return 1\n    return 0\n  }\n  compare(c1, c2) {\n    const compX = DimensionalComparator.compare(c1.x, c2.x)\n    if (compX !== 0) return compX\n    const compY = DimensionalComparator.compare(c1.y, c2.y)\n    if (compY !== 0) return compY\n    if (this._dimensionsToTest <= 2) return 0\n    const compZ = DimensionalComparator.compare(c1.getZ(), c2.getZ())\n    return compZ\n  }\n  get interfaces_() {\n    return [Comparator]\n  }\n}\nCoordinate.DimensionalComparator = DimensionalComparator\nCoordinate.NULL_ORDINATE = Double.NaN\nCoordinate.X = 0\nCoordinate.Y = 1\nCoordinate.Z = 2\nCoordinate.M = 3\n","import Geometry from './Geometry.js'\nimport GeometryCollection from './GeometryCollection.js'\nimport Polygonal from './Polygonal.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nexport default class MultiPolygon extends GeometryCollection {\n  constructor() {\n    super()\n    MultiPolygon.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    const polygons = arguments[0], factory = arguments[1]\n    GeometryCollection.constructor_.call(this, polygons, factory)\n  }\n  copyInternal() {\n    const polygons = new Array(this._geometries.length).fill(null)\n    for (let i = 0; i < polygons.length; i++) \n      polygons[i] = this._geometries[i].copy()\n    \n    return new MultiPolygon(polygons, this._factory)\n  }\n  equalsExact() {\n    if (arguments.length === 2 && (typeof arguments[1] === 'number' && arguments[0] instanceof Geometry)) {\n      const other = arguments[0], tolerance = arguments[1]\n      if (!this.isEquivalentClass(other)) \n        return false\n      \n      return super.equalsExact.call(this, other, tolerance)\n    } else {\n      return super.equalsExact.apply(this, arguments)\n    }\n  }\n  getBoundaryDimension() {\n    return 1\n  }\n  getTypeCode() {\n    return Geometry.TYPECODE_MULTIPOLYGON\n  }\n  getDimension() {\n    return 2\n  }\n  getBoundary() {\n    if (this.isEmpty()) \n      return this.getFactory().createMultiLineString()\n    \n    const allRings = new ArrayList()\n    for (let i = 0; i < this._geometries.length; i++) {\n      const polygon = this._geometries[i]\n      const rings = polygon.getBoundary()\n      for (let j = 0; j < rings.getNumGeometries(); j++) \n        allRings.add(rings.getGeometryN(j))\n      \n    }\n    const allRingsArray = new Array(allRings.size()).fill(null)\n    return this.getFactory().createMultiLineString(allRings.toArray(allRingsArray))\n  }\n  getGeometryType() {\n    return Geometry.TYPENAME_MULTIPOLYGON\n  }\n  get interfaces_() {\n    return [Polygonal]\n  }\n}\n","export default class Character {\n  static isWhitespace(c) {\n    return ((c <= 32 && c >= 0) || c === 127)\n  }\n\n  static toUpperCase(c) {\n    return c.toUpperCase()\n  }\n}\n","import hasInterface from '../../../../hasInterface.js'\nimport Coordinate from './Coordinate.js'\nimport Double from '../../../../java/lang/Double.js'\nimport CoordinateSequence from './CoordinateSequence.js'\nexport default class CoordinateSequences {\n  static scroll() {\n    if (arguments.length === 2) {\n      if (hasInterface(arguments[0], CoordinateSequence) && Number.isInteger(arguments[1])) {\n        const seq = arguments[0], indexOfFirstCoordinate = arguments[1]\n        CoordinateSequences.scroll(seq, indexOfFirstCoordinate, CoordinateSequences.isRing(seq))\n      } else if (hasInterface(arguments[0], CoordinateSequence) && arguments[1] instanceof Coordinate) {\n        const seq = arguments[0], firstCoordinate = arguments[1]\n        const i = CoordinateSequences.indexOf(firstCoordinate, seq)\n        if (i <= 0) return null\n        CoordinateSequences.scroll(seq, i)\n      }\n    } else if (arguments.length === 3) {\n      const seq = arguments[0], indexOfFirstCoordinate = arguments[1], ensureRing = arguments[2]\n      const i = indexOfFirstCoordinate\n      if (i <= 0) return null\n      const copy = seq.copy()\n      const last = ensureRing ? seq.size() - 1 : seq.size()\n      for (let j = 0; j < last; j++) \n        for (let k = 0; k < seq.getDimension(); k++) seq.setOrdinate(j, k, copy.getOrdinate((indexOfFirstCoordinate + j) % last, k))\n      \n      if (ensureRing) \n        for (let k = 0; k < seq.getDimension(); k++) seq.setOrdinate(last, k, seq.getOrdinate(0, k))\n      \n    }\n  }\n  static isEqual(cs1, cs2) {\n    const cs1Size = cs1.size()\n    const cs2Size = cs2.size()\n    if (cs1Size !== cs2Size) return false\n    const dim = Math.min(cs1.getDimension(), cs2.getDimension())\n    for (let i = 0; i < cs1Size; i++) \n      for (let d = 0; d < dim; d++) {\n        const v1 = cs1.getOrdinate(i, d)\n        const v2 = cs2.getOrdinate(i, d)\n        if (cs1.getOrdinate(i, d) === cs2.getOrdinate(i, d)) continue\n        if (Double.isNaN(v1) && Double.isNaN(v2)) continue\n        return false\n      }\n    \n    return true\n  }\n  static minCoordinateIndex() {\n    if (arguments.length === 1) {\n      const seq = arguments[0]\n      return CoordinateSequences.minCoordinateIndex(seq, 0, seq.size() - 1)\n    } else if (arguments.length === 3) {\n      const seq = arguments[0], from = arguments[1], to = arguments[2]\n      let minCoordIndex = -1\n      let minCoord = null\n      for (let i = from; i <= to; i++) {\n        const testCoord = seq.getCoordinate(i)\n        if (minCoord === null || minCoord.compareTo(testCoord) > 0) {\n          minCoord = testCoord\n          minCoordIndex = i\n        }\n      }\n      return minCoordIndex\n    }\n  }\n  static extend(fact, seq, size) {\n    const newseq = fact.create(size, seq.getDimension())\n    const n = seq.size()\n    CoordinateSequences.copy(seq, 0, newseq, 0, n)\n    if (n > 0) \n      for (let i = n; i < size; i++) CoordinateSequences.copy(seq, n - 1, newseq, i, 1)\n    \n    return newseq\n  }\n  static reverse(seq) {\n    const last = seq.size() - 1\n    const mid = Math.trunc(last / 2)\n    for (let i = 0; i <= mid; i++) \n      CoordinateSequences.swap(seq, i, last - i)\n    \n  }\n  static ensureValidRing(fact, seq) {\n    const n = seq.size()\n    if (n === 0) return seq\n    if (n <= 3) return CoordinateSequences.createClosedRing(fact, seq, 4)\n    const isClosed = seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y)\n    if (isClosed) return seq\n    return CoordinateSequences.createClosedRing(fact, seq, n + 1)\n  }\n  static minCoordinate(seq) {\n    let minCoord = null\n    for (let i = 0; i < seq.size(); i++) {\n      const testCoord = seq.getCoordinate(i)\n      if (minCoord === null || minCoord.compareTo(testCoord) > 0) \n        minCoord = testCoord\n      \n    }\n    return minCoord\n  }\n  static copyCoord(src, srcPos, dest, destPos) {\n    const minDim = Math.min(src.getDimension(), dest.getDimension())\n    for (let dim = 0; dim < minDim; dim++) \n      dest.setOrdinate(destPos, dim, src.getOrdinate(srcPos, dim))\n    \n  }\n  static isRing(seq) {\n    const n = seq.size()\n    if (n === 0) return true\n    if (n <= 3) return false\n    return seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y)\n  }\n  static swap(seq, i, j) {\n    if (i === j) return null\n    for (let dim = 0; dim < seq.getDimension(); dim++) {\n      const tmp = seq.getOrdinate(i, dim)\n      seq.setOrdinate(i, dim, seq.getOrdinate(j, dim))\n      seq.setOrdinate(j, dim, tmp)\n    }\n  }\n  static copy(src, srcPos, dest, destPos, length) {\n    for (let i = 0; i < length; i++) \n      CoordinateSequences.copyCoord(src, srcPos + i, dest, destPos + i)\n    \n  }\n  static indexOf(coordinate, seq) {\n    for (let i = 0; i < seq.size(); i++) \n      if (coordinate.x === seq.getOrdinate(i, CoordinateSequence.X) && coordinate.y === seq.getOrdinate(i, CoordinateSequence.Y)) \n        return i\n      \n    \n    return -1\n  }\n  static createClosedRing(fact, seq, size) {\n    const newseq = fact.create(size, seq.getDimension())\n    const n = seq.size()\n    CoordinateSequences.copy(seq, 0, newseq, 0, n)\n    for (let i = n; i < size; i++) CoordinateSequences.copy(seq, 0, newseq, i, 1)\n    return newseq\n  }\n}\n","export default class StringBuilder {\n  constructor(str) {\n    this.str = str\n  }\n  append(e) {\n    this.str += e\n  }\n  setCharAt(i, c) {\n    this.str = this.str.substr(0, i) + c + this.str.substr(i + 1)\n  }\n  toString() {\n    return this.str\n  }\n}","import LineString from './LineString.js'\nimport Geometry from './Geometry.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport CoordinateSequences from './CoordinateSequences.js'\nimport Dimension from './Dimension.js'\nexport default class LinearRing extends LineString {\n  constructor() {\n    super()\n    LinearRing.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    const points = arguments[0], factory = arguments[1]\n    LineString.constructor_.call(this, points, factory)\n    this.validateConstruction()\n  }\n  copyInternal() {\n    return new LinearRing(this._points.copy(), this._factory)\n  }\n  getBoundaryDimension() {\n    return Dimension.FALSE\n  }\n  isClosed() {\n    if (this.isEmpty()) \n      return true\n    \n    return super.isClosed.call(this)\n  }\n  reverseInternal() {\n    const seq = this._points.copy()\n    CoordinateSequences.reverse(seq)\n    return this.getFactory().createLinearRing(seq)\n  }\n  getTypeCode() {\n    return Geometry.TYPECODE_LINEARRING\n  }\n  validateConstruction() {\n    if (!this.isEmpty() && !super.isClosed.call(this)) \n      throw new IllegalArgumentException('Points of LinearRing do not form a closed linestring')\n    \n    if (this.getCoordinateSequence().size() >= 1 && this.getCoordinateSequence().size() < LinearRing.MINIMUM_VALID_SIZE) \n      throw new IllegalArgumentException('Invalid number of points in LinearRing (found ' + this.getCoordinateSequence().size() + ' - must be 0 or >= 4)')\n    \n  }\n  getGeometryType() {\n    return Geometry.TYPENAME_LINEARRING\n  }\n}\nLinearRing.MINIMUM_VALID_SIZE = 4\n","export default class Integer {\n  constructor(value) {\n    this.value = value\n  }\n\n  intValue() {\n    return this.value\n  }\n\n  compareTo(o) {\n    if (this.value < o)\n      return -1\n    if (this.value > o)\n      return 1\n    return 0\n  }\n\n  static compare(x, y) {\n    if (x < y)\n      return -1\n    if (x > y)\n      return 1\n    return 0\n  }\n\n  static isNan(n) {\n    return Number.isNaN(n)\n  }\n\n  static valueOf(value) {\n    return new Integer(value)\n  }\n}\n","export default function Comparable() {}\n","import Collection from './Collection.js'\nimport IndexOutOfBoundsException from '../lang/IndexOutOfBoundsException.js'\nimport List from './List.js'\nimport NoSuchElementException from './NoSuchElementException.js'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/ArrayList.html\n */\nexport default class ArrayList extends List {\n\n  constructor(o) {\n    super()\n    this.array = []\n    if (o instanceof Collection) this.addAll(o)\n  }\n\n  get interfaces_() {\n    return [List, Collection]\n  }\n\n  ensureCapacity() { }\n\n  add(e) {\n    if (arguments.length === 1)\n      this.array.push(e)\n    else\n      this.array.splice(arguments[0], 0, arguments[1])\n    return true\n  }\n\n  clear() {\n    this.array = []\n  }\n\n  addAll(c) {\n    for (const e of c)\n      this.array.push(e)\n  }\n\n  set(index, element) {\n    const oldElement = this.array[index]\n    this.array[index] = element\n    return oldElement\n  }\n\n  iterator() {\n    return new Iterator(this)\n  }\n\n  get(index) {\n    if (index < 0 || index >= this.size())\n      throw new IndexOutOfBoundsException()\n    return this.array[index]\n  }\n\n  isEmpty() {\n    return this.array.length === 0\n  }\n\n  sort(comparator) {\n    if (comparator)\n      this.array.sort((a, b) => comparator.compare(a, b))\n    else this.array.sort()\n  }\n\n  size() {\n    return this.array.length\n  }\n\n  toArray() {\n    return this.array.slice()\n  }\n\n  remove(o) {\n    for (let i = 0, len = this.array.length; i < len; i++)\n      if (this.array[i] === o)\n        return !!this.array.splice(i, 1)\n    return false\n  }\n\n  [Symbol.iterator]() {\n    return this.array.values()\n  }\n}\n\nclass Iterator {\n  constructor(arrayList) {\n    this.arrayList = arrayList\n    this.position = 0\n  }\n\n  next() {\n    if (this.position === this.arrayList.size())\n      throw new NoSuchElementException()\n    return this.arrayList.get(this.position++)\n  }\n\n  hasNext() {\n    return this.position < this.arrayList.size()\n  }\n\n  set(element) {\n    return this.arrayList.set(this.position - 1, element)\n  }\n\n  remove() {\n    this.arrayList.remove(this.arrayList.get(this.position))\n  }\n}\n","/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Map.html\n */\nexport default class Map {\n  /**\n     * Returns the value to which the specified key is mapped, or null if this map\n     * contains no mapping for the key.\n     * @param {Object} key\n     * @return {Object}\n     */\n  get() { }\n\n  /**\n     * Associates the specified value with the specified key in this map (optional\n     * operation).\n     * @param {Object} key\n     * @param {Object} value\n     * @return {Object}\n     */\n  put() { }\n\n  /**\n     * Returns the number of key-value mappings in this map.\n     * @return {number}\n     */\n  size() { }\n\n  /**\n     * Returns a Collection view of the values contained in this map.\n     * @return {javascript.util.Collection}\n     */\n  values() { }\n\n  /**\n     * Returns a {@link Set} view of the mappings contained in this map.\n     * The set is backed by the map, so changes to the map are\n     * reflected in the set, and vice-versa.  If the map is modified\n     * while an iteration over the set is in progress (except through\n     * the iterator's own <tt>remove</tt> operation, or through the\n     * <tt>setValue</tt> operation on a map entry returned by the\n     * iterator) the results of the iteration are undefined.  The set\n     * supports element removal, which removes the corresponding\n     * mapping from the map, via the <tt>Iterator.remove</tt>,\n     * <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and\n     * <tt>clear</tt> operations.  It does not support the\n     * <tt>add</tt> or <tt>addAll</tt> operations.\n     *\n     * @return {Set} a set view of the mappings contained in this map\n     */\n  entrySet() { }\n}\n","import hasInterface from '../../../../hasInterface.js'\nimport CoordinateSequence from './CoordinateSequence.js'\nexport default class CoordinateSequenceFactory {\n  create() {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Array) {\n        const coordinates = arguments[0]\n      } else if (hasInterface(arguments[0], CoordinateSequence)) {\n        const coordSeq = arguments[0]\n      }\n    } else if (arguments.length === 2) {\n      const size = arguments[0], dimension = arguments[1]\n    } else if (arguments.length === 3) {\n      const size = arguments[0], dimension = arguments[1], measures = arguments[2]\n      return this.create(size, dimension)\n    }\n  }\n}\n","import CoordinateSequenceFactory from '../CoordinateSequenceFactory.js'\nimport CoordinateSequence from '../CoordinateSequence.js'\nimport Serializable from '../../../../../java/io/Serializable.js'\nimport hasInterface from '../../../../../hasInterface.js'\nimport CoordinateArraySequence from './CoordinateArraySequence.js'\nexport default class CoordinateArraySequenceFactory {\n  static instance() {\n    return CoordinateArraySequenceFactory.instanceObject\n  }\n  readResolve() {\n    return CoordinateArraySequenceFactory.instance()\n  }\n  create() {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Array) {\n        const coordinates = arguments[0]\n        return new CoordinateArraySequence(coordinates)\n      } else if (hasInterface(arguments[0], CoordinateSequence)) {\n        const coordSeq = arguments[0]\n        return new CoordinateArraySequence(coordSeq)\n      }\n    } else if (arguments.length === 2) {\n      let size = arguments[0], dimension = arguments[1]\n      if (dimension > 3) dimension = 3\n      if (dimension < 2) dimension = 2\n      return new CoordinateArraySequence(size, dimension)\n    } else if (arguments.length === 3) {\n      let size = arguments[0], dimension = arguments[1], measures = arguments[2]\n      let spatial = dimension - measures\n      if (measures > 1) \n        measures = 1\n      \n      if (spatial > 3) \n        spatial = 3\n      \n      if (spatial < 2) spatial = 2\n      return new CoordinateArraySequence(size, spatial + measures, measures)\n    }\n  }\n  get interfaces_() {\n    return [CoordinateSequenceFactory, Serializable]\n  }\n}\nCoordinateArraySequenceFactory.instanceObject = new CoordinateArraySequenceFactory()\n","import hasInterface from '../../../../hasInterface.js'\nimport LinearRing from './LinearRing.js'\nimport CoordinateArraySequenceFactory from './impl/CoordinateArraySequenceFactory.js'\nimport MultiPolygon from './MultiPolygon.js'\nimport CoordinateSequences from './CoordinateSequences.js'\nimport PrecisionModel from './PrecisionModel.js'\nimport Serializable from '../../../../java/io/Serializable.js'\nimport Assert from '../util/Assert.js'\nimport MultiLineString from './MultiLineString.js'\nimport CoordinateSequenceFactory from './CoordinateSequenceFactory.js'\nimport LineString from './LineString.js'\nimport Coordinate from './Coordinate.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport Point from './Point.js'\nimport Polygon from './Polygon.js'\nimport MultiPoint from './MultiPoint.js'\nimport CoordinateSequence from './CoordinateSequence.js'\nimport GeometryCollection from './GeometryCollection.js'\nexport default class GeometryFactory {\n  constructor() {\n    GeometryFactory.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._precisionModel = null\n    this._coordinateSequenceFactory = null\n    this._SRID = null\n    if (arguments.length === 0) {\n      GeometryFactory.constructor_.call(this, new PrecisionModel(), 0)\n    } else if (arguments.length === 1) {\n      if (hasInterface(arguments[0], CoordinateSequenceFactory)) {\n        const coordinateSequenceFactory = arguments[0]\n        GeometryFactory.constructor_.call(this, new PrecisionModel(), 0, coordinateSequenceFactory)\n      } else if (arguments[0] instanceof PrecisionModel) {\n        const precisionModel = arguments[0]\n        GeometryFactory.constructor_.call(this, precisionModel, 0, GeometryFactory.getDefaultCoordinateSequenceFactory())\n      }\n    } else if (arguments.length === 2) {\n      const precisionModel = arguments[0], SRID = arguments[1]\n      GeometryFactory.constructor_.call(this, precisionModel, SRID, GeometryFactory.getDefaultCoordinateSequenceFactory())\n    } else if (arguments.length === 3) {\n      const precisionModel = arguments[0], SRID = arguments[1], coordinateSequenceFactory = arguments[2]\n      this._precisionModel = precisionModel\n      this._coordinateSequenceFactory = coordinateSequenceFactory\n      this._SRID = SRID\n    }\n  }\n  static toMultiPolygonArray(multiPolygons) {\n    const multiPolygonArray = new Array(multiPolygons.size()).fill(null)\n    return multiPolygons.toArray(multiPolygonArray)\n  }\n  static toGeometryArray(geometries) {\n    if (geometries === null) return null\n    const geometryArray = new Array(geometries.size()).fill(null)\n    return geometries.toArray(geometryArray)\n  }\n  static getDefaultCoordinateSequenceFactory() {\n    return CoordinateArraySequenceFactory.instance()\n  }\n  static toMultiLineStringArray(multiLineStrings) {\n    const multiLineStringArray = new Array(multiLineStrings.size()).fill(null)\n    return multiLineStrings.toArray(multiLineStringArray)\n  }\n  static toLineStringArray(lineStrings) {\n    const lineStringArray = new Array(lineStrings.size()).fill(null)\n    return lineStrings.toArray(lineStringArray)\n  }\n  static toMultiPointArray(multiPoints) {\n    const multiPointArray = new Array(multiPoints.size()).fill(null)\n    return multiPoints.toArray(multiPointArray)\n  }\n  static toLinearRingArray(linearRings) {\n    const linearRingArray = new Array(linearRings.size()).fill(null)\n    return linearRings.toArray(linearRingArray)\n  }\n  static toPointArray(points) {\n    const pointArray = new Array(points.size()).fill(null)\n    return points.toArray(pointArray)\n  }\n  static toPolygonArray(polygons) {\n    const polygonArray = new Array(polygons.size()).fill(null)\n    return polygons.toArray(polygonArray)\n  }\n  static createPointFromInternalCoord(coord, exemplar) {\n    exemplar.getPrecisionModel().makePrecise(coord)\n    return exemplar.getFactory().createPoint(coord)\n  }\n  createEmpty(dimension) {\n    switch (dimension) {\n    case -1:\n      return this.createGeometryCollection()\n    case 0:\n      return this.createPoint()\n    case 1:\n      return this.createLineString()\n    case 2:\n      return this.createPolygon()\n    default:\n      throw new IllegalArgumentException('Invalid dimension: ' + dimension)\n    }\n  }\n  toGeometry(envelope) {\n    if (envelope.isNull()) \n      return this.createPoint()\n    \n    if (envelope.getMinX() === envelope.getMaxX() && envelope.getMinY() === envelope.getMaxY()) \n      return this.createPoint(new Coordinate(envelope.getMinX(), envelope.getMinY()))\n    \n    if (envelope.getMinX() === envelope.getMaxX() || envelope.getMinY() === envelope.getMaxY()) \n      return this.createLineString([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY())])\n    \n    return this.createPolygon(this.createLinearRing([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMinY())]), null)\n  }\n  createLineString() {\n    if (arguments.length === 0) \n      return this.createLineString(this.getCoordinateSequenceFactory().create([]))\n    else if (arguments.length === 1) \n      if (arguments[0] instanceof Array) {\n        const coordinates = arguments[0]\n        return this.createLineString(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n      } else if (hasInterface(arguments[0], CoordinateSequence)) {\n        const coordinates = arguments[0]\n        return new LineString(coordinates, this)\n      }\n    \n  }\n  createMultiLineString() {\n    if (arguments.length === 0) {\n      return new MultiLineString(null, this)\n    } else if (arguments.length === 1) {\n      const lineStrings = arguments[0]\n      return new MultiLineString(lineStrings, this)\n    }\n  }\n  createPolygon() {\n    if (arguments.length === 0) {\n      return this.createPolygon(null, null)\n    } else if (arguments.length === 1) {\n      if (hasInterface(arguments[0], CoordinateSequence)) {\n        const shell = arguments[0]\n        return this.createPolygon(this.createLinearRing(shell))\n      } else if (arguments[0] instanceof Array) {\n        const shell = arguments[0]\n        return this.createPolygon(this.createLinearRing(shell))\n      } else if (arguments[0] instanceof LinearRing) {\n        const shell = arguments[0]\n        return this.createPolygon(shell, null)\n      }\n    } else if (arguments.length === 2) {\n      const shell = arguments[0], holes = arguments[1]\n      return new Polygon(shell, holes, this)\n    }\n  }\n  getSRID() {\n    return this._SRID\n  }\n  createGeometryCollection() {\n    if (arguments.length === 0) {\n      return new GeometryCollection(null, this)\n    } else if (arguments.length === 1) {\n      const geometries = arguments[0]\n      return new GeometryCollection(geometries, this)\n    }\n  }\n  getPrecisionModel() {\n    return this._precisionModel\n  }\n  createLinearRing() {\n    if (arguments.length === 0) \n      return this.createLinearRing(this.getCoordinateSequenceFactory().create([]))\n    else if (arguments.length === 1) \n      if (arguments[0] instanceof Array) {\n        const coordinates = arguments[0]\n        return this.createLinearRing(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n      } else if (hasInterface(arguments[0], CoordinateSequence)) {\n        const coordinates = arguments[0]\n        return new LinearRing(coordinates, this)\n      }\n    \n  }\n  createMultiPolygon() {\n    if (arguments.length === 0) {\n      return new MultiPolygon(null, this)\n    } else if (arguments.length === 1) {\n      const polygons = arguments[0]\n      return new MultiPolygon(polygons, this)\n    }\n  }\n  createMultiPoint() {\n    if (arguments.length === 0) \n      return new MultiPoint(null, this)\n    else if (arguments.length === 1) \n      if (arguments[0] instanceof Array) {\n        const point = arguments[0]\n        return new MultiPoint(point, this)\n      } else if (hasInterface(arguments[0], CoordinateSequence)) {\n        const coordinates = arguments[0]\n        if (coordinates === null) \n          return this.createMultiPoint(new Array(0).fill(null))\n        \n        const points = new Array(coordinates.size()).fill(null)\n        for (let i = 0; i < coordinates.size(); i++) {\n          const ptSeq = this.getCoordinateSequenceFactory().create(1, coordinates.getDimension(), coordinates.getMeasures())\n          CoordinateSequences.copy(coordinates, i, ptSeq, 0, 1)\n          points[i] = this.createPoint(ptSeq)\n        }\n        return this.createMultiPoint(points)\n      }\n    \n  }\n  buildGeometry(geomList) {\n    let geomType = null\n    let isHeterogeneous = false\n    let hasGeometryCollection = false\n    for (let i = geomList.iterator(); i.hasNext(); ) {\n      const geom = i.next()\n      const partType = geom.getTypeCode()\n      if (geomType === null) \n        geomType = partType\n      \n      if (partType !== geomType) \n        isHeterogeneous = true\n      \n      if (geom instanceof GeometryCollection) hasGeometryCollection = true\n    }\n    if (geomType === null) \n      return this.createGeometryCollection()\n    \n    if (isHeterogeneous || hasGeometryCollection) \n      return this.createGeometryCollection(GeometryFactory.toGeometryArray(geomList))\n    \n    const geom0 = geomList.iterator().next()\n    const isCollection = geomList.size() > 1\n    if (isCollection) {\n      if (geom0 instanceof Polygon) \n        return this.createMultiPolygon(GeometryFactory.toPolygonArray(geomList))\n      else if (geom0 instanceof LineString) \n        return this.createMultiLineString(GeometryFactory.toLineStringArray(geomList))\n      else if (geom0 instanceof Point) \n        return this.createMultiPoint(GeometryFactory.toPointArray(geomList))\n      \n      Assert.shouldNeverReachHere('Unhandled geometry type: ' + geom0.getGeometryType())\n    }\n    return geom0\n  }\n  createMultiPointFromCoords(coordinates) {\n    return this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n  }\n  createPoint() {\n    if (arguments.length === 0) \n      return this.createPoint(this.getCoordinateSequenceFactory().create([]))\n    else if (arguments.length === 1) \n      if (arguments[0] instanceof Coordinate) {\n        const coordinate = arguments[0]\n        return this.createPoint(coordinate !== null ? this.getCoordinateSequenceFactory().create([coordinate]) : null)\n      } else if (hasInterface(arguments[0], CoordinateSequence)) {\n        const coordinates = arguments[0]\n        return new Point(coordinates, this)\n      }\n    \n  }\n  getCoordinateSequenceFactory() {\n    return this._coordinateSequenceFactory\n  }\n  get interfaces_() {\n    return [Serializable]\n  }\n}\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport Character from '../../../../java/lang/Character.js'\nexport default class Dimension {\n  static toDimensionSymbol(dimensionValue) {\n    switch (dimensionValue) {\n    case Dimension.FALSE:\n      return Dimension.SYM_FALSE\n    case Dimension.TRUE:\n      return Dimension.SYM_TRUE\n    case Dimension.DONTCARE:\n      return Dimension.SYM_DONTCARE\n    case Dimension.P:\n      return Dimension.SYM_P\n    case Dimension.L:\n      return Dimension.SYM_L\n    case Dimension.A:\n      return Dimension.SYM_A\n    }\n    throw new IllegalArgumentException('Unknown dimension value: ' + dimensionValue)\n  }\n  static toDimensionValue(dimensionSymbol) {\n    switch (Character.toUpperCase(dimensionSymbol)) {\n    case Dimension.SYM_FALSE:\n      return Dimension.FALSE\n    case Dimension.SYM_TRUE:\n      return Dimension.TRUE\n    case Dimension.SYM_DONTCARE:\n      return Dimension.DONTCARE\n    case Dimension.SYM_P:\n      return Dimension.P\n    case Dimension.SYM_L:\n      return Dimension.L\n    case Dimension.SYM_A:\n      return Dimension.A\n    }\n    throw new IllegalArgumentException('Unknown dimension symbol: ' + dimensionSymbol)\n  }\n}\nDimension.P = 0\nDimension.L = 1\nDimension.A = 2\nDimension.FALSE = -1\nDimension.TRUE = -2\nDimension.DONTCARE = -3\nDimension.SYM_FALSE = 'F'\nDimension.SYM_TRUE = 'T'\nDimension.SYM_DONTCARE = '*'\nDimension.SYM_P = '0'\nDimension.SYM_L = '1'\nDimension.SYM_A = '2'\n","import Exception from './Exception.js'\n\nexport default class IllegalArgumentException extends Exception {\n  constructor(message) {\n    super(message)\n    this.name = Object.keys({ IllegalArgumentException })[0]\n  }\n}\n","import Collection from './Collection.js'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Set.html\n *\n * @extends {Collection}\n * @constructor\n * @private\n */\nexport default class Set extends Collection {\n  /**\n   * Returns true if this set contains the specified element. More formally,\n   * returns true if and only if this set contains an element e such that (o==null ?\n   * e==null : o.equals(e)).\n   * @param {Object} e\n   * @return {boolean}\n   */\n  contains() { }\n}\n","import Double from '../../../../java/lang/Double.js'\nexport default class MathUtil {\n  static log10(x) {\n    const ln = Math.log(x)\n    if (Double.isInfinite(ln)) return ln\n    if (Double.isNaN(ln)) return ln\n    return ln / MathUtil.LOG_10\n  }\n  static min(v1, v2, v3, v4) {\n    let min = v1\n    if (v2 < min) min = v2\n    if (v3 < min) min = v3\n    if (v4 < min) min = v4\n    return min\n  }\n  static clamp() {\n    if (typeof arguments[2] === 'number' && (typeof arguments[0] === 'number' && typeof arguments[1] === 'number')) {\n      const x = arguments[0], min = arguments[1], max = arguments[2]\n      if (x < min) return min\n      if (x > max) return max\n      return x\n    } else if (Number.isInteger(arguments[2]) && (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1]))) {\n      const x = arguments[0], min = arguments[1], max = arguments[2]\n      if (x < min) return min\n      if (x > max) return max\n      return x\n    }\n  }\n  static average(x1, x2) {\n    return (x1 + x2) / 2.0\n  }\n  static wrap(index, max) {\n    if (index < 0) \n      return max - -index % max\n    \n    return index % max\n  }\n  static max() {\n    if (arguments.length === 3) {\n      const v1 = arguments[0], v2 = arguments[1], v3 = arguments[2]\n      let max = v1\n      if (v2 > max) max = v2\n      if (v3 > max) max = v3\n      return max\n    } else if (arguments.length === 4) {\n      const v1 = arguments[0], v2 = arguments[1], v3 = arguments[2], v4 = arguments[3]\n      let max = v1\n      if (v2 > max) max = v2\n      if (v3 > max) max = v3\n      if (v4 > max) max = v4\n      return max\n    }\n  }\n}\nMathUtil.LOG_10 = Math.log(10)\n","/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Collection.html\n */\nexport default class Collection {\n  /**\n     * Ensures that this collection contains the specified element (optional\n     * operation).\n     * @param {Object} e\n     * @return {boolean}\n     */\n  add() { }\n  /**\n     * Appends all of the elements in the specified collection to the end of this\n     * list, in the order that they are returned by the specified collection's\n     * iterator (optional operation).\n     * @param {javascript.util.Collection} c\n     * @return {boolean}\n     */\n  addAll() { }\n  /**\n     * Returns true if this collection contains no elements.\n     * @return {boolean}\n     */\n  isEmpty() { }\n  /**\n     * Returns an iterator over the elements in this collection.\n     * @return {javascript.util.Iterator}\n     */\n  iterator() { }\n  /**\n     * Returns an iterator over the elements in this collection.\n     * @return {number}\n     */\n  size() { }\n  /**\n     * Returns an array containing all of the elements in this collection.\n     * @return {Array}\n     */\n  toArray() { }\n  /**\n     * Removes a single instance of the specified element from this collection if it\n     * is present. (optional)\n     * @param {Object} e\n     * @return {boolean}\n     */\n  remove() { }\n}\n","export default function Comparator() {}\n","import Coordinate from '../geom/Coordinate.js'\nexport default class Length {\n  static ofLine(pts) {\n    const n = pts.size()\n    if (n <= 1) return 0.0\n    let len = 0.0\n    const p = new Coordinate()\n    pts.getCoordinate(0, p)\n    let x0 = p.x\n    let y0 = p.y\n    for (let i = 1; i < n; i++) {\n      pts.getCoordinate(i, p)\n      const x1 = p.x\n      const y1 = p.y\n      const dx = x1 - x0\n      const dy = y1 - y0\n      len += Math.sqrt(dx * dx + dy * dy)\n      x0 = x1\n      y0 = y1\n    }\n    return len\n  }\n}\n","import hasInterface from '../../../../hasInterface.js'\nimport Length from '../algorithm/Length.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport GeometryComponentFilter from './GeometryComponentFilter.js'\nimport UnsupportedOperationException from '../../../../java/lang/UnsupportedOperationException.js'\nimport CoordinateArrays from './CoordinateArrays.js'\nimport Dimension from './Dimension.js'\nimport Envelope from './Envelope.js'\nimport Geometry from './Geometry.js'\nimport CoordinateFilter from './CoordinateFilter.js'\nimport Lineal from './Lineal.js'\nimport CoordinateSequences from './CoordinateSequences.js'\nimport GeometryFilter from './GeometryFilter.js'\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter.js'\nexport default class LineString extends Geometry {\n  constructor() {\n    super()\n    LineString.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._points = null\n    if (arguments.length === 0) {} else if (arguments.length === 2) {\n      const points = arguments[0], factory = arguments[1]\n      Geometry.constructor_.call(this, factory)\n      this.init(points)\n    }\n  }\n  computeEnvelopeInternal() {\n    if (this.isEmpty()) \n      return new Envelope()\n    \n    return this._points.expandEnvelope(new Envelope())\n  }\n  isRing() {\n    return this.isClosed() && CoordinateArrays.isRing(this.getCoordinates())\n  }\n  getCoordinates() {\n    return this._points.toCoordinateArray()\n  }\n  copyInternal() {\n    return new LineString(this._points.copy(), this._factory)\n  }\n  equalsExact() {\n    if (arguments.length === 2 && (typeof arguments[1] === 'number' && arguments[0] instanceof Geometry)) {\n      const other = arguments[0], tolerance = arguments[1]\n      if (!this.isEquivalentClass(other)) \n        return false\n      \n      const otherLineString = other\n      if (this._points.size() !== otherLineString._points.size()) \n        return false\n      \n      for (let i = 0; i < this._points.size(); i++) \n        if (!this.equal(this._points.getCoordinate(i), otherLineString._points.getCoordinate(i), tolerance)) \n          return false\n        \n      \n      return true\n    } else {\n      return super.equalsExact.apply(this, arguments)\n    }\n  }\n  isClosed() {\n    if (this.isEmpty()) \n      return false\n    \n    return this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints() - 1))\n  }\n  reverseInternal() {\n    const seq = this._points.copy()\n    CoordinateSequences.reverse(seq)\n    return this.getFactory().createLineString(seq)\n  }\n  getEndPoint() {\n    if (this.isEmpty()) \n      return null\n    \n    return this.getPointN(this.getNumPoints() - 1)\n  }\n  getTypeCode() {\n    return Geometry.TYPECODE_LINESTRING\n  }\n  getDimension() {\n    return 1\n  }\n  getBoundary() {\n    throw new UnsupportedOperationException()\n  }\n  isEquivalentClass(other) {\n    return other instanceof LineString\n  }\n  getCoordinateSequence() {\n    return this._points\n  }\n  getPointN(n) {\n    return this.getFactory().createPoint(this._points.getCoordinate(n))\n  }\n  normalize() {\n    for (let i = 0; i < Math.trunc(this._points.size() / 2); i++) {\n      const j = this._points.size() - 1 - i\n      if (!this._points.getCoordinate(i).equals(this._points.getCoordinate(j))) {\n        if (this._points.getCoordinate(i).compareTo(this._points.getCoordinate(j)) > 0) {\n          const copy = this._points.copy()\n          CoordinateSequences.reverse(copy)\n          this._points = copy\n        }\n        return null\n      }\n    }\n  }\n  getCoordinate() {\n    if (this.isEmpty()) return null\n    return this._points.getCoordinate(0)\n  }\n  getBoundaryDimension() {\n    if (this.isClosed()) \n      return Dimension.FALSE\n    \n    return 0\n  }\n  getLength() {\n    return Length.ofLine(this._points)\n  }\n  getNumPoints() {\n    return this._points.size()\n  }\n  compareToSameClass() {\n    if (arguments.length === 1) {\n      const o = arguments[0]\n      const line = o\n      let i = 0\n      let j = 0\n      while (i < this._points.size() && j < line._points.size()) {\n        const comparison = this._points.getCoordinate(i).compareTo(line._points.getCoordinate(j))\n        if (comparison !== 0) \n          return comparison\n        \n        i++\n        j++\n      }\n      if (i < this._points.size()) \n        return 1\n      \n      if (j < line._points.size()) \n        return -1\n      \n      return 0\n    } else if (arguments.length === 2) {\n      const o = arguments[0], comp = arguments[1]\n      const line = o\n      return comp.compare(this._points, line._points)\n    }\n  }\n  apply() {\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      const filter = arguments[0]\n      for (let i = 0; i < this._points.size(); i++) \n        filter.filter(this._points.getCoordinate(i))\n      \n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      const filter = arguments[0]\n      if (this._points.size() === 0) return null\n      for (let i = 0; i < this._points.size(); i++) {\n        filter.filter(this._points, i)\n        if (filter.isDone()) break\n      }\n      if (filter.isGeometryChanged()) this.geometryChanged()\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n    }\n  }\n  getCoordinateN(n) {\n    return this._points.getCoordinate(n)\n  }\n  getGeometryType() {\n    return Geometry.TYPENAME_LINESTRING\n  }\n  isEmpty() {\n    return this._points.size() === 0\n  }\n  init(points) {\n    if (points === null) \n      points = this.getFactory().getCoordinateSequenceFactory().create([])\n    \n    if (points.size() === 1) \n      throw new IllegalArgumentException('Invalid number of points in LineString (found ' + points.size() + ' - must be 0 or >= 2)')\n    \n    this._points = points\n  }\n  isCoordinate(pt) {\n    for (let i = 0; i < this._points.size(); i++) \n      if (this._points.getCoordinate(i).equals(pt)) \n        return true\n      \n    \n    return false\n  }\n  getStartPoint() {\n    if (this.isEmpty()) \n      return null\n    \n    return this.getPointN(0)\n  }\n  get interfaces_() {\n    return [Lineal]\n  }\n}\n","export default class CoordinateFilter {\n  filter(coord) {}\n}\n","export default function Clonable() {}\n","export default class Puntal {}\n","import Geometry from './Geometry.js'\nimport GeometryCollection from './GeometryCollection.js'\nimport Dimension from './Dimension.js'\nimport Puntal from './Puntal.js'\nexport default class MultiPoint extends GeometryCollection {\n  constructor() {\n    super()\n    MultiPoint.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    const points = arguments[0], factory = arguments[1]\n    GeometryCollection.constructor_.call(this, points, factory)\n  }\n  equalsExact() {\n    if (arguments.length === 2 && (typeof arguments[1] === 'number' && arguments[0] instanceof Geometry)) {\n      const other = arguments[0], tolerance = arguments[1]\n      if (!this.isEquivalentClass(other)) \n        return false\n      \n      return super.equalsExact.call(this, other, tolerance)\n    } else {\n      return super.equalsExact.apply(this, arguments)\n    }\n  }\n  getTypeCode() {\n    return Geometry.TYPECODE_MULTIPOINT\n  }\n  getDimension() {\n    return 0\n  }\n  getBoundary() {\n    return this.getFactory().createGeometryCollection()\n  }\n  getGeometryType() {\n    return Geometry.TYPENAME_MULTIPOINT\n  }\n  copyInternal() {\n    const points = new Array(this._geometries.length).fill(null)\n    for (let i = 0; i < points.length; i++) \n      points[i] = this._geometries[i].copy()\n    \n    return new MultiPoint(points, this._factory)\n  }\n  isValid() {\n    return true\n  }\n  getCoordinate() {\n    if (arguments.length === 1 && Number.isInteger(arguments[0])) {\n      const n = arguments[0]\n      return this._geometries[n].getCoordinate()\n    } else {\n      return super.getCoordinate.apply(this, arguments)\n    }\n  }\n  getBoundaryDimension() {\n    return Dimension.FALSE\n  }\n  get interfaces_() {\n    return [Puntal]\n  }\n}\n","import Exception from './Exception.js'\n\nexport default class RuntimeException extends Exception {\n  constructor(message) {\n    super(message)\n    this.name = Object.keys({ RuntimeException })[0]\n  }\n}\n","export default class CoordinateSequenceFilter {\n  filter(seq, i) {}\n  isGeometryChanged() {}\n  isDone() {}\n}\n","import Coordinate from '../geom/Coordinate.js'\nimport Double from '../../../../java/lang/Double.js'\nimport DD from '../math/DD.js'\nexport default class CGAlgorithmsDD {\n  static orientationIndex(p1, p2, q) {\n    const index = CGAlgorithmsDD.orientationIndexFilter(p1, p2, q)\n    if (index <= 1) return index\n    const dx1 = DD.valueOf(p2.x).selfAdd(-p1.x)\n    const dy1 = DD.valueOf(p2.y).selfAdd(-p1.y)\n    const dx2 = DD.valueOf(q.x).selfAdd(-p2.x)\n    const dy2 = DD.valueOf(q.y).selfAdd(-p2.y)\n    return dx1.selfMultiply(dy2).selfSubtract(dy1.selfMultiply(dx2)).signum()\n  }\n  static signOfDet2x2() {\n    if (arguments[3] instanceof DD && (arguments[2] instanceof DD && (arguments[0] instanceof DD && arguments[1] instanceof DD))) {\n      const x1 = arguments[0], y1 = arguments[1], x2 = arguments[2], y2 = arguments[3]\n      const det = x1.multiply(y2).selfSubtract(y1.multiply(x2))\n      return det.signum()\n    } else if (typeof arguments[3] === 'number' && (typeof arguments[2] === 'number' && (typeof arguments[0] === 'number' && typeof arguments[1] === 'number'))) {\n      const dx1 = arguments[0], dy1 = arguments[1], dx2 = arguments[2], dy2 = arguments[3]\n      const x1 = DD.valueOf(dx1)\n      const y1 = DD.valueOf(dy1)\n      const x2 = DD.valueOf(dx2)\n      const y2 = DD.valueOf(dy2)\n      const det = x1.multiply(y2).selfSubtract(y1.multiply(x2))\n      return det.signum()\n    }\n  }\n  static intersection(p1, p2, q1, q2) {\n    const px = new DD(p1.y).selfSubtract(p2.y)\n    const py = new DD(p2.x).selfSubtract(p1.x)\n    const pw = new DD(p1.x).selfMultiply(p2.y).selfSubtract(new DD(p2.x).selfMultiply(p1.y))\n    const qx = new DD(q1.y).selfSubtract(q2.y)\n    const qy = new DD(q2.x).selfSubtract(q1.x)\n    const qw = new DD(q1.x).selfMultiply(q2.y).selfSubtract(new DD(q2.x).selfMultiply(q1.y))\n    const x = py.multiply(qw).selfSubtract(qy.multiply(pw))\n    const y = qx.multiply(pw).selfSubtract(px.multiply(qw))\n    const w = px.multiply(qy).selfSubtract(qx.multiply(py))\n    const xInt = x.selfDivide(w).doubleValue()\n    const yInt = y.selfDivide(w).doubleValue()\n    if (Double.isNaN(xInt) || (Double.isInfinite(xInt) || Double.isNaN(yInt)) || Double.isInfinite(yInt)) \n      return null\n    \n    return new Coordinate(xInt, yInt)\n  }\n  static orientationIndexFilter(pa, pb, pc) {\n    let detsum = null\n    const detleft = (pa.x - pc.x) * (pb.y - pc.y)\n    const detright = (pa.y - pc.y) * (pb.x - pc.x)\n    const det = detleft - detright\n    if (detleft > 0.0) \n      if (detright <= 0.0) \n        return CGAlgorithmsDD.signum(det)\n      else \n        detsum = detleft + detright\n      \n    else if (detleft < 0.0) \n      if (detright >= 0.0) \n        return CGAlgorithmsDD.signum(det)\n      else \n        detsum = -detleft - detright\n      \n    else \n      return CGAlgorithmsDD.signum(det)\n    \n    const errbound = CGAlgorithmsDD.DP_SAFE_EPSILON * detsum\n    if (det >= errbound || -det >= errbound) \n      return CGAlgorithmsDD.signum(det)\n    \n    return 2\n  }\n  static signum(x) {\n    if (x > 0) return 1\n    if (x < 0) return -1\n    return 0\n  }\n}\nCGAlgorithmsDD.DP_SAFE_EPSILON = 1e-15\n","import RuntimeException from '../../../../java/lang/RuntimeException.js'\nexport default class AssertionFailedException extends RuntimeException {\n  constructor() {\n    super()\n    AssertionFailedException.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    if (arguments.length === 0) {\n      RuntimeException.constructor_.call(this)\n    } else if (arguments.length === 1) {\n      const message = arguments[0]\n      RuntimeException.constructor_.call(this, message)\n    }\n  }\n}\n","import AssertionFailedException from './AssertionFailedException.js'\nexport default class Assert {\n  static isTrue() {\n    if (arguments.length === 1) {\n      const assertion = arguments[0]\n      Assert.isTrue(assertion, null)\n    } else if (arguments.length === 2) {\n      const assertion = arguments[0], message = arguments[1]\n      if (!assertion) \n        if (message === null) \n          throw new AssertionFailedException()\n        else \n          throw new AssertionFailedException(message)\n        \n      \n    }\n  }\n  static shouldNeverReachHere() {\n    if (arguments.length === 0) {\n      Assert.shouldNeverReachHere(null)\n    } else if (arguments.length === 1) {\n      const message = arguments[0]\n      throw new AssertionFailedException('Should never reach here' + (message !== null ? ': ' + message : ''))\n    }\n  }\n  static equals() {\n    if (arguments.length === 2) {\n      const expectedValue = arguments[0], actualValue = arguments[1]\n      Assert.equals(expectedValue, actualValue, null)\n    } else if (arguments.length === 3) {\n      const expectedValue = arguments[0], actualValue = arguments[1], message = arguments[2]\n      if (!actualValue.equals(expectedValue)) \n        throw new AssertionFailedException('Expected ' + expectedValue + ' but encountered ' + actualValue + (message !== null ? ': ' + message : ''))\n      \n    }\n  }\n}\n","import Exception from './Exception.js'\n\nexport default class UnsupportedOperationException extends Exception {\n  constructor(message) {\n    super(message)\n    this.name = Object.keys({ UnsupportedOperationException })[0]\n  }\n}\n","import Collection from './Collection.js'\nimport NoSuchElementException from './NoSuchElementException.js'\nimport UnsupportedOperationException from '../lang/UnsupportedOperationException.js'\nimport Set from './Set.js'\n\n/**\n * @see http://docs.oracle.com/javase/6/docs/api/java/util/HashSet.html\n */\nexport default class HashSet extends Set {\n  constructor(o) {\n    super()\n    this.map = new Map()\n    if (o instanceof Collection)\n      this.addAll(o)\n  }\n\n  contains(o) {\n    const hashCode = o.hashCode ? o.hashCode() : o\n    if (this.map.has(hashCode))\n      return true\n    return false\n  }\n\n  add(o) {\n    const hashCode = o.hashCode ? o.hashCode() : o\n    if (this.map.has(hashCode))\n      return false\n    return !!this.map.set(hashCode, o)\n  }\n\n  addAll(c) {\n    for (const e of c)\n      this.add(e)\n    return true\n  }\n\n  remove() {\n    throw new UnsupportedOperationException()\n  }\n\n  size() {\n    return this.map.size\n  }\n\n  isEmpty() {\n    return this.map.size === 0\n  }\n\n  toArray() {\n    return Array.from(this.map.values())\n  }\n\n  iterator() {\n    return new Iterator(this.map)\n  }\n\n  [Symbol.iterator]() {\n    return this.map\n  }\n}\n\nclass Iterator {\n  constructor(map) {\n    this.iterator = map.values()\n    const { done, value } = this.iterator.next()\n    this.done = done\n    this.value = value\n  }\n\n  next() {\n    if (this.done)\n      throw new NoSuchElementException()\n    const current = this.value\n    const { done, value } = this.iterator.next()\n    this.done = done\n    this.value = value\n    return current\n  }\n\n  hasNext() {\n    return !this.done\n  }\n\n  remove() {\n    throw new UnsupportedOperationException()\n  }\n}\n","import hasInterface from '../../../../hasInterface.js'\nimport Collection from '../../../../java/util/Collection.js'\nimport Coordinate from './Coordinate.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nexport default class CoordinateList extends ArrayList {\n  constructor() {\n    super()\n    CoordinateList.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    if (arguments.length === 0) {} else if (arguments.length === 1) {\n      const coord = arguments[0]\n      this.ensureCapacity(coord.length)\n      this.add(coord, true)\n    } else if (arguments.length === 2) {\n      const coord = arguments[0], allowRepeated = arguments[1]\n      this.ensureCapacity(coord.length)\n      this.add(coord, allowRepeated)\n    }\n  }\n  getCoordinate(i) {\n    return this.get(i)\n  }\n  addAll() {\n    if (arguments.length === 2 && (typeof arguments[1] === 'boolean' && hasInterface(arguments[0], Collection))) {\n      const coll = arguments[0], allowRepeated = arguments[1]\n      let isChanged = false\n      for (let i = coll.iterator(); i.hasNext(); ) {\n        this.add(i.next(), allowRepeated)\n        isChanged = true\n      }\n      return isChanged\n    } else {\n      return super.addAll.apply(this, arguments)\n    }\n  }\n  clone() {\n    const clone = super.clone.call(this)\n    for (let i = 0; i < this.size(); i++) \n      clone.add(i, this.get(i).clone())\n    \n    return clone\n  }\n  closeRing() {\n    if (this.size() > 0) {\n      const duplicate = this.get(0).copy()\n      this.add(duplicate, false)\n    }\n  }\n  toCoordinateArray() {\n    if (arguments.length === 0) {\n      return this.toArray(CoordinateList.coordArrayType)\n    } else if (arguments.length === 1) {\n      const isForward = arguments[0]\n      if (isForward) \n        return this.toArray(CoordinateList.coordArrayType)\n      \n      const size = this.size()\n      const pts = new Array(size).fill(null)\n      for (let i = 0; i < size; i++) \n        pts[i] = this.get(size - i - 1)\n      \n      return pts\n    }\n  }\n  add() {\n    if (arguments.length === 1) {\n      const coord = arguments[0]\n      return super.add.call(this, coord)\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof Array && typeof arguments[1] === 'boolean') {\n        const coord = arguments[0], allowRepeated = arguments[1]\n        this.add(coord, allowRepeated, true)\n        return true\n      } else if (arguments[0] instanceof Coordinate && typeof arguments[1] === 'boolean') {\n        const coord = arguments[0], allowRepeated = arguments[1]\n        if (!allowRepeated) \n          if (this.size() >= 1) {\n            const last = this.get(this.size() - 1)\n            if (last.equals2D(coord)) return null\n          }\n        \n        super.add.call(this, coord)\n      } else if (arguments[0] instanceof Object && typeof arguments[1] === 'boolean') {\n        const obj = arguments[0], allowRepeated = arguments[1]\n        this.add(obj, allowRepeated)\n        return true\n      }\n    } else if (arguments.length === 3) {\n      if (typeof arguments[2] === 'boolean' && (arguments[0] instanceof Array && typeof arguments[1] === 'boolean')) {\n        const coord = arguments[0], allowRepeated = arguments[1], direction = arguments[2]\n        if (direction) \n          for (let i = 0; i < coord.length; i++) \n            this.add(coord[i], allowRepeated)\n          \n        else \n          for (let i = coord.length - 1; i >= 0; i--) \n            this.add(coord[i], allowRepeated)\n          \n        \n        return true\n      } else if (typeof arguments[2] === 'boolean' && (Number.isInteger(arguments[0]) && arguments[1] instanceof Coordinate)) {\n        const i = arguments[0], coord = arguments[1], allowRepeated = arguments[2]\n        if (!allowRepeated) {\n          const size = this.size()\n          if (size > 0) {\n            if (i > 0) {\n              const prev = this.get(i - 1)\n              if (prev.equals2D(coord)) return null\n            }\n            if (i < size) {\n              const next = this.get(i)\n              if (next.equals2D(coord)) return null\n            }\n          }\n        }\n        super.add.call(this, i, coord)\n      }\n    } else if (arguments.length === 4) {\n      const coord = arguments[0], allowRepeated = arguments[1], start = arguments[2], end = arguments[3]\n      let inc = 1\n      if (start > end) inc = -1\n      for (let i = start; i !== end; i += inc) \n        this.add(coord[i], allowRepeated)\n      \n      return true\n    }\n  }\n}\nCoordinateList.coordArrayType = new Array(0).fill(null)\n","import hasInterface from '../../../../../hasInterface.js'\nimport Coordinate from '../Coordinate.js'\nimport Double from '../../../../../java/lang/Double.js'\nimport Coordinates from '../Coordinates.js'\nimport CoordinateSequence from '../CoordinateSequence.js'\nimport CoordinateArrays from '../CoordinateArrays.js'\nimport Serializable from '../../../../../java/io/Serializable.js'\nimport StringBuilder from '../../../../../java/lang/StringBuilder.js'\nexport default class CoordinateArraySequence {\n  constructor() {\n    CoordinateArraySequence.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._dimension = 3\n    this._measures = 0\n    this._coordinates = null\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Array) {\n        const coordinates = arguments[0]\n        CoordinateArraySequence.constructor_.call(this, coordinates, CoordinateArrays.dimension(coordinates), CoordinateArrays.measures(coordinates))\n      } else if (Number.isInteger(arguments[0])) {\n        const size = arguments[0]\n        this._coordinates = new Array(size).fill(null)\n        for (let i = 0; i < size; i++) \n          this._coordinates[i] = new Coordinate()\n        \n      } else if (hasInterface(arguments[0], CoordinateSequence)) {\n        const coordSeq = arguments[0]\n        if (coordSeq === null) {\n          this._coordinates = new Array(0).fill(null)\n          return null\n        }\n        this._dimension = coordSeq.getDimension()\n        this._measures = coordSeq.getMeasures()\n        this._coordinates = new Array(coordSeq.size()).fill(null)\n        for (let i = 0; i < this._coordinates.length; i++) \n          this._coordinates[i] = coordSeq.getCoordinateCopy(i)\n        \n      }\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof Array && Number.isInteger(arguments[1])) {\n        const coordinates = arguments[0], dimension = arguments[1]\n        CoordinateArraySequence.constructor_.call(this, coordinates, dimension, CoordinateArrays.measures(coordinates))\n      } else if (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1])) {\n        const size = arguments[0], dimension = arguments[1]\n        this._coordinates = new Array(size).fill(null)\n        this._dimension = dimension\n        for (let i = 0; i < size; i++) \n          this._coordinates[i] = Coordinates.create(dimension)\n        \n      }\n    } else if (arguments.length === 3) {\n      if (Number.isInteger(arguments[2]) && (arguments[0] instanceof Array && Number.isInteger(arguments[1]))) {\n        const coordinates = arguments[0], dimension = arguments[1], measures = arguments[2]\n        this._dimension = dimension\n        this._measures = measures\n        if (coordinates === null) \n          this._coordinates = new Array(0).fill(null)\n        else \n          this._coordinates = coordinates\n        \n      } else if (Number.isInteger(arguments[2]) && (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1]))) {\n        const size = arguments[0], dimension = arguments[1], measures = arguments[2]\n        this._coordinates = new Array(size).fill(null)\n        this._dimension = dimension\n        this._measures = measures\n        for (let i = 0; i < size; i++) \n          this._coordinates[i] = this.createCoordinate()\n        \n      }\n    }\n  }\n  getCoordinate() {\n    if (arguments.length === 1) {\n      const i = arguments[0]\n      return this._coordinates[i]\n    } else if (arguments.length === 2) {\n      const index = arguments[0], coord = arguments[1]\n      coord.setCoordinate(this._coordinates[index])\n    }\n  }\n  getCoordinateCopy(i) {\n    const copy = this.createCoordinate()\n    copy.setCoordinate(this._coordinates[i])\n    return copy\n  }\n  createCoordinate() {\n    return Coordinates.create(this.getDimension(), this.getMeasures())\n  }\n  getDimension() {\n    return this._dimension\n  }\n  getX(index) {\n    return this._coordinates[index].x\n  }\n  getMeasures() {\n    return this._measures\n  }\n  expandEnvelope(env) {\n    for (let i = 0; i < this._coordinates.length; i++) \n      env.expandToInclude(this._coordinates[i])\n    \n    return env\n  }\n  copy() {\n    const cloneCoordinates = new Array(this.size()).fill(null)\n    for (let i = 0; i < this._coordinates.length; i++) {\n      const duplicate = this.createCoordinate()\n      duplicate.setCoordinate(this._coordinates[i])\n      cloneCoordinates[i] = duplicate\n    }\n    return new CoordinateArraySequence(cloneCoordinates, this._dimension, this._measures)\n  }\n  toString() {\n    if (this._coordinates.length > 0) {\n      const strBuilder = new StringBuilder(17 * this._coordinates.length)\n      strBuilder.append('(')\n      strBuilder.append(this._coordinates[0])\n      for (let i = 1; i < this._coordinates.length; i++) {\n        strBuilder.append(', ')\n        strBuilder.append(this._coordinates[i])\n      }\n      strBuilder.append(')')\n      return strBuilder.toString()\n    } else {\n      return '()'\n    }\n  }\n  getY(index) {\n    return this._coordinates[index].y\n  }\n  toCoordinateArray() {\n    return this._coordinates\n  }\n  getM(index) {\n    if (this.hasM()) \n      return this._coordinates[index].getM()\n    else \n      return Double.NaN\n    \n  }\n  setOrdinate(index, ordinateIndex, value) {\n    switch (ordinateIndex) {\n    case CoordinateSequence.X:\n      this._coordinates[index].x = value\n      break\n    case CoordinateSequence.Y:\n      this._coordinates[index].y = value\n      break\n    default:\n      this._coordinates[index].setOrdinate(ordinateIndex, value)\n    }\n  }\n  getZ(index) {\n    if (this.hasZ()) \n      return this._coordinates[index].getZ()\n    else \n      return Double.NaN\n    \n  }\n  size() {\n    return this._coordinates.length\n  }\n  getOrdinate(index, ordinateIndex) {\n    switch (ordinateIndex) {\n    case CoordinateSequence.X:\n      return this._coordinates[index].x\n    case CoordinateSequence.Y:\n      return this._coordinates[index].y\n    default:\n      return this._coordinates[index].getOrdinate(ordinateIndex)\n    }\n  }\n  get interfaces_() {\n    return [CoordinateSequence, Serializable]\n  }\n}\n","import hasInterface from '../../../../hasInterface.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport CoordinateSequence from '../geom/CoordinateSequence.js'\nexport default class Area {\n  static ofRingSigned() {\n    if (arguments[0] instanceof Array) {\n      const ring = arguments[0]\n      if (ring.length < 3) return 0.0\n      let sum = 0.0\n      const x0 = ring[0].x\n      for (let i = 1; i < ring.length - 1; i++) {\n        const x = ring[i].x - x0\n        const y1 = ring[i + 1].y\n        const y2 = ring[i - 1].y\n        sum += x * (y2 - y1)\n      }\n      return sum / 2.0\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      const ring = arguments[0]\n      const n = ring.size()\n      if (n < 3) return 0.0\n      const p0 = new Coordinate()\n      const p1 = new Coordinate()\n      const p2 = new Coordinate()\n      ring.getCoordinate(0, p1)\n      ring.getCoordinate(1, p2)\n      const x0 = p1.x\n      p2.x -= x0\n      let sum = 0.0\n      for (let i = 1; i < n - 1; i++) {\n        p0.y = p1.y\n        p1.x = p2.x\n        p1.y = p2.y\n        ring.getCoordinate(i + 1, p2)\n        p2.x -= x0\n        sum += p1.x * (p0.y - p2.y)\n      }\n      return sum / 2.0\n    }\n  }\n  static ofRing() {\n    if (arguments[0] instanceof Array) {\n      const ring = arguments[0]\n      return Math.abs(Area.ofRingSigned(ring))\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      const ring = arguments[0]\n      return Math.abs(Area.ofRingSigned(ring))\n    }\n  }\n}\n","import Area from '../algorithm/Area.js'\nimport hasInterface from '../../../../hasInterface.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport Orientation from '../algorithm/Orientation.js'\nimport CoordinateSequences from './CoordinateSequences.js'\nimport GeometryComponentFilter from './GeometryComponentFilter.js'\nimport Polygonal from './Polygonal.js'\nimport Geometry from './Geometry.js'\nimport Arrays from '../../../../java/util/Arrays.js'\nimport CoordinateFilter from './CoordinateFilter.js'\nimport GeometryFilter from './GeometryFilter.js'\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter.js'\nexport default class Polygon extends Geometry {\n  constructor() {\n    super()\n    Polygon.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._shell = null\n    this._holes = null\n    let shell = arguments[0], holes = arguments[1], factory = arguments[2]\n    Geometry.constructor_.call(this, factory)\n    if (shell === null) \n      shell = this.getFactory().createLinearRing()\n    \n    if (holes === null) \n      holes = []\n    \n    if (Geometry.hasNullElements(holes)) \n      throw new IllegalArgumentException('holes must not contain null elements')\n    \n    if (shell.isEmpty() && Geometry.hasNonEmptyElements(holes)) \n      throw new IllegalArgumentException('shell is empty but holes are not')\n    \n    this._shell = shell\n    this._holes = holes\n  }\n  computeEnvelopeInternal() {\n    return this._shell.getEnvelopeInternal()\n  }\n  getCoordinates() {\n    if (this.isEmpty()) \n      return []\n    \n    const coordinates = new Array(this.getNumPoints()).fill(null)\n    let k = -1\n    const shellCoordinates = this._shell.getCoordinates()\n    for (let x = 0; x < shellCoordinates.length; x++) {\n      k++\n      coordinates[k] = shellCoordinates[x]\n    }\n    for (let i = 0; i < this._holes.length; i++) {\n      const childCoordinates = this._holes[i].getCoordinates()\n      for (let j = 0; j < childCoordinates.length; j++) {\n        k++\n        coordinates[k] = childCoordinates[j]\n      }\n    }\n    return coordinates\n  }\n  getArea() {\n    let area = 0.0\n    area += Area.ofRing(this._shell.getCoordinateSequence())\n    for (let i = 0; i < this._holes.length; i++) \n      area -= Area.ofRing(this._holes[i].getCoordinateSequence())\n    \n    return area\n  }\n  equalsExact() {\n    if (arguments.length === 2 && (typeof arguments[1] === 'number' && arguments[0] instanceof Geometry)) {\n      const other = arguments[0], tolerance = arguments[1]\n      if (!this.isEquivalentClass(other)) \n        return false\n      \n      const otherPolygon = other\n      const thisShell = this._shell\n      const otherPolygonShell = otherPolygon._shell\n      if (!thisShell.equalsExact(otherPolygonShell, tolerance)) \n        return false\n      \n      if (this._holes.length !== otherPolygon._holes.length) \n        return false\n      \n      for (let i = 0; i < this._holes.length; i++) \n        if (!this._holes[i].equalsExact(otherPolygon._holes[i], tolerance)) \n          return false\n        \n      \n      return true\n    } else {\n      return super.equalsExact.apply(this, arguments)\n    }\n  }\n  reverseInternal() {\n    const shell = this.getExteriorRing().reverse()\n    const holes = new Array(this.getNumInteriorRing()).fill(null)\n    for (let i = 0; i < holes.length; i++) \n      holes[i] = this.getInteriorRingN(i).reverse()\n    \n    return this.getFactory().createPolygon(shell, holes)\n  }\n  getTypeCode() {\n    return Geometry.TYPECODE_POLYGON\n  }\n  getDimension() {\n    return 2\n  }\n  getBoundary() {\n    if (this.isEmpty()) \n      return this.getFactory().createMultiLineString()\n    \n    const rings = new Array(this._holes.length + 1).fill(null)\n    rings[0] = this._shell\n    for (let i = 0; i < this._holes.length; i++) \n      rings[i + 1] = this._holes[i]\n    \n    if (rings.length <= 1) return this.getFactory().createLinearRing(rings[0].getCoordinateSequence())\n    return this.getFactory().createMultiLineString(rings)\n  }\n  getGeometryType() {\n    return Geometry.TYPENAME_POLYGON\n  }\n  getExteriorRing() {\n    return this._shell\n  }\n  copyInternal() {\n    const shellCopy = this._shell.copy()\n    const holeCopies = new Array(this._holes.length).fill(null)\n    for (let i = 0; i < this._holes.length; i++) \n      holeCopies[i] = this._holes[i].copy()\n    \n    return new Polygon(shellCopy, holeCopies, this._factory)\n  }\n  isRectangle() {\n    if (this.getNumInteriorRing() !== 0) return false\n    if (this._shell === null) return false\n    if (this._shell.getNumPoints() !== 5) return false\n    const seq = this._shell.getCoordinateSequence()\n    const env = this.getEnvelopeInternal()\n    for (let i = 0; i < 5; i++) {\n      const x = seq.getX(i)\n      if (!(x === env.getMinX() || x === env.getMaxX())) return false\n      const y = seq.getY(i)\n      if (!(y === env.getMinY() || y === env.getMaxY())) return false\n    }\n    let prevX = seq.getX(0)\n    let prevY = seq.getY(0)\n    for (let i = 1; i <= 4; i++) {\n      const x = seq.getX(i)\n      const y = seq.getY(i)\n      const xChanged = x !== prevX\n      const yChanged = y !== prevY\n      if (xChanged === yChanged) return false\n      prevX = x\n      prevY = y\n    }\n    return true\n  }\n  normalize() {\n    if (arguments.length === 0) {\n      this._shell = this.normalized(this._shell, true)\n      for (let i = 0; i < this._holes.length; i++) \n        this._holes[i] = this.normalized(this._holes[i], false)\n      \n      Arrays.sort(this._holes)\n    } else if (arguments.length === 2) {\n      const ring = arguments[0], clockwise = arguments[1]\n      if (ring.isEmpty()) \n        return null\n      \n      const seq = ring.getCoordinateSequence()\n      const minCoordinateIndex = CoordinateSequences.minCoordinateIndex(seq, 0, seq.size() - 2)\n      CoordinateSequences.scroll(seq, minCoordinateIndex, true)\n      if (Orientation.isCCW(seq) === clockwise) CoordinateSequences.reverse(seq)\n    }\n  }\n  getCoordinate() {\n    return this._shell.getCoordinate()\n  }\n  getNumInteriorRing() {\n    return this._holes.length\n  }\n  getBoundaryDimension() {\n    return 1\n  }\n  getLength() {\n    let len = 0.0\n    len += this._shell.getLength()\n    for (let i = 0; i < this._holes.length; i++) \n      len += this._holes[i].getLength()\n    \n    return len\n  }\n  getNumPoints() {\n    let numPoints = this._shell.getNumPoints()\n    for (let i = 0; i < this._holes.length; i++) \n      numPoints += this._holes[i].getNumPoints()\n    \n    return numPoints\n  }\n  convexHull() {\n    return this.getExteriorRing().convexHull()\n  }\n  normalized(ring, clockwise) {\n    const res = ring.copy()\n    this.normalize(res, clockwise)\n    return res\n  }\n  compareToSameClass() {\n    if (arguments.length === 1) {\n      const o = arguments[0]\n      const thisShell = this._shell\n      const otherShell = o._shell\n      return thisShell.compareToSameClass(otherShell)\n    } else if (arguments.length === 2) {\n      const o = arguments[0], comp = arguments[1]\n      const poly = o\n      const thisShell = this._shell\n      const otherShell = poly._shell\n      const shellComp = thisShell.compareToSameClass(otherShell, comp)\n      if (shellComp !== 0) return shellComp\n      const nHole1 = this.getNumInteriorRing()\n      const nHole2 = poly.getNumInteriorRing()\n      let i = 0\n      while (i < nHole1 && i < nHole2) {\n        const thisHole = this.getInteriorRingN(i)\n        const otherHole = poly.getInteriorRingN(i)\n        const holeComp = thisHole.compareToSameClass(otherHole, comp)\n        if (holeComp !== 0) return holeComp\n        i++\n      }\n      if (i < nHole1) return 1\n      if (i < nHole2) return -1\n      return 0\n    }\n  }\n  apply() {\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      const filter = arguments[0]\n      this._shell.apply(filter)\n      for (let i = 0; i < this._holes.length; i++) \n        this._holes[i].apply(filter)\n      \n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      const filter = arguments[0]\n      this._shell.apply(filter)\n      if (!filter.isDone()) \n        for (let i = 0; i < this._holes.length; i++) {\n          this._holes[i].apply(filter)\n          if (filter.isDone()) break\n        }\n      \n      if (filter.isGeometryChanged()) this.geometryChanged()\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n      this._shell.apply(filter)\n      for (let i = 0; i < this._holes.length; i++) \n        this._holes[i].apply(filter)\n      \n    }\n  }\n  isEmpty() {\n    return this._shell.isEmpty()\n  }\n  getInteriorRingN(n) {\n    return this._holes[n]\n  }\n  get interfaces_() {\n    return [Polygonal]\n  }\n}\n","import Coordinate from './Coordinate.js'\nimport Comparable from '../../../../java/lang/Comparable.js'\nimport Serializable from '../../../../java/io/Serializable.js'\nexport default class Envelope {\n  constructor() {\n    Envelope.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._minx = null\n    this._maxx = null\n    this._miny = null\n    this._maxy = null\n    if (arguments.length === 0) {\n      this.init()\n    } else if (arguments.length === 1) {\n      if (arguments[0] instanceof Coordinate) {\n        const p = arguments[0]\n        this.init(p.x, p.x, p.y, p.y)\n      } else if (arguments[0] instanceof Envelope) {\n        const env = arguments[0]\n        this.init(env)\n      }\n    } else if (arguments.length === 2) {\n      const p1 = arguments[0], p2 = arguments[1]\n      this.init(p1.x, p2.x, p1.y, p2.y)\n    } else if (arguments.length === 4) {\n      const x1 = arguments[0], x2 = arguments[1], y1 = arguments[2], y2 = arguments[3]\n      this.init(x1, x2, y1, y2)\n    }\n  }\n  static intersects() {\n    if (arguments.length === 3) {\n      const p1 = arguments[0], p2 = arguments[1], q = arguments[2]\n      if (q.x >= (p1.x < p2.x ? p1.x : p2.x) && q.x <= (p1.x > p2.x ? p1.x : p2.x) && (q.y >= (p1.y < p2.y ? p1.y : p2.y) && q.y <= (p1.y > p2.y ? p1.y : p2.y))) \n        return true\n      \n      return false\n    } else if (arguments.length === 4) {\n      const p1 = arguments[0], p2 = arguments[1], q1 = arguments[2], q2 = arguments[3]\n      let minq = Math.min(q1.x, q2.x)\n      let maxq = Math.max(q1.x, q2.x)\n      let minp = Math.min(p1.x, p2.x)\n      let maxp = Math.max(p1.x, p2.x)\n      if (minp > maxq) return false\n      if (maxp < minq) return false\n      minq = Math.min(q1.y, q2.y)\n      maxq = Math.max(q1.y, q2.y)\n      minp = Math.min(p1.y, p2.y)\n      maxp = Math.max(p1.y, p2.y)\n      if (minp > maxq) return false\n      if (maxp < minq) return false\n      return true\n    }\n  }\n  getArea() {\n    return this.getWidth() * this.getHeight()\n  }\n  getMinX() {\n    return this._minx\n  }\n  expandToInclude() {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Coordinate) {\n        const p = arguments[0]\n        this.expandToInclude(p.x, p.y)\n      } else if (arguments[0] instanceof Envelope) {\n        const other = arguments[0]\n        if (other.isNull()) \n          return null\n        \n        if (this.isNull()) {\n          this._minx = other.getMinX()\n          this._maxx = other.getMaxX()\n          this._miny = other.getMinY()\n          this._maxy = other.getMaxY()\n        } else {\n          if (other._minx < this._minx) \n            this._minx = other._minx\n          \n          if (other._maxx > this._maxx) \n            this._maxx = other._maxx\n          \n          if (other._miny < this._miny) \n            this._miny = other._miny\n          \n          if (other._maxy > this._maxy) \n            this._maxy = other._maxy\n          \n        }\n      }\n    } else if (arguments.length === 2) {\n      const x = arguments[0], y = arguments[1]\n      if (this.isNull()) {\n        this._minx = x\n        this._maxx = x\n        this._miny = y\n        this._maxy = y\n      } else {\n        if (x < this._minx) \n          this._minx = x\n        \n        if (x > this._maxx) \n          this._maxx = x\n        \n        if (y < this._miny) \n          this._miny = y\n        \n        if (y > this._maxy) \n          this._maxy = y\n        \n      }\n    }\n  }\n  compareTo(o) {\n    const env = o\n    if (this.isNull()) {\n      if (env.isNull()) return 0\n      return -1\n    } else {\n      if (env.isNull()) return 1\n    }\n    if (this._minx < env._minx) return -1\n    if (this._minx > env._minx) return 1\n    if (this._miny < env._miny) return -1\n    if (this._miny > env._miny) return 1\n    if (this._maxx < env._maxx) return -1\n    if (this._maxx > env._maxx) return 1\n    if (this._maxy < env._maxy) return -1\n    if (this._maxy > env._maxy) return 1\n    return 0\n  }\n  translate(transX, transY) {\n    if (this.isNull()) \n      return null\n    \n    this.init(this.getMinX() + transX, this.getMaxX() + transX, this.getMinY() + transY, this.getMaxY() + transY)\n  }\n  copy() {\n    return new Envelope(this)\n  }\n  expandBy() {\n    if (arguments.length === 1) {\n      const distance = arguments[0]\n      this.expandBy(distance, distance)\n    } else if (arguments.length === 2) {\n      const deltaX = arguments[0], deltaY = arguments[1]\n      if (this.isNull()) return null\n      this._minx -= deltaX\n      this._maxx += deltaX\n      this._miny -= deltaY\n      this._maxy += deltaY\n      if (this._minx > this._maxx || this._miny > this._maxy) this.setToNull()\n    }\n  }\n  contains() {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Envelope) {\n        const other = arguments[0]\n        return this.covers(other)\n      } else if (arguments[0] instanceof Coordinate) {\n        const p = arguments[0]\n        return this.covers(p)\n      }\n    } else if (arguments.length === 2) {\n      const x = arguments[0], y = arguments[1]\n      return this.covers(x, y)\n    }\n  }\n  hashCode() {\n    let result = 17\n    result = 37 * result + Coordinate.hashCode(this._minx)\n    result = 37 * result + Coordinate.hashCode(this._maxx)\n    result = 37 * result + Coordinate.hashCode(this._miny)\n    result = 37 * result + Coordinate.hashCode(this._maxy)\n    return result\n  }\n  equals(other) {\n    if (!(other instanceof Envelope)) \n      return false\n    \n    const otherEnvelope = other\n    if (this.isNull()) \n      return otherEnvelope.isNull()\n    \n    return this._maxx === otherEnvelope.getMaxX() && this._maxy === otherEnvelope.getMaxY() && this._minx === otherEnvelope.getMinX() && this._miny === otherEnvelope.getMinY()\n  }\n  intersection(env) {\n    if (this.isNull() || env.isNull() || !this.intersects(env)) return new Envelope()\n    const intMinX = this._minx > env._minx ? this._minx : env._minx\n    const intMinY = this._miny > env._miny ? this._miny : env._miny\n    const intMaxX = this._maxx < env._maxx ? this._maxx : env._maxx\n    const intMaxY = this._maxy < env._maxy ? this._maxy : env._maxy\n    return new Envelope(intMinX, intMaxX, intMinY, intMaxY)\n  }\n  isNull() {\n    return this._maxx < this._minx\n  }\n  getMaxX() {\n    return this._maxx\n  }\n  covers() {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Coordinate) {\n        const p = arguments[0]\n        return this.covers(p.x, p.y)\n      } else if (arguments[0] instanceof Envelope) {\n        const other = arguments[0]\n        if (this.isNull() || other.isNull()) \n          return false\n        \n        return other.getMinX() >= this._minx && other.getMaxX() <= this._maxx && other.getMinY() >= this._miny && other.getMaxY() <= this._maxy\n      }\n    } else if (arguments.length === 2) {\n      const x = arguments[0], y = arguments[1]\n      if (this.isNull()) return false\n      return x >= this._minx && x <= this._maxx && y >= this._miny && y <= this._maxy\n    }\n  }\n  intersects() {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Envelope) {\n        const other = arguments[0]\n        if (this.isNull() || other.isNull()) \n          return false\n        \n        return !(other._minx > this._maxx || other._maxx < this._minx || other._miny > this._maxy || other._maxy < this._miny)\n      } else if (arguments[0] instanceof Coordinate) {\n        const p = arguments[0]\n        return this.intersects(p.x, p.y)\n      }\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n        const a = arguments[0], b = arguments[1]\n        if (this.isNull()) \n          return false\n        \n        const envminx = a.x < b.x ? a.x : b.x\n        if (envminx > this._maxx) return false\n        const envmaxx = a.x > b.x ? a.x : b.x\n        if (envmaxx < this._minx) return false\n        const envminy = a.y < b.y ? a.y : b.y\n        if (envminy > this._maxy) return false\n        const envmaxy = a.y > b.y ? a.y : b.y\n        if (envmaxy < this._miny) return false\n        return true\n      } else if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n        const x = arguments[0], y = arguments[1]\n        if (this.isNull()) return false\n        return !(x > this._maxx || x < this._minx || y > this._maxy || y < this._miny)\n      }\n    }\n  }\n  getMinY() {\n    return this._miny\n  }\n  getDiameter() {\n    if (this.isNull()) \n      return 0\n    \n    const w = this.getWidth()\n    const h = this.getHeight()\n    return Math.sqrt(w * w + h * h)\n  }\n  minExtent() {\n    if (this.isNull()) return 0.0\n    const w = this.getWidth()\n    const h = this.getHeight()\n    if (w < h) return w\n    return h\n  }\n  getWidth() {\n    if (this.isNull()) \n      return 0\n    \n    return this._maxx - this._minx\n  }\n  toString() {\n    return 'Env[' + this._minx + ' : ' + this._maxx + ', ' + this._miny + ' : ' + this._maxy + ']'\n  }\n  setToNull() {\n    this._minx = 0\n    this._maxx = -1\n    this._miny = 0\n    this._maxy = -1\n  }\n  disjoint(other) {\n    if (this.isNull() || other.isNull()) \n      return true\n    \n    return other._minx > this._maxx || other._maxx < this._minx || other._miny > this._maxy || other._maxy < this._miny\n  }\n  getHeight() {\n    if (this.isNull()) \n      return 0\n    \n    return this._maxy - this._miny\n  }\n  maxExtent() {\n    if (this.isNull()) return 0.0\n    const w = this.getWidth()\n    const h = this.getHeight()\n    if (w > h) return w\n    return h\n  }\n  centre() {\n    if (this.isNull()) return null\n    return new Coordinate((this.getMinX() + this.getMaxX()) / 2.0, (this.getMinY() + this.getMaxY()) / 2.0)\n  }\n  init() {\n    if (arguments.length === 0) {\n      this.setToNull()\n    } else if (arguments.length === 1) {\n      if (arguments[0] instanceof Coordinate) {\n        const p = arguments[0]\n        this.init(p.x, p.x, p.y, p.y)\n      } else if (arguments[0] instanceof Envelope) {\n        const env = arguments[0]\n        this._minx = env._minx\n        this._maxx = env._maxx\n        this._miny = env._miny\n        this._maxy = env._maxy\n      }\n    } else if (arguments.length === 2) {\n      const p1 = arguments[0], p2 = arguments[1]\n      this.init(p1.x, p2.x, p1.y, p2.y)\n    } else if (arguments.length === 4) {\n      const x1 = arguments[0], x2 = arguments[1], y1 = arguments[2], y2 = arguments[3]\n      if (x1 < x2) {\n        this._minx = x1\n        this._maxx = x2\n      } else {\n        this._minx = x2\n        this._maxx = x1\n      }\n      if (y1 < y2) {\n        this._miny = y1\n        this._maxy = y2\n      } else {\n        this._miny = y2\n        this._maxy = y1\n      }\n    }\n  }\n  getMaxY() {\n    return this._maxy\n  }\n  distance(env) {\n    if (this.intersects(env)) return 0\n    let dx = 0.0\n    if (this._maxx < env._minx) dx = env._minx - this._maxx; else if (this._minx > env._maxx) dx = this._minx - env._maxx\n    let dy = 0.0\n    if (this._maxy < env._miny) dy = env._miny - this._maxy; else if (this._miny > env._maxy) dy = this._miny - env._maxy\n    if (dx === 0.0) return dy\n    if (dy === 0.0) return dx\n    return Math.sqrt(dx * dx + dy * dy)\n  }\n  get interfaces_() {\n    return [Comparable, Serializable]\n  }\n}\n","import Coordinate from './Coordinate.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nexport default class CoordinateXY extends Coordinate {\n  constructor() {\n    super()\n    CoordinateXY.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    if (arguments.length === 0) {\n      Coordinate.constructor_.call(this)\n    } else if (arguments.length === 1) {\n      if (arguments[0] instanceof CoordinateXY) {\n        const coord = arguments[0]\n        Coordinate.constructor_.call(this, coord.x, coord.y)\n      } else if (arguments[0] instanceof Coordinate) {\n        const coord = arguments[0]\n        Coordinate.constructor_.call(this, coord.x, coord.y)\n      }\n    } else if (arguments.length === 2) {\n      const x = arguments[0], y = arguments[1]\n      Coordinate.constructor_.call(this, x, y, Coordinate.NULL_ORDINATE)\n    }\n  }\n  setOrdinate(ordinateIndex, value) {\n    switch (ordinateIndex) {\n    case CoordinateXY.X:\n      this.x = value\n      break\n    case CoordinateXY.Y:\n      this.y = value\n      break\n    default:\n      throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n    }\n  }\n  setZ(z) {\n    throw new IllegalArgumentException('CoordinateXY dimension 2 does not support z-ordinate')\n  }\n  copy() {\n    return new CoordinateXY(this)\n  }\n  toString() {\n    return '(' + this.x + ', ' + this.y + ')'\n  }\n  setCoordinate(other) {\n    this.x = other.x\n    this.y = other.y\n    this.z = other.getZ()\n  }\n  getZ() {\n    return Coordinate.NULL_ORDINATE\n  }\n  getOrdinate(ordinateIndex) {\n    switch (ordinateIndex) {\n    case CoordinateXY.X:\n      return this.x\n    case CoordinateXY.Y:\n      return this.y\n    }\n    throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n  }\n}\nCoordinateXY.X = 0\nCoordinateXY.Y = 1\nCoordinateXY.Z = -1\nCoordinateXY.M = -1\n","import Coordinate from './Coordinate.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nexport default class CoordinateXYM extends Coordinate {\n  constructor() {\n    super()\n    CoordinateXYM.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._m = null\n    if (arguments.length === 0) {\n      Coordinate.constructor_.call(this)\n      this._m = 0.0\n    } else if (arguments.length === 1) {\n      if (arguments[0] instanceof CoordinateXYM) {\n        const coord = arguments[0]\n        Coordinate.constructor_.call(this, coord.x, coord.y)\n        this._m = coord._m\n      } else if (arguments[0] instanceof Coordinate) {\n        const coord = arguments[0]\n        Coordinate.constructor_.call(this, coord.x, coord.y)\n        this._m = this.getM()\n      }\n    } else if (arguments.length === 3) {\n      const x = arguments[0], y = arguments[1], m = arguments[2]\n      Coordinate.constructor_.call(this, x, y, Coordinate.NULL_ORDINATE)\n      this._m = m\n    }\n  }\n  setM(m) {\n    this._m = m\n  }\n  setZ(z) {\n    throw new IllegalArgumentException('CoordinateXY dimension 2 does not support z-ordinate')\n  }\n  copy() {\n    return new CoordinateXYM(this)\n  }\n  toString() {\n    return '(' + this.x + ', ' + this.y + ' m=' + this.getM() + ')'\n  }\n  setCoordinate(other) {\n    this.x = other.x\n    this.y = other.y\n    this.z = other.getZ()\n    this._m = other.getM()\n  }\n  getM() {\n    return this._m\n  }\n  setOrdinate(ordinateIndex, value) {\n    switch (ordinateIndex) {\n    case CoordinateXYM.X:\n      this.x = value\n      break\n    case CoordinateXYM.Y:\n      this.y = value\n      break\n    case CoordinateXYM.M:\n      this._m = value\n      break\n    default:\n      throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n    }\n  }\n  getZ() {\n    return Coordinate.NULL_ORDINATE\n  }\n  getOrdinate(ordinateIndex) {\n    switch (ordinateIndex) {\n    case CoordinateXYM.X:\n      return this.x\n    case CoordinateXYM.Y:\n      return this.y\n    case CoordinateXYM.M:\n      return this._m\n    }\n    throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n  }\n}\nCoordinateXYM.X = 0\nCoordinateXYM.Y = 1\nCoordinateXYM.Z = -1\nCoordinateXYM.M = 2\n","import Coordinate from './Coordinate.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nexport default class CoordinateXYZM extends Coordinate {\n  constructor() {\n    super()\n    CoordinateXYZM.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._m = null\n    if (arguments.length === 0) {\n      Coordinate.constructor_.call(this)\n      this._m = 0.0\n    } else if (arguments.length === 1) {\n      if (arguments[0] instanceof CoordinateXYZM) {\n        const coord = arguments[0]\n        Coordinate.constructor_.call(this, coord)\n        this._m = coord._m\n      } else if (arguments[0] instanceof Coordinate) {\n        const coord = arguments[0]\n        Coordinate.constructor_.call(this, coord)\n        this._m = this.getM()\n      }\n    } else if (arguments.length === 4) {\n      const x = arguments[0], y = arguments[1], z = arguments[2], m = arguments[3]\n      Coordinate.constructor_.call(this, x, y, z)\n      this._m = m\n    }\n  }\n  setM(m) {\n    this._m = m\n  }\n  getOrdinate(ordinateIndex) {\n    switch (ordinateIndex) {\n    case Coordinate.X:\n      return this.x\n    case Coordinate.Y:\n      return this.y\n    case Coordinate.Z:\n      return this.getZ()\n    case Coordinate.M:\n      return this.getM()\n    }\n    throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n  }\n  copy() {\n    return new CoordinateXYZM(this)\n  }\n  toString() {\n    return '(' + this.x + ', ' + this.y + ', ' + this.getZ() + ' m=' + this.getM() + ')'\n  }\n  setCoordinate(other) {\n    this.x = other.x\n    this.y = other.y\n    this.z = other.getZ()\n    this._m = other.getM()\n  }\n  getM() {\n    return this._m\n  }\n  setOrdinate(ordinateIndex, value) {\n    switch (ordinateIndex) {\n    case Coordinate.X:\n      this.x = value\n      break\n    case Coordinate.Y:\n      this.y = value\n      break\n    case Coordinate.Z:\n      this.z = value\n      break\n    case Coordinate.M:\n      this._m = value\n      break\n    default:\n      throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n    }\n  }\n}\n","import CoordinateXY from './CoordinateXY.js'\nimport Coordinate from './Coordinate.js'\nimport CoordinateXYM from './CoordinateXYM.js'\nimport CoordinateXYZM from './CoordinateXYZM.js'\nexport default class Coordinates {\n  static measures(coordinate) {\n    if (coordinate instanceof CoordinateXY) \n      return 0\n    else if (coordinate instanceof CoordinateXYM) \n      return 1\n    else if (coordinate instanceof CoordinateXYZM) \n      return 1\n    else if (coordinate instanceof Coordinate) \n      return 0\n    \n    return 0\n  }\n  static create() {\n    if (arguments.length === 1) {\n      const dimension = arguments[0]\n      return Coordinates.create(dimension, 0)\n    } else if (arguments.length === 2) {\n      const dimension = arguments[0], measures = arguments[1]\n      if (dimension === 2) \n        return new CoordinateXY()\n      else if (dimension === 3 && measures === 0) \n        return new Coordinate()\n      else if (dimension === 3 && measures === 1) \n        return new CoordinateXYM()\n      else if (dimension === 4 && measures === 1) \n        return new CoordinateXYZM()\n      \n      return new Coordinate()\n    }\n  }\n  static dimension(coordinate) {\n    if (coordinate instanceof CoordinateXY) \n      return 2\n    else if (coordinate instanceof CoordinateXYM) \n      return 3\n    else if (coordinate instanceof CoordinateXYZM) \n      return 4\n    else if (coordinate instanceof Coordinate) \n      return 3\n    \n    return 3\n  }\n}\n","export default class Polygonal {}\n","export default class Long {\n  constructor(high, low) {\n    this.low = low || 0\n    this.high = high || 0\n  }\n\n  static toBinaryString(i) {\n    let mask\n    let result = ''\n    for (mask = 0x80000000; mask > 0; mask >>>= 1)\n      result += (i.high & mask) === mask ? '1' : '0'\n    for (mask = 0x80000000; mask > 0; mask >>>= 1)\n      result += (i.low & mask) === mask ? '1' : '0'\n    return result\n  }\n}\n","import Long from './Long.js'\n\nexport default function Double() { }\n\nDouble.NaN = NaN\nDouble.isNaN = n => Number.isNaN(n)\nDouble.isInfinite = n => !Number.isFinite(n)\nDouble.MAX_VALUE = Number.MAX_VALUE\nDouble.POSITIVE_INFINITY = Number.POSITIVE_INFINITY\nDouble.NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY\n\nif (typeof Float64Array === 'function' &&\n  typeof Int32Array === 'function')\n// Simple and fast conversion between double and long bits\n// using TypedArrays and ArrayViewBuffers.\n\n  (function() {\n    const EXP_BIT_MASK = 0x7ff00000\n    const SIGNIF_BIT_MASK = 0xFFFFF\n    const f64buf = new Float64Array(1)\n    const i32buf = new Int32Array(f64buf.buffer)\n    Double.doubleToLongBits = function(value) {\n      f64buf[0] = value\n      let low = i32buf[0] | 0\n      let high = i32buf[1] | 0\n      // Check for NaN based on values of bit fields, maximum\n      // exponent and nonzero significand.\n      if (((high & EXP_BIT_MASK) === EXP_BIT_MASK) &&\n        ((high & SIGNIF_BIT_MASK) !== 0) &&\n        (low !== 0)) {\n        low = 0 | 0\n        high = 0x7ff80000 | 0\n      }\n      return new Long(high, low)\n    }\n    Double.longBitsToDouble = function(bits) {\n      i32buf[0] = bits.low\n      i32buf[1] = bits.high\n      return f64buf[0]\n    }\n  })()\nelse\n// More complex and slower fallback implementation using\n// math and the divide-by-two and multiply-by-two algorithms.\n\n  (function() {\n    const BIAS = 1023\n    const log2 = Math.log2\n    const floor = Math.floor\n    const pow = Math.pow\n    const MAX_REL_BITS_INTEGER = (function() {\n      for (let i = 53; i > 0; i--) {\n        const bits = pow(2, i) - 1\n        if (floor(log2(bits)) + 1 === i) return bits\n      }\n      return 0\n    })()\n    Double.doubleToLongBits = function(value) {\n      let x, y, f, bits, skip\n      let sign, exp, high, low\n\n      // Get the sign bit and absolute value.\n      if (value < 0 || 1 / value === Number.NEGATIVE_INFINITY) {\n        sign = (1 << 31)\n        value = (-value)\n      } else {\n        sign = 0\n      }\n\n      // Handle some special values.\n      if (value === 0) {\n        // Handle zeros (+/-0).\n        low = 0 | 0\n        high = sign // exponent: 00..00, significand: 00..00\n        return new Long(high, low)\n      }\n\n      if (value === Infinity) {\n        // Handle infinity (only positive values for value possible).\n        low = 0 | 0\n        high = sign | 0x7ff00000 // exponent: 11..11, significand: 00..00\n        return new Long(high, low)\n      }\n\n      if (value !== value) {  \n        // Handle NaNs (boiled down to only one distinct NaN).\n        low = 0 | 0\n        high = 0x7ff80000 // exponent: 11..11, significand: 10..00\n        return new Long(high, low)\n      }\n\n      // Preinitialize variables, that are not neccessarily set by\n      // the algorithm.\n      bits = 0\n      low = 0 | 0\n\n      // Get the (always positive) integer part of value.\n      x = floor(value)\n\n      // Process the integer part if it's greater than 1. Zero requires\n      // no bits at all, 1 represents the implicit (hidden) leading bit,\n      // which must not be written as well.\n      if (x > 1)\n      // If we can reliably determine the number of bits required for\n      // the integer part,\n\n        if (x <= MAX_REL_BITS_INTEGER) {\n          // get the number of bits required to represent it minus 1\n          bits = floor(log2(x)) /* + 1 - 1 */\n          // and simply copy/shift the integer bits into low and high.\n          // That's much faster than the divide-by-two algorithm (saves\n          // up to ~60%).\n          // We always need to mask out the most significant bit, which\n          // is the implicit (aka hidden) bit.\n          if (bits <= 20) {\n            // The simple case in which the integer fits into the\n            // lower 20 bits of the high word is worth to be handled\n            // separately (saves ~25%).\n            low = 0 | 0\n            high = (x << (20 - bits)) & 0xfffff\n          } else {\n            // Here, the integer part is split into low and high.\n            // Since its value may require more than 32 bits, we\n            // cannot use bitwise operators (which implicitly cast\n            // to Int32), but use arithmetic operators % and / to\n            // get low and high parts. The uppper 20 bits go to high,\n            // the remaining bits (in f) to low.\n            f = bits - 20\n            // Like (1 << f) but safe with even more than 32 bits.\n            y = pow(2, f)\n            low = (x % y) << (32 - f)\n            high = (x / y) & 0xfffff\n          }\n        } else {\n          // For greater values, we must use the much slower divide-by-two\n          // algorithm. Bits are generated from right to left, that is from\n          // least to most significant bit. For each bit, we left-shift both\n          // low and high by one and carry bit #0 from high to #31 in low.\n          // The next bit is then copied into bit #19 in high, the leftmost\n          // bit of the double's significand.\n\n          // Preserve x for later user, so work with f.\n          f = x\n          low = 0 | 0\n          for (;;) {\n            y = f / 2\n            f = floor(y)\n            if (f === 0)\n            // We just found the most signigicant (1-)bit, which\n            // is the implicit bit and so, not stored in the double\n            // value. So, it's time to leave the loop.\n              break\n\n            // Count this bit, shift low and carry bit #0 from high.\n            bits++\n            low >>>= 1\n            low |= (high & 0x1) << 31\n            // Shift high.\n            high >>>= 1\n            if (y !== f)\n            // Copy the new bit into bit #19 in high (only required if 1).\n              high |= 0x80000\n          }\n        }\n\n      // Bias the exponent.\n      exp = bits + BIAS\n\n      // If the integer part is zero, we've not yet seen the implicit\n      // leading bit. Variable skip is later used while processing the\n      // fractional part (if any).\n      skip = (x === 0)\n\n      // Get fraction only into x.\n      x = value - x\n\n      // If some significand bits are still left to be filled and\n      // the fractional part is not zero, convert the fraction using\n      // the multiply-by-2 algorithm.\n      if (bits < 52 && x !== 0) {\n        // Initialize 'buffer' f, into which newly created bits get\n        // shifted from right to left.\n        f = 0\n\n        for (;;) {\n          y = x * 2\n          if (y >= 1) {\n            // This is a new 1-bit. Add and count this bit, if not\n            // prohibited by skip.\n            x = y - 1\n            if (!skip) {\n              f <<= 1\n              f |= 1\n              bits++\n            } else {\n              // Otherwise, decrement the exponent and unset\n              // skip, so that all following bits get written.\n              exp--\n              skip = false\n            }\n          } else {\n            // This is a new 0-bit. Add and count this bit, if not\n            // prohibited by skip.\n            x = y\n            if (!skip) {\n              f <<= 1\n              bits++\n            } else if (--exp === 0) {\n              // Otherwise we've just decremented the exponent. If the\n              // biased exponent is zero now (-1023), we process a\n              // subnormal number, which has no impled leading 1-bit.\n              // So, count this 0-bit and unset skip to write out\n              // all the following bits.\n              bits++\n              skip = false\n            }\n          }\n          if (bits === 20) {\n            // When 20 bits have been created in total, we're done with\n            // the high word. Copy the bits from 'buffer' f into high\n            // and reset 'buffer' f. Following bits will end up in the\n            // low word.\n            high |= f\n            f = 0\n          } else if (bits === 52) {\n            // When 52 bits have been created in total, we're done with\n            // low word as well. Copy the bits from 'buffer' f into low\n            // and exit the loop.\n            low |= f\n            break\n          }\n          if (y === 1) {\n            // When y is exactly 1, there is no remainder and the process\n            // is complete (the number is finite). Copy the bits from\n            // 'buffer' f into either low or high and exit the loop.\n            if (bits < 20)\n              high |= (f << (20 - bits))\n            else if (bits < 52) low |= (f << (52 - bits))\n\n            break\n          }\n        }\n      }\n\n      // Copy/shift the exponent and sign bits into the high word.\n      high |= (exp << 20)\n      high |= sign\n\n      return new Long(high, low)\n    }\n    Double.longBitsToDouble = function(bits) {\n      let i\n      let x, exp, fract\n      const high = bits.high\n      const low = bits.low\n\n      // Extract the sign.\n      const sign = (high & (1 << 31)) ? -1 : 1\n\n      // Extract the unbiased exponent.\n      exp = ((high & 0x7ff00000) >> 20) - BIAS\n\n      // Calculate the fraction from left to right. Start\n      // off with the 20 lower bits from the high word.\n      fract = 0\n      x = (1 << 19)\n      for (i = 1; i <= 20; i++) {\n        if (high & x) fract += pow(2, -i)\n\n        x >>>= 1\n      }\n      // Continue with all 32 bits from the low word.\n      x = (1 << 31)\n      for (i = 21; i <= 52; i++) {\n        if (low & x) fract += pow(2, -i)\n\n        x >>>= 1\n      }\n\n      // Handle special values.\n      // Check for zero and subnormal values.\n      if (exp === -BIAS) {\n        if (fract === 0)\n        // +/-1.0 * 0.0 => +/-0.0\n          return sign * 0\n\n        exp = -1022\n      } else if (exp === BIAS + 1) { // Check for +/-Infinity or NaN.\n        if (fract === 0)\n        // +/-1.0 / 0.0 => +/-Infinity\n          return sign / 0\n\n        return NaN\n      } else { // Nothing special? Seems to be a normal number.\n        // Add the implicit leading bit (1*2^0).\n        fract += 1\n      }\n\n      return sign * fract * pow(2, exp)\n    }\n  })()\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport GeometryComponentFilter from './GeometryComponentFilter.js'\nimport Comparable from '../../../../java/lang/Comparable.js'\nimport Cloneable from '../../../../java/lang/Cloneable.js'\nimport Serializable from '../../../../java/io/Serializable.js'\nimport Envelope from './Envelope.js'\nexport default class Geometry {\n  constructor() {\n    Geometry.constructor_.apply(this, arguments)\n  }\n\n  isGeometryCollection() {\n    return this.getTypeCode() === Geometry.TYPECODE_GEOMETRYCOLLECTION\n  }\n\n  getFactory() {\n    return this._factory\n  }\n\n  getGeometryN(n) {\n    return this\n  }\n\n  getArea() {\n    return 0.0\n  }\n\n  isRectangle() {\n    return false\n  }\n\n  equalsExact(other) {\n    return this === other || this.equalsExact(other, 0)\n  }\n\n  geometryChanged() {\n    this.apply(Geometry.geometryChangedFilter)\n  }\n\n  geometryChangedAction() {\n    this._envelope = null\n  }\n\n  equalsNorm(g) {\n    if (g === null) return false\n    return this.norm().equalsExact(g.norm())\n  }\n\n  getLength() {\n    return 0.0\n  }\n\n  getNumGeometries() {\n    return 1\n  }\n\n  compareTo() {\n    let other\n    if (arguments.length === 1) {\n      const o = arguments[0]\n      other = o\n      if (this.getTypeCode() !== other.getTypeCode()) return this.getTypeCode() - other.getTypeCode()\n\n      if (this.isEmpty() && other.isEmpty()) return 0\n\n      if (this.isEmpty()) return -1\n\n      if (other.isEmpty()) return 1\n\n      return this.compareToSameClass(o)\n    } else if (arguments.length === 2) {\n      const o = arguments[0]; const comp = arguments[1]\n      other = o\n      if (this.getTypeCode() !== other.getTypeCode()) return this.getTypeCode() - other.getTypeCode()\n\n      if (this.isEmpty() && other.isEmpty()) return 0\n\n      if (this.isEmpty()) return -1\n\n      if (other.isEmpty()) return 1\n\n      return this.compareToSameClass(o, comp)\n    }\n  }\n\n  getUserData() {\n    return this._userData\n  }\n\n  getSRID() {\n    return this._SRID\n  }\n\n  getEnvelope() {\n    return this.getFactory().toGeometry(this.getEnvelopeInternal())\n  }\n\n  static checkNotGeometryCollection(g) {\n    if (g.getTypeCode() === Geometry.TYPECODE_GEOMETRYCOLLECTION) throw new IllegalArgumentException('This method does not support GeometryCollection arguments')\n  }\n\n  equal(a, b, tolerance) {\n    if (tolerance === 0) return a.equals(b)\n\n    return a.distance(b) <= tolerance\n  }\n\n  norm() {\n    const copy = this.copy()\n    copy.normalize()\n    return copy\n  }\n\n  reverse() {\n    const res = this.reverseInternal()\n    if (this.envelope != null) res.envelope = this.envelope.copy()\n\n    res.setSRID(this.getSRID())\n    return res\n  }\n\n  copy() {\n    const copy = this.copyInternal()\n    copy.envelope = this._envelope == null ? null : this._envelope.copy()\n    copy._SRID = this._SRID\n    copy._userData = this._userData\n    return copy\n  }\n\n  getPrecisionModel() {\n    return this._factory.getPrecisionModel()\n  }\n\n  getEnvelopeInternal() {\n    if (this._envelope === null) this._envelope = this.computeEnvelopeInternal()\n\n    return new Envelope(this._envelope)\n  }\n\n  setSRID(SRID) {\n    this._SRID = SRID\n  }\n\n  setUserData(userData) {\n    this._userData = userData\n  }\n\n  compare(a, b) {\n    const i = a.iterator()\n    const j = b.iterator()\n    while (i.hasNext() && j.hasNext()) {\n      const aElement = i.next()\n      const bElement = j.next()\n      const comparison = aElement.compareTo(bElement)\n      if (comparison !== 0) return comparison\n    }\n    if (i.hasNext()) return 1\n\n    if (j.hasNext()) return -1\n\n    return 0\n  }\n\n  hashCode() {\n    return this.getEnvelopeInternal().hashCode()\n  }\n\n  isEquivalentClass(other) {\n    return this.getTypeCode() == other.getTypeCode()\n  }\n\n  get interfaces_() {\n    return [Cloneable, Comparable, Serializable]\n  }\n\n  getClass() {\n    return Geometry\n  }\n\n  static hasNonEmptyElements(geometries) {\n    for (let i = 0; i < geometries.length; i++)\n      if (!geometries[i].isEmpty()) return true\n\n    return false\n  }\n\n  static hasNullElements(array) {\n    for (let i = 0; i < array.length; i++)\n      if (array[i] === null) return true\n\n    return false\n  }\n}\nGeometry.constructor_ = function(factory) {\n  if (!factory) return\n  this._envelope = null\n  this._userData = null\n  this._factory = factory\n  this._SRID = factory.getSRID()\n}\nGeometry.TYPECODE_POINT = 0\nGeometry.TYPECODE_MULTIPOINT = 1\nGeometry.TYPECODE_LINESTRING = 2\nGeometry.TYPECODE_LINEARRING = 3\nGeometry.TYPECODE_MULTILINESTRING = 4\nGeometry.TYPECODE_POLYGON = 5\nGeometry.TYPECODE_MULTIPOLYGON = 6\nGeometry.TYPECODE_GEOMETRYCOLLECTION = 7\nGeometry.TYPENAME_POINT = 'Point'\nGeometry.TYPENAME_MULTIPOINT = 'MultiPoint'\nGeometry.TYPENAME_LINESTRING = 'LineString'\nGeometry.TYPENAME_LINEARRING = 'LinearRing'\nGeometry.TYPENAME_MULTILINESTRING = 'MultiLineString'\nGeometry.TYPENAME_POLYGON = 'Polygon'\nGeometry.TYPENAME_MULTIPOLYGON = 'MultiPolygon'\nGeometry.TYPENAME_GEOMETRYCOLLECTION = 'GeometryCollection'\nGeometry.geometryChangedFilter = {\n  get interfaces_() {\n    return [GeometryComponentFilter]\n  },\n  filter(geom) {\n    geom.geometryChangedAction()\n  }\n}\n"],"names":["Lineal","Serializable","List","get","set","isEmpty","Arrays","sort","a","arguments","length","b","compareTo","compare","t","slice","r","concat","splice","e","push","asList","array","arrayList","A","add","copyOf","original","newLength","IndexOutOfBoundsException","constructor","message","super","this","name","Object","keys","GeometryComponentFilter","filter","geom","MultiLineString","constructor_","apply","lineStrings","factory","call","copyInternal","Array","_geometries","fill","i","copy","_factory","equalsExact","other","tolerance","isEquivalentClass","getBoundaryDimension","isClosed","FALSE","getTypeCode","TYPECODE_MULTILINESTRING","getDimension","getBoundary","getGeometryType","TYPENAME_MULTILINESTRING","interfaces_","GeometryFilter","CoordinateSequence","getCoordinate","getCoordinateCopy","createCoordinate","hasM","getMeasures","getX","index","hasZ","expandEnvelope","env","getY","toCoordinateArray","getM","mIndex","getOrdinate","NaN","setOrdinate","ordinateIndex","value","getZ","size","X","Y","Z","M","SortedSet","Set","TreeSet","o","Collection","addAll","contains","len","c","remove","UnsupportedOperationException","toArray","iterator","Iterator","position","next","NoSuchElementException","hasNext","GeometryCollection","Geometry","geometries","hasNullElements","IllegalArgumentException","computeEnvelopeInternal","envelope","Envelope","expandToInclude","getEnvelopeInternal","getGeometryN","n","getCoordinates","coordinates","getNumPoints","k","childCoordinates","j","getArea","area","otherCollection","reverseInternal","numGeometries","reversed","ArrayList","reverse","getFactory","buildGeometry","TYPECODE_GEOMETRYCOLLECTION","dimension","Dimension","Math","max","getNumGeometries","checkNotGeometryCollection","Assert","shouldNeverReachHere","TYPENAME_GEOMETRYCOLLECTION","normalize","getLength","sum","numPoints","compareToSameClass","theseElements","otherElements","comp","gc","n1","n2","thisGeom","otherGeom","holeComp","hasInterface","CoordinateFilter","CoordinateSequenceFilter","isDone","isGeometryChanged","geometryChanged","System","arraycopy","src","srcPos","dest","destPos","getProperty","HashMap","map","Map","key","put","values","it","done","entrySet","hashSet","HashSet","entries","forEach","entry","PrecisionModel","_modelType","_scale","FLOATING","Type","modelType","FIXED","setScale","scale","pm","mostPrecise","pm1","pm2","equals","otherPrecisionModel","sigDigits","getMaximumSignificantDigits","otherSigDigits","Integer","getType","toString","description","FLOATING_SINGLE","getScale","makePrecise","val","Double","isNaN","round","Coordinate","coord","x","y","maxSigDigits","trunc","ceil","log","abs","isFloating","Comparable","_name","nameToTypeMap","readResolve","maximumPreciseValue","DD","_hi","_lo","init","dd","str","parse","hi","lo","determinant","x1","y1","x2","y2","valueOf","multiply","selfSubtract","sqr","selfMultiply","sqrt","strlen","isWhitespace","charAt","isNegative","signCh","numDigits","numBeforeDec","exp","hasDecimalChar","ch","isDigit","d","TEN","selfAdd","expStr","substring","parseInt","ex","NumberFormatException","val2","numDecPlaces","pow","divide","negate","createNaN","magnitude","xAbs","xLog10","xMag","floor","stringOfChar","buf","append","le","extractSignificantDigits","insertDecimalPoint","mag","gt","lt","ONE","decimalPointPos","MAX_PRINT_DIGITS","digit","rebiasBy10","digitChar","subtract","continueExtractingDigits","remMag","getSpecialNumberString","isZero","setValue","reciprocal","hc","tc","hy","ty","C","U","u","SPLIT","zhi","doubleValue","min","selfDivide","yhi","ylo","dump","ge","s","fhi","flo","rint","ax","axdd","d2","H","h","S","f","T","zlo","hx","tx","selfSqr","clone","CloneNotSupportedException","intValue","toStandardNotation","toSciNotation","specialStr","num","indexOf","numZeroes","SCI_NOT_ZERO","digits","SCI_NOT_EXPONENT_CHAR","trailingDigits","digitsWithDecimal","isPositive","signum","PI","TWO_PI","PI_2","E","EPS","StringBuffer","setCharAt","substr","IllegalStateException","Point","_coordinates","equal","createPoint","TYPECODE_POINT","createGeometryCollection","TYPENAME_POINT","getCoordinateSequence","isSimple","point","getCoordinateSequenceFactory","create","isTrue","Exception","Error","CoordinateArrays","scroll","firstCoordinate","newCoordinates","removeRepeatedPoints","hasRepeatedPoints","last","mid","tmp","removeNull","nonNull","newCoord","copyDeep","srcStart","destStart","isEqualReversed","pts1","pts2","p1","p2","extract","pts","start","end","clamp","npts","extractPts","iPts","isRing","equals2D","ptNotInList","testPts","testPt","coord1","coord2","coordinateComparator","intersection","coordList","intersects","measures","coordinate","coordArrayType","atLeastNCoordinatesOrNothing","increasingDirection","minCoordinate","minCoord","ForwardComparator","o1","o2","BidirectionalComparator","forwardComp","OLDcompare","dir1","dir2","i1","i2","comparePt","Orientation","isCCW","ring","nPts","hiPt","hiIndex","p","iPrev","iNext","prev","disc","q","orientationIndex","CLOCKWISE","RIGHT","COUNTERCLOCKWISE","LEFT","COLLINEAR","STRAIGHT","NumberUtil","equalsWithTolerance","kBuf","ArrayBuffer","kBufAsF64","Float64Array","kBufAsI32","Int32Array","z","NULL_ORDINATE","hashCode","setM","m","equals3D","setX","distance3D","dx","dy","dz","setZ","equalInZ","setY","distance","result","setCoordinate","Cloneable","DimensionalComparator","_dimensionsToTest","dimensionsToTest","c1","c2","compX","compY","Comparator","MultiPolygon","polygons","TYPECODE_MULTIPOLYGON","createMultiLineString","allRings","rings","allRingsArray","TYPENAME_MULTIPOLYGON","Character","toUpperCase","CoordinateSequences","Number","isInteger","seq","indexOfFirstCoordinate","ensureRing","isEqual","cs1","cs2","cs1Size","dim","v1","v2","minCoordinateIndex","to","minCoordIndex","testCoord","extend","fact","newseq","swap","ensureValidRing","createClosedRing","copyCoord","minDim","StringBuilder","LinearRing","points","validateConstruction","_points","createLinearRing","TYPECODE_LINEARRING","MINIMUM_VALID_SIZE","TYPENAME_LINEARRING","isNan","ensureCapacity","clear","element","oldElement","comparator","Symbol","CoordinateSequenceFactory","CoordinateArraySequenceFactory","instance","instanceObject","CoordinateArraySequence","coordSeq","spatial","GeometryFactory","_precisionModel","_coordinateSequenceFactory","_SRID","coordinateSequenceFactory","precisionModel","getDefaultCoordinateSequenceFactory","SRID","toMultiPolygonArray","multiPolygons","multiPolygonArray","toGeometryArray","geometryArray","toMultiLineStringArray","multiLineStrings","multiLineStringArray","toLineStringArray","lineStringArray","toMultiPointArray","multiPoints","multiPointArray","toLinearRingArray","linearRings","linearRingArray","toPointArray","pointArray","toPolygonArray","polygonArray","createPointFromInternalCoord","exemplar","getPrecisionModel","createEmpty","createLineString","createPolygon","toGeometry","isNull","getMinX","getMaxX","getMinY","getMaxY","LineString","shell","holes","Polygon","getSRID","createMultiPolygon","createMultiPoint","MultiPoint","ptSeq","geomList","geomType","isHeterogeneous","hasGeometryCollection","partType","geom0","createMultiPointFromCoords","toDimensionSymbol","dimensionValue","SYM_FALSE","TRUE","SYM_TRUE","DONTCARE","SYM_DONTCARE","P","SYM_P","L","SYM_L","SYM_A","toDimensionValue","dimensionSymbol","MathUtil","log10","ln","isInfinite","LOG_10","v3","v4","average","wrap","Length","ofLine","x0","y0","otherLineString","getCoordinateN","getEndPoint","getPointN","TYPECODE_LINESTRING","line","comparison","TYPENAME_LINESTRING","isCoordinate","pt","getStartPoint","Clonable","Puntal","TYPECODE_MULTIPOINT","TYPENAME_MULTIPOINT","isValid","RuntimeException","CGAlgorithmsDD","orientationIndexFilter","dx1","dy1","dx2","dy2","signOfDet2x2","q1","q2","px","py","pw","qx","qy","qw","w","xInt","yInt","pa","pb","pc","detsum","detleft","detright","det","errbound","DP_SAFE_EPSILON","AssertionFailedException","assertion","expectedValue","actualValue","has","from","current","CoordinateList","allowRepeated","isChanged","closeRing","duplicate","obj","inc","_dimension","_measures","cloneCoordinates","strBuilder","Area","ofRingSigned","p0","ofRing","_shell","_holes","hasNonEmptyElements","shellCoordinates","otherPolygon","thisShell","otherPolygonShell","getExteriorRing","getNumInteriorRing","getInteriorRingN","TYPECODE_POLYGON","TYPENAME_POLYGON","shellCopy","holeCopies","isRectangle","prevX","prevY","normalized","clockwise","convexHull","res","otherShell","poly","shellComp","nHole1","nHole2","thisHole","otherHole","Polygonal","_minx","_maxx","_miny","_maxy","minq","maxq","minp","maxp","getWidth","getHeight","translate","transX","transY","expandBy","deltaX","deltaY","setToNull","covers","otherEnvelope","intMinX","intMinY","intMaxX","intMaxY","getDiameter","minExtent","disjoint","maxExtent","centre","CoordinateXY","CoordinateXYM","_m","CoordinateXYZM","Coordinates","Long","high","low","toBinaryString","mask","isFinite","MAX_VALUE","POSITIVE_INFINITY","NEGATIVE_INFINITY","EXP_BIT_MASK","f64buf","i32buf","buffer","doubleToLongBits","longBitsToDouble","bits","log2","MAX_REL_BITS_INTEGER","skip","sign","Infinity","fract","BIAS","isGeometryCollection","geometryChangedFilter","geometryChangedAction","_envelope","equalsNorm","g","norm","getUserData","_userData","getEnvelope","setSRID","setUserData","userData","aElement","bElement","getClass"],"sourceRoot":""}