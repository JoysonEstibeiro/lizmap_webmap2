"use strict";(self.webpackChunklizmap_web_client=self.webpackChunklizmap_web_client||[]).push([[644],{1451:t=>{var e=function(t,e){return t<e};function s(t){if(!(this instanceof s))return new s(t);this.array=[],this.size=0,this.compare=t||e}s.prototype.clone=function(){var t=new s(this.compare);return t.size=this.size,t.array=this.array.slice(0,this.size),t},s.prototype.add=function(t){var e,s,i=this.size;for(this.array[this.size]=t,this.size+=1;i>0&&(e=i-1>>1,s=this.array[e],this.compare(t,s));)this.array[i]=s,i=e;this.array[i]=t},s.prototype.heapify=function(t){var e;for(this.array=t,this.size=t.length,e=this.size>>1;e>=0;e--)this._percolateDown(e)},s.prototype._percolateUp=function(t,e){for(var s,i,n=this.array[t];t>0&&(s=t-1>>1,i=this.array[s],e||this.compare(n,i));)this.array[t]=i,t=s;this.array[t]=n},s.prototype._percolateDown=function(t){for(var e,s,i,n=this.size,r=this.size>>>1,o=this.array[t];t<r&&(s=1+(e=1+(t<<1)),i=this.array[e],s<n&&this.compare(this.array[s],i)&&(e=s,i=this.array[s]),this.compare(i,o));)this.array[t]=i,t=e;this.array[t]=o},s.prototype._removeAt=function(t){if(!(t>this.size-1||t<0))return this._percolateUp(t,!0),this.poll()},s.prototype.remove=function(t){for(var e=0;e<this.size;e++)if(!this.compare(this.array[e],t)&&!this.compare(t,this.array[e]))return this._removeAt(e),!0;return!1},s.prototype.removeOne=function(t){if("function"==typeof t)for(var e=0;e<this.size;e++)if(t(this.array[e]))return this._removeAt(e)},s.prototype.removeMany=function(t,e){if("function"!=typeof t||this.size<1)return[];e=e?Math.min(e,this.size):this.size;for(var s=0,i=new Array(e),n=0,r=new Array(this.size);s<e&&!this.isEmpty();){var o=this.poll();t(o)?i[s++]=o:r[n++]=o}i.length=s;for(var a=0;a<n;)this.add(r[a++]);return i},s.prototype.peek=function(){if(0!=this.size)return this.array[0]},s.prototype.poll=function(){if(0!=this.size){var t=this.array[0];return this.size>1?(this.array[0]=this.array[--this.size],this._percolateDown(0)):this.size-=1,t}},s.prototype.replaceTop=function(t){if(0!=this.size){var e=this.array[0];return this.array[0]=t,this._percolateDown(0),e}},s.prototype.trim=function(){this.array=this.array.slice(0,this.size)},s.prototype.isEmpty=function(){return 0===this.size},s.prototype.forEach=function(t){if(!this.isEmpty()&&"function"==typeof t)for(var e=0,s=this.clone();!s.isEmpty();)t(s.poll(),e++)},s.prototype.kSmallest=function(t){if(0==this.size||t<=0)return[];t=Math.min(this.size,t);const e=Math.min(this.size,2**(t-1)+1);if(e<2)return[this.peek()];const i=new s(this.compare);i.size=e,i.array=this.array.slice(0,e);const n=new Array(t);for(let e=0;e<t;e++)n[e]=i.poll();return n},t.exports=s},6083:(t,e,s)=>{s.r(e),s.d(e,{default:()=>rs});class i{constructor(){i.constructor_.apply(this,arguments)}static constructor_(){if(this._quadrantSegments=i.DEFAULT_QUADRANT_SEGMENTS,this._endCapStyle=i.CAP_ROUND,this._joinStyle=i.JOIN_ROUND,this._mitreLimit=i.DEFAULT_MITRE_LIMIT,this._isSingleSided=!1,this._simplifyFactor=i.DEFAULT_SIMPLIFY_FACTOR,0===arguments.length);else if(1===arguments.length){const t=arguments[0];this.setQuadrantSegments(t)}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this.setQuadrantSegments(t),this.setEndCapStyle(e)}else if(4===arguments.length){const t=arguments[0],e=arguments[1],s=arguments[2],i=arguments[3];this.setQuadrantSegments(t),this.setEndCapStyle(e),this.setJoinStyle(s),this.setMitreLimit(i)}}static bufferDistanceError(t){const e=Math.PI/2/t;return 1-Math.cos(e/2)}getEndCapStyle(){return this._endCapStyle}isSingleSided(){return this._isSingleSided}setQuadrantSegments(t){this._quadrantSegments=t,0===this._quadrantSegments&&(this._joinStyle=i.JOIN_BEVEL),this._quadrantSegments<0&&(this._joinStyle=i.JOIN_MITRE,this._mitreLimit=Math.abs(this._quadrantSegments)),t<=0&&(this._quadrantSegments=1),this._joinStyle!==i.JOIN_ROUND&&(this._quadrantSegments=i.DEFAULT_QUADRANT_SEGMENTS)}getJoinStyle(){return this._joinStyle}setJoinStyle(t){this._joinStyle=t}setSimplifyFactor(t){this._simplifyFactor=t<0?0:t}getSimplifyFactor(){return this._simplifyFactor}getQuadrantSegments(){return this._quadrantSegments}setEndCapStyle(t){this._endCapStyle=t}getMitreLimit(){return this._mitreLimit}setMitreLimit(t){this._mitreLimit=t}setSingleSided(t){this._isSingleSided=t}}i.CAP_ROUND=1,i.CAP_FLAT=2,i.CAP_SQUARE=3,i.JOIN_ROUND=1,i.JOIN_MITRE=2,i.JOIN_BEVEL=3,i.DEFAULT_QUADRANT_SEGMENTS=8,i.DEFAULT_MITRE_LIMIT=5,i.DEFAULT_SIMPLIFY_FACTOR=.01;var n=s(2579),r=s(3487),o=s(8464),a=s(8136);class h{static relativeSign(t,e){return t<e?-1:t>e?1:0}static compareValue(t,e){return t<0?-1:t>0?1:e<0?-1:e>0?1:0}static compare(t,e,s){if(e.equals2D(s))return 0;const i=h.relativeSign(e.x,s.x),n=h.relativeSign(e.y,s.y);switch(t){case 0:return h.compareValue(i,n);case 1:return h.compareValue(n,i);case 2:return h.compareValue(n,-i);case 3:return h.compareValue(-i,n);case 4:return h.compareValue(-i,-n);case 5:return h.compareValue(-n,-i);case 6:return h.compareValue(-n,i);case 7:return h.compareValue(i,-n)}return a.A.shouldNeverReachHere("invalid octant value"),0}}var l=s(4810);class c{constructor(){c.constructor_.apply(this,arguments)}static constructor_(){this._segString=null,this.coord=null,this.segmentIndex=null,this._segmentOctant=null,this._isInterior=null;const t=arguments[0],e=arguments[1],s=arguments[2],i=arguments[3];this._segString=t,this.coord=new r.A(e),this.segmentIndex=s,this._segmentOctant=i,this._isInterior=!e.equals2D(t.getCoordinate(s))}getCoordinate(){return this.coord}print(t){t.print(this.coord),t.print(" seg # = "+this.segmentIndex)}compareTo(t){const e=t;return this.segmentIndex<e.segmentIndex?-1:this.segmentIndex>e.segmentIndex?1:this.coord.equals2D(e.coord)?0:this._isInterior?e._isInterior?h.compare(this._segmentOctant,this.coord,e.coord):1:-1}isEndPoint(t){return 0===this.segmentIndex&&!this._isInterior||this.segmentIndex===t}toString(){return this.segmentIndex+":"+this.coord.toString()}isInterior(){return this._isInterior}get interfaces_(){return[l.A]}}var u=s(4510),d=s(8277),g=s(5029),_=s(5090);class p extends _.A{}var f=s(8324);function m(t){return null==t?0:t.color}function I(t){return null==t?null:t.parent}function x(t,e){null!==t&&(t.color=e)}function E(t){return null==t?null:t.left}function y(t){return null==t?null:t.right}class N extends p{constructor(){super(),this.root_=null,this.size_=0}get(t){let e=this.root_;for(;null!==e;){const s=t.compareTo(e.key);if(s<0)e=e.left;else{if(!(s>0))return e.value;e=e.right}}return null}put(t,e){if(null===this.root_)return this.root_={key:t,value:e,left:null,right:null,parent:null,color:0,getValue(){return this.value},getKey(){return this.key}},this.size_=1,null;let s,i,n=this.root_;do{if(s=n,i=t.compareTo(n.key),i<0)n=n.left;else{if(!(i>0)){const t=n.value;return n.value=e,t}n=n.right}}while(null!==n);const r={key:t,left:null,right:null,value:e,parent:s,color:0,getValue(){return this.value},getKey(){return this.key}};return i<0?s.left=r:s.right=r,this.fixAfterInsertion(r),this.size_++,null}fixAfterInsertion(t){let e;for(t.color=1;null!=t&&t!==this.root_&&1===t.parent.color;)I(t)===E(I(I(t)))?(e=y(I(I(t))),1===m(e)?(x(I(t),0),x(e,0),x(I(I(t)),1),t=I(I(t))):(t===y(I(t))&&(t=I(t),this.rotateLeft(t)),x(I(t),0),x(I(I(t)),1),this.rotateRight(I(I(t))))):(e=E(I(I(t))),1===m(e)?(x(I(t),0),x(e,0),x(I(I(t)),1),t=I(I(t))):(t===E(I(t))&&(t=I(t),this.rotateRight(t)),x(I(t),0),x(I(I(t)),1),this.rotateLeft(I(I(t)))));this.root_.color=0}values(){const t=new g.A;let e=this.getFirstEntry();if(null!==e)for(t.add(e.value);null!==(e=N.successor(e));)t.add(e.value);return t}entrySet(){const t=new f.A;let e=this.getFirstEntry();if(null!==e)for(t.add(e);null!==(e=N.successor(e));)t.add(e);return t}rotateLeft(t){if(null!=t){const e=t.right;t.right=e.left,null!=e.left&&(e.left.parent=t),e.parent=t.parent,null==t.parent?this.root_=e:t.parent.left===t?t.parent.left=e:t.parent.right=e,e.left=t,t.parent=e}}rotateRight(t){if(null!=t){const e=t.left;t.left=e.right,null!=e.right&&(e.right.parent=t),e.parent=t.parent,null==t.parent?this.root_=e:t.parent.right===t?t.parent.right=e:t.parent.left=e,e.right=t,t.parent=e}}getFirstEntry(){let t=this.root_;if(null!=t)for(;null!=t.left;)t=t.left;return t}static successor(t){let e;if(null===t)return null;if(null!==t.right){for(e=t.right;null!==e.left;)e=e.left;return e}{e=t.parent;let s=t;for(;null!==e&&s===e.right;)s=e,e=e.parent;return e}}size(){return this.size_}containsKey(t){let e=this.root_;for(;null!==e;){const s=t.compareTo(e.key);if(s<0)e=e.left;else{if(!(s>0))return!0;e=e.right}}return!1}}var A=s(7811);class R{constructor(){R.constructor_.apply(this,arguments)}static constructor_(){this._nodeMap=new N,this._edge=null;const t=arguments[0];this._edge=t}getSplitCoordinates(){const t=new o.A;this.addEndpoints();const e=this.iterator();let s=e.next();for(;e.hasNext();){const i=e.next();this.addEdgeCoordinates(s,i,t),s=i}return t.toCoordinateArray()}print(t){t.println("Intersections:");for(let e=this.iterator();e.hasNext();)e.next().print(t)}findCollapsesFromExistingVertices(t){for(let e=0;e<this._edge.size()-2;e++){const s=this._edge.getCoordinate(e),i=(this._edge.getCoordinate(e+1),this._edge.getCoordinate(e+2));s.equals2D(i)&&t.add(u.A.valueOf(e+1))}}addEdgeCoordinates(t,e,s){const i=this.createSplitEdgePts(t,e);s.add(i,!1)}findCollapseIndex(t,e,s){if(!t.coord.equals2D(e.coord))return!1;let i=e.segmentIndex-t.segmentIndex;return e.isInterior()||i--,1===i&&(s[0]=t.segmentIndex+1,!0)}findCollapsesFromInsertedNodes(t){const e=new Array(1).fill(null),s=this.iterator();let i=s.next();for(;s.hasNext();){const n=s.next();this.findCollapseIndex(i,n,e)&&t.add(u.A.valueOf(e[0])),i=n}}getEdge(){return this._edge}addEndpoints(){const t=this._edge.size()-1;this.add(this._edge.getCoordinate(0),0),this.add(this._edge.getCoordinate(t),t)}createSplitEdge(t,e){const s=this.createSplitEdgePts(t,e);return new Y(s,this._edge.getData())}add(t,e){const s=new c(this._edge,t,e,this._edge.getSegmentOctant(e)),i=this._nodeMap.get(s);return null!==i?(a.A.isTrue(i.coord.equals2D(t),"Found equal nodes with different coordinates"),i):(this._nodeMap.put(s,s),s)}checkSplitEdgesCorrectness(t){const e=this._edge.getCoordinates(),s=t.get(0).getCoordinate(0);if(!s.equals2D(e[0]))throw new A.A("bad split edge start point at "+s);const i=t.get(t.size()-1).getCoordinates(),n=i[i.length-1];if(!n.equals2D(e[e.length-1]))throw new A.A("bad split edge end point at "+n)}addCollapsedNodes(){const t=new g.A;this.findCollapsesFromInsertedNodes(t),this.findCollapsesFromExistingVertices(t);for(let e=t.iterator();e.hasNext();){const t=e.next().intValue();this.add(this._edge.getCoordinate(t),t)}}createSplitEdgePts(t,e){let s=e.segmentIndex-t.segmentIndex+2;if(2===s)return[new r.A(t.coord),new r.A(e.coord)];const i=this._edge.getCoordinate(e.segmentIndex),n=e.isInterior()||!e.coord.equals2D(i);n||s--;const o=new Array(s).fill(null);let a=0;o[a++]=new r.A(t.coord);for(let s=t.segmentIndex+1;s<=e.segmentIndex;s++)o[a++]=this._edge.getCoordinate(s);return n&&(o[a]=new r.A(e.coord)),o}iterator(){return this._nodeMap.values().iterator()}addSplitEdges(t){this.addEndpoints(),this.addCollapsedNodes();const e=this.iterator();let s=e.next();for(;e.hasNext();){const i=e.next(),n=this.createSplitEdge(s,i);t.add(n),s=i}}}var L=s(5137);const S="XY",T={POINT:"Point",LINE_STRING:"LineString",LINEAR_RING:"LinearRing",POLYGON:"Polygon",MULTI_POINT:"MultiPoint",MULTI_LINE_STRING:"MultiLineString",MULTI_POLYGON:"MultiPolygon",GEOMETRY_COLLECTION:"GeometryCollection",CIRCLE:"Circle"},O="EMPTY",C={};for(const t in T)C[t]=T[t].toUpperCase();class w{constructor(t){this.wkt=t,this.index_=-1}isAlpha_(t){return t>="a"&&t<="z"||t>="A"&&t<="Z"}isNumeric_(t,e){return t>="0"&&t<="9"||"."==t&&!(void 0!==e&&e)}isWhiteSpace_(t){return" "==t||"\t"==t||"\r"==t||"\n"==t}nextChar_(){return this.wkt.charAt(++this.index_)}nextToken(){const t=this.nextChar_(),e=this.index_;let s,i=t;if("("==t)s=2;else if(","==t)s=5;else if(")"==t)s=3;else if(this.isNumeric_(t)||"-"==t)s=4,i=this.readNumber_();else if(this.isAlpha_(t))s=1,i=this.readText_();else{if(this.isWhiteSpace_(t))return this.nextToken();if(""!==t)throw new Error("Unexpected character: "+t);s=6}return{position:e,value:i,type:s}}readNumber_(){let t;const e=this.index_;let s=!1,i=!1;do{"."==t?s=!0:"e"!=t&&"E"!=t||(i=!0),t=this.nextChar_()}while(this.isNumeric_(t,s)||!i&&("e"==t||"E"==t)||i&&("-"==t||"+"==t));return parseFloat(this.wkt.substring(e,this.index_--))}readText_(){let t;const e=this.index_;do{t=this.nextChar_()}while(this.isAlpha_(t));return this.wkt.substring(e,this.index_--).toUpperCase()}}class b{constructor(t,e){this.lexer_=t,this.token_,this.layout_=S,this.factory=e}consume_(){this.token_=this.lexer_.nextToken()}isTokenType(t){return this.token_.type==t}match(t){const e=this.isTokenType(t);return e&&this.consume_(),e}parse(){return this.consume_(),this.parseGeometry_()}parseGeometryLayout_(){let t=S;const e=this.token_;if(this.isTokenType(1)){const s=e.value;"Z"===s?t="XYZ":"M"===s?t="XYM":"ZM"===s&&(t="XYZM"),t!==S&&this.consume_()}return t}parseGeometryCollectionText_(){if(this.match(2)){const t=[];do{t.push(this.parseGeometry_())}while(this.match(5));if(this.match(3))return t}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}parsePointText_(){if(this.match(2)){const t=this.parsePoint_();if(this.match(3))return t}else if(this.isEmptyGeometry_())return null;throw new Error(this.formatErrorMessage_())}parseLineStringText_(){if(this.match(2)){const t=this.parsePointList_();if(this.match(3))return t}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}parsePolygonText_(){if(this.match(2)){const t=this.parseLineStringTextList_();if(this.match(3))return t}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}parseMultiPointText_(){if(this.match(2)){let t;if(t=2==this.token_.type?this.parsePointTextList_():this.parsePointList_(),this.match(3))return t}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}parseMultiLineStringText_(){if(this.match(2)){const t=this.parseLineStringTextList_();if(this.match(3))return t}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}parseMultiPolygonText_(){if(this.match(2)){const t=this.parsePolygonTextList_();if(this.match(3))return t}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}parsePoint_(){const t=[],e=this.layout_.length;for(let s=0;s<e;++s){const e=this.token_;if(!this.match(4))break;t.push(e.value)}if(t.length==e)return t;throw new Error(this.formatErrorMessage_())}parsePointList_(){const t=[this.parsePoint_()];for(;this.match(5);)t.push(this.parsePoint_());return t}parsePointTextList_(){const t=[this.parsePointText_()];for(;this.match(5);)t.push(this.parsePointText_());return t}parseLineStringTextList_(){const t=[this.parseLineStringText_()];for(;this.match(5);)t.push(this.parseLineStringText_());return t}parsePolygonTextList_(){const t=[this.parsePolygonText_()];for(;this.match(5);)t.push(this.parsePolygonText_());return t}isEmptyGeometry_(){const t=this.isTokenType(1)&&this.token_.value==O;return t&&this.consume_(),t}formatErrorMessage_(){return"Unexpected `"+this.token_.value+"` at position "+this.token_.position+" in `"+this.lexer_.wkt+"`"}parseGeometry_(){const t=this.factory,e=t=>t?new r.A(...t):new r.A,s=s=>{const i=s.map((s=>t.createLinearRing(s.map(e))));return i.length>1?t.createPolygon(i[0],i.slice(1)):1===i.length?t.createPolygon(i[0]):t.createPolygon()},i=this.token_;if(this.match(1)){const n=i.value;if(this.layout_=this.parseGeometryLayout_(),"GEOMETRYCOLLECTION"==n){const e=this.parseGeometryCollectionText_();return t.createGeometryCollection(e)}switch(n){case"POINT":{const e=this.parsePointText_();return e?t.createPoint(new r.A(...e)):t.createPoint()}case"LINESTRING":{const s=this.parseLineStringText_().map(e);return t.createLineString(s)}case"LINEARRING":{const s=this.parseLineStringText_().map(e);return t.createLinearRing(s)}case"POLYGON":{const e=this.parsePolygonText_();return e&&0!==e.length?s(e):t.createPolygon()}case"MULTIPOINT":{const s=this.parseMultiPointText_();if(!s||0===s.length)return t.createMultiPoint();const i=s.map(e).map((e=>t.createPoint(e)));return t.createMultiPoint(i)}case"MULTILINESTRING":{const s=this.parseMultiLineStringText_().map((s=>t.createLineString(s.map(e))));return t.createMultiLineString(s)}case"MULTIPOLYGON":{const e=this.parseMultiPolygonText_();if(!e||0===e.length)return t.createMultiPolygon();const i=e.map(s);return t.createMultiPolygon(i)}default:throw new Error("Invalid geometry type: "+n)}}throw new Error(this.formatErrorMessage_())}}function P(t){if(t.isEmpty())return"";const e=t.getCoordinate(),s=[e.x,e.y];return void 0===e.z||Number.isNaN(e.z)||s.push(e.z),void 0===e.m||Number.isNaN(e.m)||s.push(e.m),s.join(" ")}function D(t){const e=t.getCoordinates().map((t=>{const e=[t.x,t.y];return void 0===t.z||Number.isNaN(t.z)||e.push(t.z),void 0===t.m||Number.isNaN(t.m)||e.push(t.m),e})),s=[];for(let t=0,i=e.length;t<i;++t)s.push(e[t].join(" "));return s.join(", ")}function M(t){const e=[];e.push("("+D(t.getExteriorRing())+")");for(let s=0,i=t.getNumInteriorRing();s<i;++s)e.push("("+D(t.getInteriorRingN(s))+")");return e.join(", ")}const v={Point:P,LineString:D,LinearRing:D,Polygon:M,MultiPoint:function(t){const e=[];for(let s=0,i=t.getNumGeometries();s<i;++s)e.push("("+P(t.getGeometryN(s))+")");return e.join(", ")},MultiLineString:function(t){const e=[];for(let s=0,i=t.getNumGeometries();s<i;++s)e.push("("+D(t.getGeometryN(s))+")");return e.join(", ")},MultiPolygon:function(t){const e=[];for(let s=0,i=t.getNumGeometries();s<i;++s)e.push("("+M(t.getGeometryN(s))+")");return e.join(", ")},GeometryCollection:function(t){const e=[];for(let s=0,i=t.getNumGeometries();s<i;++s)e.push(F(t.getGeometryN(s)));return e.join(", ")}};function F(t){let e=t.getGeometryType();const s=v[e];e=e.toUpperCase();const i=function(t){let e="";if(t.isEmpty())return e;const s=t.getCoordinate();return void 0===s.z||Number.isNaN(s.z)||(e+="Z"),void 0===s.m||Number.isNaN(s.m)||(e+="M"),e}(t);return i.length>0&&(e+=" "+i),t.isEmpty()?e+" "+O:e+" ("+s(t)+")"}class G{constructor(t){this.geometryFactory=t||new L.A,this.precisionModel=this.geometryFactory.getPrecisionModel()}read(t){const e=new w(t);return new b(e,this.geometryFactory).parse()}write(t){return F(t)}}class B{constructor(t){this.parser=new G(t)}write(t){return this.parser.write(t)}static toLineString(t,e){if(2!==arguments.length)throw new Error("Not implemented");return"LINESTRING ( "+t.x+" "+t.y+", "+e.x+" "+e.y+" )"}}var q=s(8641),U=s(5696);class z{static octant(){if("number"==typeof arguments[0]&&"number"==typeof arguments[1]){const t=arguments[0],e=arguments[1];if(0===t&&0===e)throw new U.A("Cannot compute the octant for point ( "+t+", "+e+" )");const s=Math.abs(t),i=Math.abs(e);return t>=0?e>=0?s>=i?0:1:s>=i?7:6:e>=0?s>=i?3:2:s>=i?4:5}if(arguments[0]instanceof r.A&&arguments[1]instanceof r.A){const t=arguments[0],e=arguments[1],s=e.x-t.x,i=e.y-t.y;if(0===s&&0===i)throw new U.A("Cannot compute the octant for two identical points "+t);return z.octant(s,i)}}}class X{getCoordinates(){}size(){}getCoordinate(t){}isClosed(){}setData(t){}getData(){}}class k{addIntersection(t,e){}get interfaces_(){return[X]}}class Y{constructor(){Y.constructor_.apply(this,arguments)}static constructor_(){this._nodeList=new R(this),this._pts=null,this._data=null;const t=arguments[0],e=arguments[1];this._pts=t,this._data=e}static getNodedSubstrings(){if(1===arguments.length){const t=arguments[0],e=new g.A;return Y.getNodedSubstrings(t,e),e}if(2===arguments.length){const t=arguments[1];for(let e=arguments[0].iterator();e.hasNext();)e.next().getNodeList().addSplitEdges(t)}}getCoordinates(){return this._pts}size(){return this._pts.length}getCoordinate(t){return this._pts[t]}isClosed(){return this._pts[0].equals(this._pts[this._pts.length-1])}getSegmentOctant(t){return t===this._pts.length-1?-1:this.safeOctant(this.getCoordinate(t),this.getCoordinate(t+1))}toString(){return B.toLineString(new q.A(this._pts))}getNodeList(){return this._nodeList}addIntersectionNode(t,e){let s=e;const i=s+1;if(i<this._pts.length){const e=this._pts[i];t.equals2D(e)&&(s=i)}return this._nodeList.add(t,s)}addIntersections(t,e,s){for(let i=0;i<t.getIntersectionNum();i++)this.addIntersection(t,e,s,i)}setData(t){this._data=t}safeOctant(t,e){return t.equals2D(e)?0:z.octant(t,e)}getData(){return this._data}addIntersection(){if(2===arguments.length){const t=arguments[0],e=arguments[1];this.addIntersectionNode(t,e)}else if(4===arguments.length){const t=arguments[0],e=arguments[1],s=arguments[3],i=new r.A(t.getIntersection(s));this.addIntersection(i,e)}}get interfaces_(){return[k]}}var V=s(1715),H=s(2922),Q=s(6378);class j{getNodedSubstrings(){}computeNodes(t){}}class W{constructor(){W.constructor_.apply(this,arguments)}static constructor_(){if(this._noder=null,this._scaleFactor=null,this._offsetX=null,this._offsetY=null,this._isScaled=!1,2===arguments.length){const t=arguments[0],e=arguments[1];W.constructor_.call(this,t,e,0,0)}else if(4===arguments.length){const t=arguments[0],e=arguments[1];this._noder=t,this._scaleFactor=e,this._isScaled=!this.isIntegerPrecision()}}rescale(){if((0,n.A)(arguments[0],Q.A))for(let t=arguments[0].iterator();t.hasNext();){const e=t.next();this.rescale(e.getCoordinates())}else if(arguments[0]instanceof Array){const t=arguments[0];for(let e=0;e<t.length;e++)t[e].x=t[e].x/this._scaleFactor+this._offsetX,t[e].y=t[e].y/this._scaleFactor+this._offsetY;2===t.length&&t[0].equals2D(t[1])&&V.A.out.println(t)}}scale(){if((0,n.A)(arguments[0],Q.A)){const t=arguments[0],e=new g.A(t.size());for(let s=t.iterator();s.hasNext();){const t=s.next();e.add(new Y(this.scale(t.getCoordinates()),t.getData()))}return e}if(arguments[0]instanceof Array){const t=arguments[0],e=new Array(t.length).fill(null);for(let s=0;s<t.length;s++)e[s]=new r.A(Math.round((t[s].x-this._offsetX)*this._scaleFactor),Math.round((t[s].y-this._offsetY)*this._scaleFactor),t[s].getZ());return H.A.removeRepeatedPoints(e)}}isIntegerPrecision(){return 1===this._scaleFactor}getNodedSubstrings(){const t=this._noder.getNodedSubstrings();return this._isScaled&&this.rescale(t),t}computeNodes(t){let e=t;this._isScaled&&(e=this.scale(t)),this._noder.computeNodes(e)}get interfaces_(){return[j]}}class K extends A.A{constructor(t,e){super(e?t+" [ "+e+" ]":t),this.pt=e?new r.A(e):void 0,this.name=Object.keys({TopologyException:K})[0]}getCoordinate(){return this.pt}}var J=s(6138),Z=s(2285),$=s(9318),tt=s(3031),et=s(9557);class st{static intersection(t,e,s,i){const n=t.x<e.x?t.x:e.x,o=t.y<e.y?t.y:e.y,a=t.x>e.x?t.x:e.x,h=t.y>e.y?t.y:e.y,l=s.x<i.x?s.x:i.x,c=s.y<i.y?s.y:i.y,u=s.x>i.x?s.x:i.x,d=s.y>i.y?s.y:i.y,g=((n>l?n:l)+(a<u?a:u))/2,_=((o>c?o:c)+(h<d?h:d))/2,p=t.x-g,f=t.y-_,m=e.x-g,I=e.y-_,x=s.x-g,E=s.y-_,y=i.x-g,N=i.y-_,A=f-I,R=m-p,L=p*I-m*f,S=E-N,T=y-x,O=x*N-y*E,C=A*T-S*R,w=(R*O-T*L)/C,b=(S*L-A*O)/C;return et.A.isNaN(w)||et.A.isInfinite(w)||et.A.isNaN(b)||et.A.isInfinite(b)?null:new r.A(w+g,b+_)}}var it=s(8133);class nt{static pointToSegmentString(t,e){if(0===e.length)throw new U.A("Line array must contain at least one vertex");let s=t.distance(e[0]);for(let i=0;i<e.length-1;i++){const n=nt.pointToSegment(t,e[i],e[i+1]);n<s&&(s=n)}return s}static segmentToSegment(t,e,s,i){if(t.equals(e))return nt.pointToSegment(t,s,i);if(s.equals(i))return nt.pointToSegment(i,t,e);let n=!1;if($.A.intersects(t,e,s,i)){const r=(e.x-t.x)*(i.y-s.y)-(e.y-t.y)*(i.x-s.x);if(0===r)n=!0;else{const o=(t.y-s.y)*(i.x-s.x)-(t.x-s.x)*(i.y-s.y),a=((t.y-s.y)*(e.x-t.x)-(t.x-s.x)*(e.y-t.y))/r,h=o/r;(h<0||h>1||a<0||a>1)&&(n=!0)}}else n=!0;return n?J.A.min(nt.pointToSegment(t,s,i),nt.pointToSegment(e,s,i),nt.pointToSegment(s,t,e),nt.pointToSegment(i,t,e)):0}static pointToLinePerpendicular(t,e,s){const i=(s.x-e.x)*(s.x-e.x)+(s.y-e.y)*(s.y-e.y),n=((e.y-t.y)*(s.x-e.x)-(e.x-t.x)*(s.y-e.y))/i;return Math.abs(n)*Math.sqrt(i)}static pointToSegment(t,e,s){if(e.x===s.x&&e.y===s.y)return t.distance(e);const i=(s.x-e.x)*(s.x-e.x)+(s.y-e.y)*(s.y-e.y),n=((t.x-e.x)*(s.x-e.x)+(t.y-e.y)*(s.y-e.y))/i;if(n<=0)return t.distance(e);if(n>=1)return t.distance(s);const r=((e.y-t.y)*(s.x-e.x)-(e.x-t.x)*(s.y-e.y))/i;return Math.abs(r)*Math.sqrt(i)}}var rt=s(4148);class ot{constructor(){ot.constructor_.apply(this,arguments)}static constructor_(){this._result=null,this._inputLines=Array(2).fill().map((()=>Array(2))),this._intPt=new Array(2).fill(null),this._intLineIndex=null,this._isProper=null,this._pa=null,this._pb=null,this._precisionModel=null,this._intPt[0]=new r.A,this._intPt[1]=new r.A,this._pa=this._intPt[0],this._pb=this._intPt[1],this._result=0}static nonRobustComputeEdgeDistance(t,e,s){const i=t.x-e.x,n=t.y-e.y,r=Math.sqrt(i*i+n*n);return a.A.isTrue(!(0===r&&!t.equals(e)),"Invalid distance calculation"),r}static computeEdgeDistance(t,e,s){const i=Math.abs(s.x-e.x),n=Math.abs(s.y-e.y);let r=-1;if(t.equals(e))r=0;else if(t.equals(s))r=i>n?i:n;else{const s=Math.abs(t.x-e.x),o=Math.abs(t.y-e.y);r=i>n?s:o,0!==r||t.equals(e)||(r=Math.max(s,o))}return a.A.isTrue(!(0===r&&!t.equals(e)),"Bad distance calculation"),r}computeIntersection(t,e,s,i){this._inputLines[0][0]=t,this._inputLines[0][1]=e,this._inputLines[1][0]=s,this._inputLines[1][1]=i,this._result=this.computeIntersect(t,e,s,i)}getIntersectionNum(){return this._result}computeIntLineIndex(){if(0===arguments.length)null===this._intLineIndex&&(this._intLineIndex=Array(2).fill().map((()=>Array(2))),this.computeIntLineIndex(0),this.computeIntLineIndex(1));else if(1===arguments.length){const t=arguments[0];this.getEdgeDistance(t,0)>this.getEdgeDistance(t,1)?(this._intLineIndex[t][0]=0,this._intLineIndex[t][1]=1):(this._intLineIndex[t][0]=1,this._intLineIndex[t][1]=0)}}isInteriorIntersection(){if(0===arguments.length)return!!this.isInteriorIntersection(0)||!!this.isInteriorIntersection(1);if(1===arguments.length){const t=arguments[0];for(let e=0;e<this._result;e++)if(!this._intPt[e].equals2D(this._inputLines[t][0])&&!this._intPt[e].equals2D(this._inputLines[t][1]))return!0;return!1}}getIntersection(t){return this._intPt[t]}getEdgeDistance(t,e){return ot.computeEdgeDistance(this._intPt[e],this._inputLines[t][0],this._inputLines[t][1])}isCollinear(){return this._result===ot.COLLINEAR_INTERSECTION}toString(){return B.toLineString(this._inputLines[0][0],this._inputLines[0][1])+" - "+B.toLineString(this._inputLines[1][0],this._inputLines[1][1])+this.getTopologySummary()}getEndpoint(t,e){return this._inputLines[t][e]}getIndexAlongSegment(t,e){return this.computeIntLineIndex(),this._intLineIndex[t][e]}getTopologySummary(){const t=new rt.A;return this.isEndPoint()&&t.append(" endpoint"),this._isProper&&t.append(" proper"),this.isCollinear()&&t.append(" collinear"),t.toString()}isProper(){return this.hasIntersection()&&this._isProper}setPrecisionModel(t){this._precisionModel=t}isEndPoint(){return this.hasIntersection()&&!this._isProper}hasIntersection(){return this._result!==ot.NO_INTERSECTION}isIntersection(t){for(let e=0;e<this._result;e++)if(this._intPt[e].equals2D(t))return!0;return!1}getIntersectionAlongSegment(t,e){return this.computeIntLineIndex(),this._intPt[this._intLineIndex[t][e]]}}ot.DONT_INTERSECT=0,ot.DO_INTERSECT=1,ot.COLLINEAR=2,ot.NO_INTERSECTION=0,ot.POINT_INTERSECTION=1,ot.COLLINEAR_INTERSECTION=2;class at extends ot{constructor(){super()}static nearestEndpoint(t,e,s,i){let n=t,r=nt.pointToSegment(t,s,i),o=nt.pointToSegment(e,s,i);return o<r&&(r=o,n=e),o=nt.pointToSegment(s,t,e),o<r&&(r=o,n=s),o=nt.pointToSegment(i,t,e),o<r&&(r=o,n=i),n}isInSegmentEnvelopes(t){const e=new $.A(this._inputLines[0][0],this._inputLines[0][1]),s=new $.A(this._inputLines[1][0],this._inputLines[1][1]);return e.contains(t)&&s.contains(t)}computeIntersection(){if(3!==arguments.length)return super.computeIntersection.apply(this,arguments);{const t=arguments[0],e=arguments[1],s=arguments[2];if(this._isProper=!1,$.A.intersects(e,s,t)&&0===tt.A.index(e,s,t)&&0===tt.A.index(s,e,t))return this._isProper=!0,(t.equals(e)||t.equals(s))&&(this._isProper=!1),this._result=ot.POINT_INTERSECTION,null;this._result=ot.NO_INTERSECTION}}intersection(t,e,s,i){let n=this.intersectionSafe(t,e,s,i);return this.isInSegmentEnvelopes(n)||(n=new r.A(at.nearestEndpoint(t,e,s,i))),null!==this._precisionModel&&this._precisionModel.makePrecise(n),n}checkDD(t,e,s,i,n){const r=it.A.intersection(t,e,s,i),o=this.isInSegmentEnvelopes(r);V.A.out.println("DD in env = "+o+"  --------------------- "+r),n.distance(r)>1e-4&&V.A.out.println("Distance = "+n.distance(r))}intersectionSafe(t,e,s,i){let n=st.intersection(t,e,s,i);return null===n&&(n=at.nearestEndpoint(t,e,s,i)),n}computeCollinearIntersection(t,e,s,i){const n=$.A.intersects(t,e,s),r=$.A.intersects(t,e,i),o=$.A.intersects(s,i,t),a=$.A.intersects(s,i,e);return n&&r?(this._intPt[0]=s,this._intPt[1]=i,ot.COLLINEAR_INTERSECTION):o&&a?(this._intPt[0]=t,this._intPt[1]=e,ot.COLLINEAR_INTERSECTION):n&&o?(this._intPt[0]=s,this._intPt[1]=t,!s.equals(t)||r||a?ot.COLLINEAR_INTERSECTION:ot.POINT_INTERSECTION):n&&a?(this._intPt[0]=s,this._intPt[1]=e,!s.equals(e)||r||o?ot.COLLINEAR_INTERSECTION:ot.POINT_INTERSECTION):r&&o?(this._intPt[0]=i,this._intPt[1]=t,!i.equals(t)||n||a?ot.COLLINEAR_INTERSECTION:ot.POINT_INTERSECTION):r&&a?(this._intPt[0]=i,this._intPt[1]=e,!i.equals(e)||n||o?ot.COLLINEAR_INTERSECTION:ot.POINT_INTERSECTION):ot.NO_INTERSECTION}computeIntersect(t,e,s,i){if(this._isProper=!1,!$.A.intersects(t,e,s,i))return ot.NO_INTERSECTION;const n=tt.A.index(t,e,s),o=tt.A.index(t,e,i);if(n>0&&o>0||n<0&&o<0)return ot.NO_INTERSECTION;const a=tt.A.index(s,i,t),h=tt.A.index(s,i,e);return a>0&&h>0||a<0&&h<0?ot.NO_INTERSECTION:0===n&&0===o&&0===a&&0===h?this.computeCollinearIntersection(t,e,s,i):(0===n||0===o||0===a||0===h?(this._isProper=!1,t.equals2D(s)||t.equals2D(i)?this._intPt[0]=t:e.equals2D(s)||e.equals2D(i)?this._intPt[0]=e:0===n?this._intPt[0]=new r.A(s):0===o?this._intPt[0]=new r.A(i):0===a?this._intPt[0]=new r.A(t):0===h&&(this._intPt[0]=new r.A(e))):(this._isProper=!0,this._intPt[0]=this.intersection(t,e,s,i)),ot.POINT_INTERSECTION)}}class ht{constructor(){ht.constructor_.apply(this,arguments)}static constructor_(){this._li=new at,this._segStrings=null;const t=arguments[0];this._segStrings=t}checkEndPtVertexIntersections(){if(0===arguments.length)for(let t=this._segStrings.iterator();t.hasNext();){const e=t.next().getCoordinates();this.checkEndPtVertexIntersections(e[0],this._segStrings),this.checkEndPtVertexIntersections(e[e.length-1],this._segStrings)}else if(2===arguments.length){const t=arguments[0];for(let e=arguments[1].iterator();e.hasNext();){const s=e.next().getCoordinates();for(let e=1;e<s.length-1;e++)if(s[e].equals(t))throw new A.A("found endpt/interior pt intersection at index "+e+" :pt "+t)}}}checkInteriorIntersections(){if(0===arguments.length)for(let t=this._segStrings.iterator();t.hasNext();){const e=t.next();for(let t=this._segStrings.iterator();t.hasNext();){const s=t.next();this.checkInteriorIntersections(e,s)}}else if(2===arguments.length){const t=arguments[0],e=arguments[1],s=t.getCoordinates(),i=e.getCoordinates();for(let n=0;n<s.length-1;n++)for(let s=0;s<i.length-1;s++)this.checkInteriorIntersections(t,n,e,s)}else if(4===arguments.length){const t=arguments[0],e=arguments[1],s=arguments[2],i=arguments[3];if(t===s&&e===i)return null;const n=t.getCoordinates()[e],r=t.getCoordinates()[e+1],o=s.getCoordinates()[i],a=s.getCoordinates()[i+1];if(this._li.computeIntersection(n,r,o,a),this._li.hasIntersection()&&(this._li.isProper()||this.hasInteriorIntersection(this._li,n,r)||this.hasInteriorIntersection(this._li,o,a)))throw new A.A("found non-noded intersection at "+n+"-"+r+" and "+o+"-"+a)}}checkValid(){this.checkEndPtVertexIntersections(),this.checkInteriorIntersections(),this.checkCollapses()}checkCollapses(){if(0===arguments.length)for(let t=this._segStrings.iterator();t.hasNext();){const e=t.next();this.checkCollapses(e)}else if(1===arguments.length){const t=arguments[0].getCoordinates();for(let e=0;e<t.length-2;e++)this.checkCollapse(t[e],t[e+1],t[e+2])}}hasInteriorIntersection(t,e,s){for(let i=0;i<t.getIntersectionNum();i++){const n=t.getIntersection(i);if(!n.equals(e)&&!n.equals(s))return!0}return!1}checkCollapse(t,e,s){if(t.equals(s))throw new A.A("found non-noded collapse at "+ht.fact.createLineString([t,e,s]))}}ht.fact=new L.A;class lt{getBounds(){}}var ct=s(541);class ut{constructor(){ut.constructor_.apply(this,arguments)}static constructor_(){this._bounds=null,this._item=null;const t=arguments[0],e=arguments[1];this._bounds=t,this._item=e}getItem(){return this._item}getBounds(){return this._bounds}get interfaces_(){return[lt,ct.A]}}var dt=s(1451);class gt{constructor(){this._fpQueue=new dt(((t,e)=>t.compareTo(e)<0))}poll(){return this._fpQueue.poll()}size(){return this._fpQueue.size}clear(){this._fpQueue=new dt}peek(){return this._fpQueue.peek()}remove(){return this._fpQueue.poll()}isEmpty(){return this._fpQueue.isEmpty()}add(t){this._fpQueue.add(t)}}class _t{query(){}insert(t,e){}remove(t,e){}}class pt{constructor(){pt.constructor_.apply(this,arguments)}static constructor_(){if(this._childBoundables=new g.A,this._bounds=null,this._level=null,0===arguments.length);else if(1===arguments.length){const t=arguments[0];this._level=t}}getLevel(){return this._level}addChildBoundable(t){a.A.isTrue(null===this._bounds),this._childBoundables.add(t)}isEmpty(){return this._childBoundables.isEmpty()}getBounds(){return null===this._bounds&&(this._bounds=this.computeBounds()),this._bounds}size(){return this._childBoundables.size()}getChildBoundables(){return this._childBoundables}get interfaces_(){return[lt,ct.A]}}var ft=s(996);const mt={reverseOrder:function(){return{compare:(t,e)=>e.compareTo(t)}},min:function(t){return mt.sort(t),t.get(0)},sort:function(t,e){const s=t.toArray();e?ft.A.sort(s,e):ft.A.sort(s);const i=t.iterator();for(let t=0,e=s.length;t<e;t++)i.next(),i.set(s[t])},singletonList:function(t){const e=new g.A;return e.add(t),e}},It=mt;class xt{static distance(t,e,s,i){const n=s-t,r=i-e;return Math.sqrt(n*n+r*r)}static maximumDistance(t,e){const s=Math.min(t.getMinX(),e.getMinX()),i=Math.min(t.getMinY(),e.getMinY()),n=Math.max(t.getMaxX(),e.getMaxX()),r=Math.max(t.getMaxY(),e.getMaxY());return xt.distance(s,i,n,r)}static minMaxDistance(t,e){const s=t.getMinX(),i=t.getMinY(),n=t.getMaxX(),r=t.getMaxY(),o=e.getMinX(),a=e.getMinY(),h=e.getMaxX(),l=e.getMaxY();let c=xt.maxDistance(s,i,s,r,o,a,o,l);return c=Math.min(c,xt.maxDistance(s,i,s,r,o,a,h,a)),c=Math.min(c,xt.maxDistance(s,i,s,r,h,l,o,l)),c=Math.min(c,xt.maxDistance(s,i,s,r,h,l,h,a)),c=Math.min(c,xt.maxDistance(s,i,n,i,o,a,o,l)),c=Math.min(c,xt.maxDistance(s,i,n,i,o,a,h,a)),c=Math.min(c,xt.maxDistance(s,i,n,i,h,l,o,l)),c=Math.min(c,xt.maxDistance(s,i,n,i,h,l,h,a)),c=Math.min(c,xt.maxDistance(n,r,s,r,o,a,o,l)),c=Math.min(c,xt.maxDistance(n,r,s,r,o,a,h,a)),c=Math.min(c,xt.maxDistance(n,r,s,r,h,l,o,l)),c=Math.min(c,xt.maxDistance(n,r,s,r,h,l,h,a)),c=Math.min(c,xt.maxDistance(n,r,n,i,o,a,o,l)),c=Math.min(c,xt.maxDistance(n,r,n,i,o,a,h,a)),c=Math.min(c,xt.maxDistance(n,r,n,i,h,l,o,l)),c=Math.min(c,xt.maxDistance(n,r,n,i,h,l,h,a)),c}static maxDistance(t,e,s,i,n,r,o,a){let h=xt.distance(t,e,n,r);return h=Math.max(h,xt.distance(t,e,o,a)),h=Math.max(h,xt.distance(s,i,n,r)),h=Math.max(h,xt.distance(s,i,o,a)),h}}class Et{constructor(){Et.constructor_.apply(this,arguments)}static constructor_(){this._boundable1=null,this._boundable2=null,this._distance=null,this._itemDistance=null;const t=arguments[0],e=arguments[1],s=arguments[2];this._boundable1=t,this._boundable2=e,this._itemDistance=s,this._distance=this.distance()}static area(t){return t.getBounds().getArea()}static isComposite(t){return t instanceof pt}maximumDistance(){return xt.maximumDistance(this._boundable1.getBounds(),this._boundable2.getBounds())}expandToQueue(t,e){const s=Et.isComposite(this._boundable1),i=Et.isComposite(this._boundable2);if(s&&i)return Et.area(this._boundable1)>Et.area(this._boundable2)?(this.expand(this._boundable1,this._boundable2,!1,t,e),null):(this.expand(this._boundable2,this._boundable1,!0,t,e),null);if(s)return this.expand(this._boundable1,this._boundable2,!1,t,e),null;if(i)return this.expand(this._boundable2,this._boundable1,!0,t,e),null;throw new U.A("neither boundable is composite")}isLeaves(){return!(Et.isComposite(this._boundable1)||Et.isComposite(this._boundable2))}getBoundable(t){return 0===t?this._boundable1:this._boundable2}getDistance(){return this._distance}distance(){return this.isLeaves()?this._itemDistance.distance(this._boundable1,this._boundable2):this._boundable1.getBounds().distance(this._boundable2.getBounds())}compareTo(t){const e=t;return this._distance<e._distance?-1:this._distance>e._distance?1:0}expand(t,e,s,i,n){for(let r=t.getChildBoundables().iterator();r.hasNext();){const t=r.next();let o=null;o=s?new Et(e,t,this._itemDistance):new Et(t,e,this._itemDistance),o.getDistance()<n&&i.add(o)}}get interfaces_(){return[l.A]}}var yt=s(6474);class Nt{visitItem(t){}}var At=s(946);class Rt{constructor(){Rt.constructor_.apply(this,arguments)}static constructor_(){if(this._root=null,this._built=!1,this._itemBoundables=new g.A,this._nodeCapacity=null,0===arguments.length)Rt.constructor_.call(this,Rt.DEFAULT_NODE_CAPACITY);else if(1===arguments.length){const t=arguments[0];a.A.isTrue(t>1,"Node capacity must be greater than 1"),this._nodeCapacity=t}}static compareDoubles(t,e){return t>e?1:t<e?-1:0}queryInternal(){if((0,n.A)(arguments[2],Nt)&&arguments[0]instanceof Object&&arguments[1]instanceof pt){const t=arguments[0],e=arguments[2],s=arguments[1].getChildBoundables();for(let i=0;i<s.size();i++){const n=s.get(i);this.getIntersectsOp().intersects(n.getBounds(),t)&&(n instanceof pt?this.queryInternal(t,n,e):n instanceof ut?e.visitItem(n.getItem()):a.A.shouldNeverReachHere())}}else if((0,n.A)(arguments[2],At.A)&&arguments[0]instanceof Object&&arguments[1]instanceof pt){const t=arguments[0],e=arguments[2],s=arguments[1].getChildBoundables();for(let i=0;i<s.size();i++){const n=s.get(i);this.getIntersectsOp().intersects(n.getBounds(),t)&&(n instanceof pt?this.queryInternal(t,n,e):n instanceof ut?e.add(n.getItem()):a.A.shouldNeverReachHere())}}}insert(t,e){a.A.isTrue(!this._built,"Cannot insert items into an STR packed R-tree after it has been built."),this._itemBoundables.add(new ut(t,e))}boundablesAtLevel(){if(1===arguments.length){const t=arguments[0],e=new g.A;return this.boundablesAtLevel(t,this._root,e),e}if(3===arguments.length){const t=arguments[0],e=arguments[1],s=arguments[2];if(a.A.isTrue(t>-2),e.getLevel()===t)return s.add(e),null;for(let i=e.getChildBoundables().iterator();i.hasNext();){const e=i.next();e instanceof pt?this.boundablesAtLevel(t,e,s):(a.A.isTrue(e instanceof ut),-1===t&&s.add(e))}return null}}getRoot(){return this.build(),this._root}remove(){if(2===arguments.length){const t=arguments[0],e=arguments[1];return this.build(),!!this.getIntersectsOp().intersects(this._root.getBounds(),t)&&this.remove(t,this._root,e)}if(3===arguments.length){const t=arguments[0],e=arguments[1],s=arguments[2];let i=this.removeItem(e,s);if(i)return!0;let n=null;for(let r=e.getChildBoundables().iterator();r.hasNext();){const e=r.next();if(this.getIntersectsOp().intersects(e.getBounds(),t)&&e instanceof pt&&(i=this.remove(t,e,s),i)){n=e;break}}return null!==n&&n.getChildBoundables().isEmpty()&&e.getChildBoundables().remove(n),i}}createHigherLevels(t,e){a.A.isTrue(!t.isEmpty());const s=this.createParentBoundables(t,e+1);return 1===s.size()?s.get(0):this.createHigherLevels(s,e+1)}depth(){if(0===arguments.length)return this.isEmpty()?0:(this.build(),this.depth(this._root));if(1===arguments.length){let t=0;for(let e=arguments[0].getChildBoundables().iterator();e.hasNext();){const s=e.next();if(s instanceof pt){const e=this.depth(s);e>t&&(t=e)}}return t+1}}createParentBoundables(t,e){a.A.isTrue(!t.isEmpty());const s=new g.A;s.add(this.createNode(e));const i=new g.A(t);It.sort(i,this.getComparator());for(let t=i.iterator();t.hasNext();){const i=t.next();this.lastNode(s).getChildBoundables().size()===this.getNodeCapacity()&&s.add(this.createNode(e)),this.lastNode(s).addChildBoundable(i)}return s}isEmpty(){return this._built?this._root.isEmpty():this._itemBoundables.isEmpty()}getNodeCapacity(){return this._nodeCapacity}lastNode(t){return t.get(t.size()-1)}size(){if(0===arguments.length)return this.isEmpty()?0:(this.build(),this.size(this._root));if(1===arguments.length){let t=0;for(let e=arguments[0].getChildBoundables().iterator();e.hasNext();){const s=e.next();s instanceof pt?t+=this.size(s):s instanceof ut&&(t+=1)}return t}}removeItem(t,e){let s=null;for(let i=t.getChildBoundables().iterator();i.hasNext();){const t=i.next();t instanceof ut&&t.getItem()===e&&(s=t)}return null!==s&&(t.getChildBoundables().remove(s),!0)}itemsTree(){if(0===arguments.length){this.build();const t=this.itemsTree(this._root);return null===t?new g.A:t}if(1===arguments.length){const t=arguments[0],e=new g.A;for(let s=t.getChildBoundables().iterator();s.hasNext();){const t=s.next();if(t instanceof pt){const s=this.itemsTree(t);null!==s&&e.add(s)}else t instanceof ut?e.add(t.getItem()):a.A.shouldNeverReachHere()}return e.size()<=0?null:e}}query(){if(1===arguments.length){const t=arguments[0];this.build();const e=new g.A;return this.isEmpty()||this.getIntersectsOp().intersects(this._root.getBounds(),t)&&this.queryInternal(t,this._root,e),e}if(2===arguments.length){const t=arguments[0],e=arguments[1];if(this.build(),this.isEmpty())return null;this.getIntersectsOp().intersects(this._root.getBounds(),t)&&this.queryInternal(t,this._root,e)}}build(){if(this._built)return null;this._root=this._itemBoundables.isEmpty()?this.createNode(0):this.createHigherLevels(this._itemBoundables,-1),this._itemBoundables=null,this._built=!0}get interfaces_(){return[ct.A]}}Rt.IntersectsOp=function(){},Rt.DEFAULT_NODE_CAPACITY=10;class Lt{distance(t,e){}}class St extends Rt{constructor(){super(),St.constructor_.apply(this,arguments)}static constructor_(){if(0===arguments.length)St.constructor_.call(this,St.DEFAULT_NODE_CAPACITY);else if(1===arguments.length){const t=arguments[0];Rt.constructor_.call(this,t)}}static getItems(t){const e=new Array(t.size()).fill(null);let s=0;for(;!t.isEmpty();){const i=t.poll();e[s]=i.getBoundable(0).getItem(),s++}return e}static avg(t,e){return(t+e)/2}static centreY(t){return St.avg(t.getMinY(),t.getMaxY())}static centreX(t){return St.avg(t.getMinX(),t.getMaxX())}size(){return 0===arguments.length?super.size.call(this):super.size.apply(this,arguments)}insert(){if(!(2===arguments.length&&arguments[1]instanceof Object&&arguments[0]instanceof $.A))return super.insert.apply(this,arguments);{const t=arguments[0],e=arguments[1];if(t.isNull())return null;super.insert.call(this,t,e)}}getIntersectsOp(){return St.intersectsOp}verticalSlices(t,e){const s=Math.trunc(Math.ceil(t.size()/e)),i=new Array(e).fill(null),n=t.iterator();for(let t=0;t<e;t++){i[t]=new g.A;let e=0;for(;n.hasNext()&&e<s;){const s=n.next();i[t].add(s),e++}}return i}query(){if(1===arguments.length){const t=arguments[0];return super.query.call(this,t)}if(2===arguments.length){const t=arguments[0],e=arguments[1];super.query.call(this,t,e)}}getComparator(){return St.yComparator}createParentBoundablesFromVerticalSlice(t,e){return super.createParentBoundables.call(this,t,e)}remove(){if(2===arguments.length&&arguments[1]instanceof Object&&arguments[0]instanceof $.A){const t=arguments[0],e=arguments[1];return super.remove.call(this,t,e)}return super.remove.apply(this,arguments)}depth(){return 0===arguments.length?super.depth.call(this):super.depth.apply(this,arguments)}createParentBoundables(t,e){a.A.isTrue(!t.isEmpty());const s=Math.trunc(Math.ceil(t.size()/this.getNodeCapacity())),i=new g.A(t);It.sort(i,St.xComparator);const n=this.verticalSlices(i,Math.trunc(Math.ceil(Math.sqrt(s))));return this.createParentBoundablesFromVerticalSlices(n,e)}nearestNeighbour(){if(1===arguments.length){if((0,n.A)(arguments[0],Lt)){const t=arguments[0];if(this.isEmpty())return null;const e=new Et(this.getRoot(),this.getRoot(),t);return this.nearestNeighbour(e)}if(arguments[0]instanceof Et){const t=arguments[0];let e=et.A.POSITIVE_INFINITY,s=null;const i=new gt;for(i.add(t);!i.isEmpty()&&e>0;){const t=i.poll(),n=t.getDistance();if(n>=e)break;t.isLeaves()?(e=n,s=t):t.expandToQueue(i,e)}return null===s?null:[s.getBoundable(0).getItem(),s.getBoundable(1).getItem()]}}else{if(2===arguments.length){const t=arguments[0],e=arguments[1];if(this.isEmpty()||t.isEmpty())return null;const s=new Et(this.getRoot(),t.getRoot(),e);return this.nearestNeighbour(s)}if(3===arguments.length){const t=arguments[2],e=new ut(arguments[0],arguments[1]),s=new Et(this.getRoot(),e,t);return this.nearestNeighbour(s)[0]}if(4===arguments.length){const t=arguments[2],e=arguments[3],s=new ut(arguments[0],arguments[1]),i=new Et(this.getRoot(),s,t);return this.nearestNeighbourK(i,e)}}}isWithinDistance(){if(2===arguments.length){const t=arguments[0],e=arguments[1];let s=et.A.POSITIVE_INFINITY;const i=new gt;for(i.add(t);!i.isEmpty();){const t=i.poll(),n=t.getDistance();if(n>e)return!1;if(t.maximumDistance()<=e)return!0;if(t.isLeaves()){if(s=n,s<=e)return!0}else t.expandToQueue(i,s)}return!1}if(3===arguments.length){const t=arguments[0],e=arguments[1],s=arguments[2],i=new Et(this.getRoot(),t.getRoot(),e);return this.isWithinDistance(i,s)}}createParentBoundablesFromVerticalSlices(t,e){a.A.isTrue(t.length>0);const s=new g.A;for(let i=0;i<t.length;i++)s.addAll(this.createParentBoundablesFromVerticalSlice(t[i],e));return s}nearestNeighbourK(){if(2===arguments.length){const t=arguments[0],e=arguments[1];return this.nearestNeighbourK(t,et.A.POSITIVE_INFINITY,e)}if(3===arguments.length){const t=arguments[0],e=arguments[2];let s=arguments[1];const i=new gt;i.add(t);const n=new gt;for(;!i.isEmpty()&&s>=0;){const t=i.poll(),r=t.getDistance();if(r>=s)break;t.isLeaves()?n.size()<e?n.add(t):(n.peek().getDistance()>r&&(n.poll(),n.add(t)),s=n.peek().getDistance()):t.expandToQueue(i,s)}return St.getItems(n)}}createNode(t){return new Tt(t)}get interfaces_(){return[_t,ct.A]}}class Tt extends pt{constructor(){super(),Tt.constructor_.apply(this,arguments)}static constructor_(){const t=arguments[0];pt.constructor_.call(this,t)}computeBounds(){let t=null;for(let e=this.getChildBoundables().iterator();e.hasNext();){const s=e.next();null===t?t=new $.A(s.getBounds()):t.expandToInclude(s.getBounds())}return t}}St.STRtreeNode=Tt,St.xComparator=new class{get interfaces_(){return[yt.A]}compare(t,e){return Rt.compareDoubles(St.centreX(t.getBounds()),St.centreX(e.getBounds()))}},St.yComparator=new class{get interfaces_(){return[yt.A]}compare(t,e){return Rt.compareDoubles(St.centreY(t.getBounds()),St.centreY(e.getBounds()))}},St.intersectsOp=new class{get interfaces_(){return[IntersectsOp]}intersects(t,e){return t.intersects(e)}},St.DEFAULT_NODE_CAPACITY=10;var Ot=s(2672);class Ct{constructor(){Ct.constructor_.apply(this,arguments)}static constructor_(){if(this.p0=null,this.p1=null,0===arguments.length)Ct.constructor_.call(this,new r.A,new r.A);else if(1===arguments.length){const t=arguments[0];Ct.constructor_.call(this,t.p0,t.p1)}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this.p0=t,this.p1=e}else if(4===arguments.length){const t=arguments[0],e=arguments[1],s=arguments[2],i=arguments[3];Ct.constructor_.call(this,new r.A(t,e),new r.A(s,i))}}static midPoint(t,e){return new r.A((t.x+e.x)/2,(t.y+e.y)/2)}minX(){return Math.min(this.p0.x,this.p1.x)}orientationIndex(){if(arguments[0]instanceof Ct){const t=arguments[0],e=tt.A.index(this.p0,this.p1,t.p0),s=tt.A.index(this.p0,this.p1,t.p1);return e>=0&&s>=0||e<=0&&s<=0?Math.max(e,s):0}if(arguments[0]instanceof r.A){const t=arguments[0];return tt.A.index(this.p0,this.p1,t)}}toGeometry(t){return t.createLineString([this.p0,this.p1])}isVertical(){return this.p0.x===this.p1.x}minY(){return Math.min(this.p0.y,this.p1.y)}midPoint(){return Ct.midPoint(this.p0,this.p1)}maxY(){return Math.max(this.p0.y,this.p1.y)}pointAlongOffset(t,e){const s=this.p0.x+t*(this.p1.x-this.p0.x),i=this.p0.y+t*(this.p1.y-this.p0.y),n=this.p1.x-this.p0.x,o=this.p1.y-this.p0.y,a=Math.sqrt(n*n+o*o);let h=0,l=0;if(0!==e){if(a<=0)throw new Ot.A("Cannot compute offset from zero-length line segment");h=e*n/a,l=e*o/a}const c=s-l,u=i+h;return new r.A(c,u)}setCoordinates(){if(1===arguments.length){const t=arguments[0];this.setCoordinates(t.p0,t.p1)}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this.p0.x=t.x,this.p0.y=t.y,this.p1.x=e.x,this.p1.y=e.y}}segmentFraction(t){let e=this.projectionFactor(t);return e<0?e=0:(e>1||et.A.isNaN(e))&&(e=1),e}toString(){return"LINESTRING( "+this.p0.x+" "+this.p0.y+", "+this.p1.x+" "+this.p1.y+")"}distance(){if(arguments[0]instanceof Ct){const t=arguments[0];return nt.segmentToSegment(this.p0,this.p1,t.p0,t.p1)}if(arguments[0]instanceof r.A){const t=arguments[0];return nt.pointToSegment(t,this.p0,this.p1)}}equals(t){if(!(t instanceof Ct))return!1;const e=t;return this.p0.equals(e.p0)&&this.p1.equals(e.p1)}intersection(t){const e=new at;return e.computeIntersection(this.p0,this.p1,t.p0,t.p1),e.hasIntersection()?e.getIntersection(0):null}project(){if(arguments[0]instanceof r.A){const t=arguments[0];if(t.equals(this.p0)||t.equals(this.p1))return new r.A(t);const e=this.projectionFactor(t),s=new r.A;return s.x=this.p0.x+e*(this.p1.x-this.p0.x),s.y=this.p0.y+e*(this.p1.y-this.p0.y),s}if(arguments[0]instanceof Ct){const t=arguments[0],e=this.projectionFactor(t.p0),s=this.projectionFactor(t.p1);if(e>=1&&s>=1)return null;if(e<=0&&s<=0)return null;let i=this.project(t.p0);e<0&&(i=this.p0),e>1&&(i=this.p1);let n=this.project(t.p1);return s<0&&(n=this.p0),s>1&&(n=this.p1),new Ct(i,n)}}normalize(){this.p1.compareTo(this.p0)<0&&this.reverse()}angle(){return Math.atan2(this.p1.y-this.p0.y,this.p1.x-this.p0.x)}getCoordinate(t){return 0===t?this.p0:this.p1}distancePerpendicular(t){return nt.pointToLinePerpendicular(t,this.p0,this.p1)}closestPoint(t){const e=this.projectionFactor(t);return e>0&&e<1?this.project(t):this.p0.distance(t)<this.p1.distance(t)?this.p0:this.p1}projectionFactor(t){if(t.equals(this.p0))return 0;if(t.equals(this.p1))return 1;const e=this.p1.x-this.p0.x,s=this.p1.y-this.p0.y,i=e*e+s*s;return i<=0?et.A.NaN:((t.x-this.p0.x)*e+(t.y-this.p0.y)*s)/i}closestPoints(t){const e=this.intersection(t);if(null!==e)return[e,e];const s=new Array(2).fill(null);let i=et.A.MAX_VALUE,n=null;const r=this.closestPoint(t.p0);i=r.distance(t.p0),s[0]=r,s[1]=t.p0;const o=this.closestPoint(t.p1);n=o.distance(t.p1),n<i&&(i=n,s[0]=o,s[1]=t.p1);const a=t.closestPoint(this.p0);n=a.distance(this.p0),n<i&&(i=n,s[0]=this.p0,s[1]=a);const h=t.closestPoint(this.p1);return n=h.distance(this.p1),n<i&&(i=n,s[0]=this.p1,s[1]=h),s}maxX(){return Math.max(this.p0.x,this.p1.x)}getLength(){return this.p0.distance(this.p1)}compareTo(t){const e=t,s=this.p0.compareTo(e.p0);return 0!==s?s:this.p1.compareTo(e.p1)}reverse(){const t=this.p0;this.p0=this.p1,this.p1=t}equalsTopo(t){return this.p0.equals(t.p0)&&this.p1.equals(t.p1)||this.p0.equals(t.p1)&&this.p1.equals(t.p0)}lineIntersection(t){return st.intersection(this.p0,this.p1,t.p0,t.p1)}isHorizontal(){return this.p0.y===this.p1.y}reflect(t){const e=this.p1.getY()-this.p0.getY(),s=this.p0.getX()-this.p1.getX(),i=this.p0.getY()*(this.p1.getX()-this.p0.getX())-this.p0.getX()*(this.p1.getY()-this.p0.getY()),n=e*e+s*s,o=e*e-s*s,a=t.getX(),h=t.getY(),l=(-o*a-2*e*s*h-2*e*i)/n,c=(o*h-2*e*s*a-2*s*i)/n;return new r.A(l,c)}pointAlong(t){const e=new r.A;return e.x=this.p0.x+t*(this.p1.x-this.p0.x),e.y=this.p0.y+t*(this.p1.y-this.p0.y),e}hashCode(){let t=et.A.doubleToLongBits(this.p0.x);t^=31*et.A.doubleToLongBits(this.p0.y);const e=Math.trunc(t)^Math.trunc(t>>32);let s=et.A.doubleToLongBits(this.p1.x);return s^=31*et.A.doubleToLongBits(this.p1.y),e^Math.trunc(s)^Math.trunc(s>>32)}get interfaces_(){return[l.A,ct.A]}}class wt{constructor(){wt.constructor_.apply(this,arguments)}static constructor_(){this._overlapSeg1=new Ct,this._overlapSeg2=new Ct}overlap(){if(2===arguments.length);else if(4===arguments.length){const t=arguments[1],e=arguments[2],s=arguments[3];arguments[0].getLineSegment(t,this._overlapSeg1),e.getLineSegment(s,this._overlapSeg2),this.overlap(this._overlapSeg1,this._overlapSeg2)}}}class bt{constructor(){bt.constructor_.apply(this,arguments)}static constructor_(){this._pts=null,this._start=null,this._end=null,this._env=null,this._context=null,this._id=null;const t=arguments[0],e=arguments[1],s=arguments[2],i=arguments[3];this._pts=t,this._start=e,this._end=s,this._context=i}computeOverlaps(){if(2===arguments.length){const t=arguments[0],e=arguments[1];this.computeOverlaps(this._start,this._end,t,t._start,t._end,e)}else if(6===arguments.length){const t=arguments[0],e=arguments[1],s=arguments[2],i=arguments[3],n=arguments[4],r=arguments[5];if(e-t==1&&n-i==1)return r.overlap(this,t,s,i),null;if(!this.overlaps(t,e,s,i,n))return null;const o=Math.trunc((t+e)/2),a=Math.trunc((i+n)/2);t<o&&(i<a&&this.computeOverlaps(t,o,s,i,a,r),a<n&&this.computeOverlaps(t,o,s,a,n,r)),o<e&&(i<a&&this.computeOverlaps(o,e,s,i,a,r),a<n&&this.computeOverlaps(o,e,s,a,n,r))}}setId(t){this._id=t}select(t,e){this.computeSelect(t,this._start,this._end,e)}getEnvelope(){if(null===this._env){const t=this._pts[this._start],e=this._pts[this._end];this._env=new $.A(t,e)}return this._env}overlaps(t,e,s,i,n){return $.A.intersects(this._pts[t],this._pts[e],s._pts[i],s._pts[n])}getEndIndex(){return this._end}getStartIndex(){return this._start}getContext(){return this._context}getId(){return this._id}getLineSegment(t,e){e.p0=this._pts[t],e.p1=this._pts[t+1]}computeSelect(t,e,s,i){const n=this._pts[e],r=this._pts[s];if(s-e==1)return i.select(this,e),null;if(!t.intersects(n,r))return null;const o=Math.trunc((e+s)/2);e<o&&this.computeSelect(t,e,o,i),o<s&&this.computeSelect(t,o,s,i)}getCoordinates(){const t=new Array(this._end-this._start+1).fill(null);let e=0;for(let s=this._start;s<=this._end;s++)t[e++]=this._pts[s];return t}}class Pt{static isNorthern(t){return t===Pt.NE||t===Pt.NW}static isOpposite(t,e){return t!==e&&2==(t-e+4)%4}static commonHalfPlane(t,e){if(t===e)return t;if(2==(t-e+4)%4)return-1;const s=t<e?t:e;return 0===s&&3===(t>e?t:e)?3:s}static isInHalfPlane(t,e){return e===Pt.SE?t===Pt.SE||t===Pt.SW:t===e||t===e+1}static quadrant(){if("number"==typeof arguments[0]&&"number"==typeof arguments[1]){const t=arguments[0],e=arguments[1];if(0===t&&0===e)throw new U.A("Cannot compute the quadrant for point ( "+t+", "+e+" )");return t>=0?e>=0?Pt.NE:Pt.SE:e>=0?Pt.NW:Pt.SW}if(arguments[0]instanceof r.A&&arguments[1]instanceof r.A){const t=arguments[0],e=arguments[1];if(e.x===t.x&&e.y===t.y)throw new U.A("Cannot compute the quadrant for two identical points "+t);return e.x>=t.x?e.y>=t.y?Pt.NE:Pt.SE:e.y>=t.y?Pt.NW:Pt.SW}}}Pt.NE=0,Pt.NW=1,Pt.SW=2,Pt.SE=3;class Dt{static findChainEnd(t,e){let s=e;for(;s<t.length-1&&t[s].equals2D(t[s+1]);)s++;if(s>=t.length-1)return t.length-1;const i=Pt.quadrant(t[s],t[s+1]);let n=e+1;for(;n<t.length&&(t[n-1].equals2D(t[n])||Pt.quadrant(t[n-1],t[n])===i);)n++;return n-1}static getChains(){if(1===arguments.length){const t=arguments[0];return Dt.getChains(t,null)}if(2===arguments.length){const t=arguments[0],e=arguments[1],s=new g.A;let i=0;do{const n=Dt.findChainEnd(t,i),r=new bt(t,i,n,e);s.add(r),i=n}while(i<t.length-1);return s}}}class Mt{constructor(){Mt.constructor_.apply(this,arguments)}static constructor_(){if(this._segInt=null,0===arguments.length);else if(1===arguments.length){const t=arguments[0];this.setSegmentIntersector(t)}}setSegmentIntersector(t){this._segInt=t}get interfaces_(){return[j]}}class vt extends Mt{constructor(){super(),vt.constructor_.apply(this,arguments)}static constructor_(){if(this._monoChains=new g.A,this._index=new St,this._idCounter=0,this._nodedSegStrings=null,this._nOverlaps=0,0===arguments.length);else if(1===arguments.length){const t=arguments[0];Mt.constructor_.call(this,t)}}getMonotoneChains(){return this._monoChains}getNodedSubstrings(){return Y.getNodedSubstrings(this._nodedSegStrings)}getIndex(){return this._index}add(t){for(let e=Dt.getChains(t.getCoordinates(),t).iterator();e.hasNext();){const t=e.next();t.setId(this._idCounter++),this._index.insert(t.getEnvelope(),t),this._monoChains.add(t)}}computeNodes(t){this._nodedSegStrings=t;for(let e=t.iterator();e.hasNext();)this.add(e.next());this.intersectChains()}intersectChains(){const t=new Ft(this._segInt);for(let e=this._monoChains.iterator();e.hasNext();){const s=e.next();for(let e=this._index.query(s.getEnvelope()).iterator();e.hasNext();){const i=e.next();if(i.getId()>s.getId()&&(s.computeOverlaps(i,t),this._nOverlaps++),this._segInt.isDone())return null}}}}class Ft extends wt{constructor(){super(),Ft.constructor_.apply(this,arguments)}static constructor_(){this._si=null;const t=arguments[0];this._si=t}overlap(){if(4!==arguments.length)return super.overlap.apply(this,arguments);{const t=arguments[1],e=arguments[2],s=arguments[3],i=arguments[0].getContext(),n=e.getContext();this._si.processIntersections(i,t,n,s)}}}vt.SegmentOverlapAction=Ft;class Gt{constructor(){Gt.constructor_.apply(this,arguments)}static constructor_(){this._li=null,this._pt=null,this._originalPt=null,this._ptScaled=null,this._p0Scaled=null,this._p1Scaled=null,this._scaleFactor=null,this._minx=null,this._maxx=null,this._miny=null,this._maxy=null,this._corner=new Array(4).fill(null),this._safeEnv=null;const t=arguments[0],e=arguments[1],s=arguments[2];if(this._originalPt=t,this._pt=t,this._scaleFactor=e,this._li=s,e<=0)throw new U.A("Scale factor must be non-zero");1!==e&&(this._pt=new r.A(this.scale(t.x),this.scale(t.y)),this._p0Scaled=new r.A,this._p1Scaled=new r.A),this.initCorners(this._pt)}intersectsScaled(t,e){const s=Math.min(t.x,e.x),i=Math.max(t.x,e.x),n=Math.min(t.y,e.y),r=Math.max(t.y,e.y),o=this._maxx<s||this._minx>i||this._maxy<n||this._miny>r;if(o)return!1;const h=this.intersectsToleranceSquare(t,e);return a.A.isTrue(!(o&&h),"Found bad envelope test"),h}copyScaled(t,e){e.x=this.scale(t.x),e.y=this.scale(t.y)}getSafeEnvelope(){if(null===this._safeEnv){const t=Gt.SAFE_ENV_EXPANSION_FACTOR/this._scaleFactor;this._safeEnv=new $.A(this._originalPt.x-t,this._originalPt.x+t,this._originalPt.y-t,this._originalPt.y+t)}return this._safeEnv}intersectsPixelClosure(t,e){return this._li.computeIntersection(t,e,this._corner[0],this._corner[1]),!!(this._li.hasIntersection()||(this._li.computeIntersection(t,e,this._corner[1],this._corner[2]),this._li.hasIntersection()||(this._li.computeIntersection(t,e,this._corner[2],this._corner[3]),this._li.hasIntersection()||(this._li.computeIntersection(t,e,this._corner[3],this._corner[0]),this._li.hasIntersection()))))}intersectsToleranceSquare(t,e){let s=!1,i=!1;return this._li.computeIntersection(t,e,this._corner[0],this._corner[1]),!!(this._li.isProper()||(this._li.computeIntersection(t,e,this._corner[1],this._corner[2]),this._li.isProper()||(this._li.hasIntersection()&&(s=!0),this._li.computeIntersection(t,e,this._corner[2],this._corner[3]),this._li.isProper()||(this._li.hasIntersection()&&(i=!0),this._li.computeIntersection(t,e,this._corner[3],this._corner[0]),this._li.isProper()||s&&i||t.equals(this._pt)||e.equals(this._pt)))))}addSnappedNode(t,e){const s=t.getCoordinate(e),i=t.getCoordinate(e+1);return!!this.intersects(s,i)&&(t.addIntersection(this.getCoordinate(),e),!0)}initCorners(t){const e=.5;this._minx=t.x-e,this._maxx=t.x+e,this._miny=t.y-e,this._maxy=t.y+e,this._corner[0]=new r.A(this._maxx,this._maxy),this._corner[1]=new r.A(this._minx,this._maxy),this._corner[2]=new r.A(this._minx,this._miny),this._corner[3]=new r.A(this._maxx,this._miny)}intersects(t,e){return 1===this._scaleFactor?this.intersectsScaled(t,e):(this.copyScaled(t,this._p0Scaled),this.copyScaled(e,this._p1Scaled),this.intersectsScaled(this._p0Scaled,this._p1Scaled))}scale(t){return Math.round(t*this._scaleFactor)}getCoordinate(){return this._originalPt}}Gt.SAFE_ENV_EXPANSION_FACTOR=.75;var Bt=s(2713);class qt{constructor(){qt.constructor_.apply(this,arguments)}static constructor_(){this.selectedSegment=new Ct}select(){if(1===arguments.length);else if(2===arguments.length){const t=arguments[1];arguments[0].getLineSegment(t,this.selectedSegment),this.select(this.selectedSegment)}}}class Ut{constructor(){Ut.constructor_.apply(this,arguments)}static constructor_(){this._index=null;const t=arguments[0];this._index=t}snap(){if(1===arguments.length){const t=arguments[0];return this.snap(t,null,-1)}if(3===arguments.length){const t=arguments[0],e=arguments[1],s=arguments[2],i=t.getSafeEnvelope(),n=new zt(t,e,s);return this._index.query(i,new class{get interfaces_(){return[Nt]}visitItem(t){t.select(i,n)}}),n.isNodeAdded()}}}class zt extends qt{constructor(){super(),zt.constructor_.apply(this,arguments)}static constructor_(){this._hotPixel=null,this._parentEdge=null,this._hotPixelVertexIndex=null,this._isNodeAdded=!1;const t=arguments[0],e=arguments[1],s=arguments[2];this._hotPixel=t,this._parentEdge=e,this._hotPixelVertexIndex=s}select(){if(!(2===arguments.length&&Number.isInteger(arguments[1])&&arguments[0]instanceof bt))return super.select.apply(this,arguments);{const t=arguments[1],e=arguments[0].getContext();if(this._parentEdge===e&&(t===this._hotPixelVertexIndex||t+1===this._hotPixelVertexIndex))return null;this._isNodeAdded|=this._hotPixel.addSnappedNode(e,t)}}isNodeAdded(){return this._isNodeAdded}}Ut.HotPixelSnapAction=zt;class Xt{isDone(){}processIntersections(t,e,s,i){}}class kt{constructor(){kt.constructor_.apply(this,arguments)}static constructor_(){this._li=null,this._interiorIntersections=null;const t=arguments[0];this._li=t,this._interiorIntersections=new g.A}isDone(){return!1}processIntersections(t,e,s,i){if(t===s&&e===i)return null;const n=t.getCoordinates()[e],r=t.getCoordinates()[e+1],o=s.getCoordinates()[i],a=s.getCoordinates()[i+1];if(this._li.computeIntersection(n,r,o,a),this._li.hasIntersection()&&this._li.isInteriorIntersection()){for(let t=0;t<this._li.getIntersectionNum();t++)this._interiorIntersections.add(this._li.getIntersection(t));t.addIntersections(this._li,e,0),s.addIntersections(this._li,i,1)}}getInteriorIntersections(){return this._interiorIntersections}get interfaces_(){return[Xt]}}class Yt{constructor(){Yt.constructor_.apply(this,arguments)}static constructor_(){this._pm=null,this._li=null,this._scaleFactor=null,this._noder=null,this._pointSnapper=null,this._nodedSegStrings=null;const t=arguments[0];this._pm=t,this._li=new at,this._li.setPrecisionModel(t),this._scaleFactor=t.getScale()}checkCorrectness(t){const e=Y.getNodedSubstrings(t),s=new ht(e);try{s.checkValid()}catch(t){if(!(t instanceof Bt.A))throw t;t.printStackTrace()}}getNodedSubstrings(){return Y.getNodedSubstrings(this._nodedSegStrings)}snapRound(t,e){const s=this.findInteriorIntersections(t,e);this.computeIntersectionSnaps(s),this.computeVertexSnaps(t)}findInteriorIntersections(t,e){const s=new kt(e);return this._noder.setSegmentIntersector(s),this._noder.computeNodes(t),s.getInteriorIntersections()}computeVertexSnaps(){if((0,n.A)(arguments[0],Q.A))for(let t=arguments[0].iterator();t.hasNext();){const e=t.next();this.computeVertexSnaps(e)}else if(arguments[0]instanceof Y){const t=arguments[0],e=t.getCoordinates();for(let s=0;s<e.length;s++){const i=new Gt(e[s],this._scaleFactor,this._li);this._pointSnapper.snap(i,t,s)&&t.addIntersection(e[s],s)}}}computeNodes(t){this._nodedSegStrings=t,this._noder=new vt,this._pointSnapper=new Ut(this._noder.getIndex()),this.snapRound(t,this._li)}computeIntersectionSnaps(t){for(let e=t.iterator();e.hasNext();){const t=e.next(),s=new Gt(t,this._scaleFactor,this._li);this._pointSnapper.snap(s)}}get interfaces_(){return[j]}}var Vt=s(9602);class Ht{static toLocationSymbol(t){switch(t){case Ht.EXTERIOR:return"e";case Ht.BOUNDARY:return"b";case Ht.INTERIOR:return"i";case Ht.NONE:return"-"}throw new U.A("Unknown location value: "+t)}}Ht.INTERIOR=0,Ht.BOUNDARY=1,Ht.EXTERIOR=2,Ht.NONE=-1;class Qt{static opposite(t){return t===Qt.LEFT?Qt.RIGHT:t===Qt.RIGHT?Qt.LEFT:t}}Qt.ON=0,Qt.LEFT=1,Qt.RIGHT=2;class jt extends Bt.A{constructor(t){super(t),this.name=Object.keys({EmptyStackException:jt})[0]}}var Wt=s(1261);class Kt extends At.A{constructor(){super(),this.array=[]}add(t){return this.array.push(t),!0}get(t){if(t<0||t>=this.size())throw new Wt.A;return this.array[t]}push(t){return this.array.push(t),t}pop(){if(0===this.array.length)throw new jt;return this.array.pop()}peek(){if(0===this.array.length)throw new jt;return this.array[this.array.length-1]}empty(){return 0===this.array.length}isEmpty(){return this.empty()}search(t){return this.array.indexOf(t)}size(){return this.array.length}toArray(){return this.array.slice()}}class Jt{constructor(){Jt.constructor_.apply(this,arguments)}static constructor_(){this._minIndex=-1,this._minCoord=null,this._minDe=null,this._orientedDe=null}getCoordinate(){return this._minCoord}getRightmostSide(t,e){let s=this.getRightmostSideOfSegment(t,e);return s<0&&(s=this.getRightmostSideOfSegment(t,e-1)),s<0&&(this._minCoord=null,this.checkForRightmostCoordinate(t)),s}findRightmostEdgeAtVertex(){const t=this._minDe.getEdge().getCoordinates();a.A.isTrue(this._minIndex>0&&this._minIndex<t.length,"rightmost point expected to be interior vertex of edge");const e=t[this._minIndex-1],s=t[this._minIndex+1],i=tt.A.index(this._minCoord,s,e);let n=!1;(e.y<this._minCoord.y&&s.y<this._minCoord.y&&i===tt.A.COUNTERCLOCKWISE||e.y>this._minCoord.y&&s.y>this._minCoord.y&&i===tt.A.CLOCKWISE)&&(n=!0),n&&(this._minIndex=this._minIndex-1)}getRightmostSideOfSegment(t,e){const s=t.getEdge().getCoordinates();if(e<0||e+1>=s.length)return-1;if(s[e].y===s[e+1].y)return-1;let i=Qt.LEFT;return s[e].y<s[e+1].y&&(i=Qt.RIGHT),i}getEdge(){return this._orientedDe}checkForRightmostCoordinate(t){const e=t.getEdge().getCoordinates();for(let s=0;s<e.length-1;s++)(null===this._minCoord||e[s].x>this._minCoord.x)&&(this._minDe=t,this._minIndex=s,this._minCoord=e[s])}findRightmostEdgeAtNode(){const t=this._minDe.getNode().getEdges();this._minDe=t.getRightmostEdge(),this._minDe.isForward()||(this._minDe=this._minDe.getSym(),this._minIndex=this._minDe.getEdge().getCoordinates().length-1)}findEdge(t){for(let e=t.iterator();e.hasNext();){const t=e.next();t.isForward()&&this.checkForRightmostCoordinate(t)}a.A.isTrue(0!==this._minIndex||this._minCoord.equals(this._minDe.getCoordinate()),"inconsistency in rightmost processing"),0===this._minIndex?this.findRightmostEdgeAtNode():this.findRightmostEdgeAtVertex(),this._orientedDe=this._minDe,this.getRightmostSide(this._minDe,this._minIndex)===Qt.LEFT&&(this._orientedDe=this._minDe.getSym())}}class Zt{constructor(){this.array=[]}addLast(t){this.array.push(t)}removeFirst(){return this.array.shift()}isEmpty(){return 0===this.array.length}}class $t{constructor(){$t.constructor_.apply(this,arguments)}static constructor_(){this._finder=null,this._dirEdgeList=new g.A,this._nodes=new g.A,this._rightMostCoord=null,this._env=null,this._finder=new Jt}clearVisitedEdges(){for(let t=this._dirEdgeList.iterator();t.hasNext();)t.next().setVisited(!1)}compareTo(t){const e=t;return this._rightMostCoord.x<e._rightMostCoord.x?-1:this._rightMostCoord.x>e._rightMostCoord.x?1:0}getEnvelope(){if(null===this._env){const t=new $.A;for(let e=this._dirEdgeList.iterator();e.hasNext();){const s=e.next().getEdge().getCoordinates();for(let e=0;e<s.length-1;e++)t.expandToInclude(s[e])}this._env=t}return this._env}addReachable(t){const e=new Kt;for(e.add(t);!e.empty();){const t=e.pop();this.add(t,e)}}copySymDepths(t){const e=t.getSym();e.setDepth(Qt.LEFT,t.getDepth(Qt.RIGHT)),e.setDepth(Qt.RIGHT,t.getDepth(Qt.LEFT))}add(t,e){t.setVisited(!0),this._nodes.add(t);for(let s=t.getEdges().iterator();s.hasNext();){const t=s.next();this._dirEdgeList.add(t);const i=t.getSym().getNode();i.isVisited()||e.push(i)}}getRightmostCoordinate(){return this._rightMostCoord}computeNodeDepth(t){let e=null;for(let s=t.getEdges().iterator();s.hasNext();){const t=s.next();if(t.isVisited()||t.getSym().isVisited()){e=t;break}}if(null===e)throw new K("unable to find edge to compute depths at "+t.getCoordinate());t.getEdges().computeDepths(e);for(let e=t.getEdges().iterator();e.hasNext();){const t=e.next();t.setVisited(!0),this.copySymDepths(t)}}computeDepth(t){this.clearVisitedEdges();const e=this._finder.getEdge();e.getNode(),e.getLabel(),e.setEdgeDepths(Qt.RIGHT,t),this.copySymDepths(e),this.computeDepths(e)}create(t){this.addReachable(t),this._finder.findEdge(this._dirEdgeList),this._rightMostCoord=this._finder.getCoordinate()}findResultEdges(){for(let t=this._dirEdgeList.iterator();t.hasNext();){const e=t.next();e.getDepth(Qt.RIGHT)>=1&&e.getDepth(Qt.LEFT)<=0&&!e.isInteriorAreaEdge()&&e.setInResult(!0)}}computeDepths(t){const e=new f.A,s=new Zt,i=t.getNode();for(s.addLast(i),e.add(i),t.setVisited(!0);!s.isEmpty();){const t=s.removeFirst();e.add(t),this.computeNodeDepth(t);for(let i=t.getEdges().iterator();i.hasNext();){const t=i.next().getSym();if(t.isVisited())continue;const n=t.getNode();e.contains(n)||(s.addLast(n),e.add(n))}}}getNodes(){return this._nodes}getDirectedEdges(){return this._dirEdgeList}get interfaces_(){return[l.A]}}class te{constructor(){te.constructor_.apply(this,arguments)}static constructor_(){this._inputLine=null,this._distanceTol=null,this._isDeleted=null,this._angleOrientation=tt.A.COUNTERCLOCKWISE;const t=arguments[0];this._inputLine=t}static simplify(t,e){return new te(t).simplify(e)}isDeletable(t,e,s,i){const n=this._inputLine[t],r=this._inputLine[e],o=this._inputLine[s];return!!this.isConcave(n,r,o)&&!!this.isShallow(n,r,o,i)&&this.isShallowSampled(n,r,t,s,i)}deleteShallowConcavities(){let t=1,e=this.findNextNonDeletedIndex(t),s=this.findNextNonDeletedIndex(e),i=!1;for(;s<this._inputLine.length;){let n=!1;this.isDeletable(t,e,s,this._distanceTol)&&(this._isDeleted[e]=te.DELETE,n=!0,i=!0),t=n?s:e,e=this.findNextNonDeletedIndex(t),s=this.findNextNonDeletedIndex(e)}return i}isShallowConcavity(t,e,s,i){return tt.A.index(t,e,s)===this._angleOrientation&&nt.pointToSegment(e,t,s)<i}isShallowSampled(t,e,s,i,n){let r=Math.trunc((i-s)/te.NUM_PTS_TO_CHECK);r<=0&&(r=1);for(let o=s;o<i;o+=r)if(!this.isShallow(t,e,this._inputLine[o],n))return!1;return!0}isConcave(t,e,s){return tt.A.index(t,e,s)===this._angleOrientation}simplify(t){this._distanceTol=Math.abs(t),t<0&&(this._angleOrientation=tt.A.CLOCKWISE),this._isDeleted=new Array(this._inputLine.length).fill(null);let e=!1;do{e=this.deleteShallowConcavities()}while(e);return this.collapseLine()}findNextNonDeletedIndex(t){let e=t+1;for(;e<this._inputLine.length&&this._isDeleted[e]===te.DELETE;)e++;return e}isShallow(t,e,s,i){return nt.pointToSegment(e,t,s)<i}collapseLine(){const t=new o.A;for(let e=0;e<this._inputLine.length;e++)this._isDeleted[e]!==te.DELETE&&t.add(this._inputLine[e]);return t.toCoordinateArray()}}te.INIT=0,te.DELETE=1,te.KEEP=1,te.NUM_PTS_TO_CHECK=10;class ee{constructor(){ee.constructor_.apply(this,arguments)}static constructor_(){this._ptList=null,this._precisionModel=null,this._minimimVertexDistance=0,this._ptList=new g.A}getCoordinates(){return this._ptList.toArray(ee.COORDINATE_ARRAY_TYPE)}setPrecisionModel(t){this._precisionModel=t}addPt(t){const e=new r.A(t);if(this._precisionModel.makePrecise(e),this.isRedundant(e))return null;this._ptList.add(e)}reverse(){}addPts(t,e){if(e)for(let e=0;e<t.length;e++)this.addPt(t[e]);else for(let e=t.length-1;e>=0;e--)this.addPt(t[e])}isRedundant(t){if(this._ptList.size()<1)return!1;const e=this._ptList.get(this._ptList.size()-1);return t.distance(e)<this._minimimVertexDistance}toString(){return(new L.A).createLineString(this.getCoordinates()).toString()}closeRing(){if(this._ptList.size()<1)return null;const t=new r.A(this._ptList.get(0)),e=this._ptList.get(this._ptList.size()-1);if(t.equals(e))return null;this._ptList.add(t)}setMinimumVertexDistance(t){this._minimimVertexDistance=t}}ee.COORDINATE_ARRAY_TYPE=new Array(0).fill(null);class se{static toDegrees(t){return 180*t/Math.PI}static isAcute(t,e,s){const i=t.x-e.x,n=t.y-e.y;return i*(s.x-e.x)+n*(s.y-e.y)>0}static isObtuse(t,e,s){const i=t.x-e.x,n=t.y-e.y;return i*(s.x-e.x)+n*(s.y-e.y)<0}static interiorAngle(t,e,s){const i=se.angle(e,t),n=se.angle(e,s);return Math.abs(n-i)}static normalizePositive(t){if(t<0){for(;t<0;)t+=se.PI_TIMES_2;t>=se.PI_TIMES_2&&(t=0)}else{for(;t>=se.PI_TIMES_2;)t-=se.PI_TIMES_2;t<0&&(t=0)}return t}static angleBetween(t,e,s){const i=se.angle(e,t),n=se.angle(e,s);return se.diff(i,n)}static diff(t,e){let s=null;return s=t<e?e-t:t-e,s>Math.PI&&(s=2*Math.PI-s),s}static toRadians(t){return t*Math.PI/180}static normalize(t){for(;t>Math.PI;)t-=se.PI_TIMES_2;for(;t<=-Math.PI;)t+=se.PI_TIMES_2;return t}static angle(){if(1===arguments.length){const t=arguments[0];return Math.atan2(t.y,t.x)}if(2===arguments.length){const t=arguments[0],e=arguments[1],s=e.x-t.x,i=e.y-t.y;return Math.atan2(i,s)}}static getTurn(t,e){const s=Math.sin(e-t);return s>0?se.COUNTERCLOCKWISE:s<0?se.CLOCKWISE:se.NONE}static angleBetweenOriented(t,e,s){const i=se.angle(e,t),n=se.angle(e,s)-i;return n<=-Math.PI?n+se.PI_TIMES_2:n>Math.PI?n-se.PI_TIMES_2:n}}se.PI_TIMES_2=2*Math.PI,se.PI_OVER_2=Math.PI/2,se.PI_OVER_4=Math.PI/4,se.COUNTERCLOCKWISE=tt.A.COUNTERCLOCKWISE,se.CLOCKWISE=tt.A.CLOCKWISE,se.NONE=tt.A.COLLINEAR;class ie{constructor(){ie.constructor_.apply(this,arguments)}static constructor_(){this._maxCurveSegmentError=0,this._filletAngleQuantum=null,this._closingSegLengthFactor=1,this._segList=null,this._distance=0,this._precisionModel=null,this._bufParams=null,this._li=null,this._s0=null,this._s1=null,this._s2=null,this._seg0=new Ct,this._seg1=new Ct,this._offset0=new Ct,this._offset1=new Ct,this._side=0,this._hasNarrowConcaveAngle=!1;const t=arguments[0],e=arguments[1],s=arguments[2];this._precisionModel=t,this._bufParams=e,this._li=new at,this._filletAngleQuantum=Math.PI/2/e.getQuadrantSegments(),e.getQuadrantSegments()>=8&&e.getJoinStyle()===i.JOIN_ROUND&&(this._closingSegLengthFactor=ie.MAX_CLOSING_SEG_LEN_FACTOR),this.init(s)}getCoordinates(){return this._segList.getCoordinates()}addMitreJoin(t,e,s,i){const n=st.intersection(e.p0,e.p1,s.p0,s.p1);if(null!==n&&(i<=0?1:n.distance(t)/Math.abs(i))<=this._bufParams.getMitreLimit())return this._segList.addPt(n),null;this.addLimitedMitreJoin(e,s,i,this._bufParams.getMitreLimit())}addLastSegment(){this._segList.addPt(this._offset1.p1)}initSideSegments(t,e,s){this._s1=t,this._s2=e,this._side=s,this._seg1.setCoordinates(t,e),this.computeOffsetSegment(this._seg1,s,this._distance,this._offset1)}addLimitedMitreJoin(t,e,s,i){const n=this._seg0.p1,o=se.angle(n,this._seg0.p0),a=se.angleBetweenOriented(this._seg0.p0,n,this._seg1.p1)/2,h=se.normalize(o+a),l=se.normalize(h+Math.PI),c=i*s,u=s-c*Math.abs(Math.sin(a)),d=n.x+c*Math.cos(l),g=n.y+c*Math.sin(l),_=new r.A(d,g),p=new Ct(n,_),f=p.pointAlongOffset(1,u),m=p.pointAlongOffset(1,-u);this._side===Qt.LEFT?(this._segList.addPt(f),this._segList.addPt(m)):(this._segList.addPt(m),this._segList.addPt(f))}addDirectedFillet(t,e,s,i,n){const o=i===tt.A.CLOCKWISE?-1:1,a=Math.abs(e-s),h=Math.trunc(a/this._filletAngleQuantum+.5);if(h<1)return null;const l=a/h,c=new r.A;for(let s=0;s<h;s++){const i=e+o*s*l;c.x=t.x+n*Math.cos(i),c.y=t.y+n*Math.sin(i),this._segList.addPt(c)}}computeOffsetSegment(t,e,s,i){const n=e===Qt.LEFT?1:-1,r=t.p1.x-t.p0.x,o=t.p1.y-t.p0.y,a=Math.sqrt(r*r+o*o),h=n*s*r/a,l=n*s*o/a;i.p0.x=t.p0.x-l,i.p0.y=t.p0.y+h,i.p1.x=t.p1.x-l,i.p1.y=t.p1.y+h}addInsideTurn(t,e){if(this._li.computeIntersection(this._offset0.p0,this._offset0.p1,this._offset1.p0,this._offset1.p1),this._li.hasIntersection())this._segList.addPt(this._li.getIntersection(0));else if(this._hasNarrowConcaveAngle=!0,this._offset0.p1.distance(this._offset1.p0)<this._distance*ie.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR)this._segList.addPt(this._offset0.p1);else{if(this._segList.addPt(this._offset0.p1),this._closingSegLengthFactor>0){const t=new r.A((this._closingSegLengthFactor*this._offset0.p1.x+this._s1.x)/(this._closingSegLengthFactor+1),(this._closingSegLengthFactor*this._offset0.p1.y+this._s1.y)/(this._closingSegLengthFactor+1));this._segList.addPt(t);const e=new r.A((this._closingSegLengthFactor*this._offset1.p0.x+this._s1.x)/(this._closingSegLengthFactor+1),(this._closingSegLengthFactor*this._offset1.p0.y+this._s1.y)/(this._closingSegLengthFactor+1));this._segList.addPt(e)}else this._segList.addPt(this._s1);this._segList.addPt(this._offset1.p0)}}createCircle(t){const e=new r.A(t.x+this._distance,t.y);this._segList.addPt(e),this.addDirectedFillet(t,0,2*Math.PI,-1,this._distance),this._segList.closeRing()}addBevelJoin(t,e){this._segList.addPt(t.p1),this._segList.addPt(e.p0)}init(t){this._distance=t,this._maxCurveSegmentError=t*(1-Math.cos(this._filletAngleQuantum/2)),this._segList=new ee,this._segList.setPrecisionModel(this._precisionModel),this._segList.setMinimumVertexDistance(t*ie.CURVE_VERTEX_SNAP_DISTANCE_FACTOR)}addCollinear(t){this._li.computeIntersection(this._s0,this._s1,this._s1,this._s2),this._li.getIntersectionNum()>=2&&(this._bufParams.getJoinStyle()===i.JOIN_BEVEL||this._bufParams.getJoinStyle()===i.JOIN_MITRE?(t&&this._segList.addPt(this._offset0.p1),this._segList.addPt(this._offset1.p0)):this.addCornerFillet(this._s1,this._offset0.p1,this._offset1.p0,tt.A.CLOCKWISE,this._distance))}addNextSegment(t,e){if(this._s0=this._s1,this._s1=this._s2,this._s2=t,this._seg0.setCoordinates(this._s0,this._s1),this.computeOffsetSegment(this._seg0,this._side,this._distance,this._offset0),this._seg1.setCoordinates(this._s1,this._s2),this.computeOffsetSegment(this._seg1,this._side,this._distance,this._offset1),this._s1.equals(this._s2))return null;const s=tt.A.index(this._s0,this._s1,this._s2),i=s===tt.A.CLOCKWISE&&this._side===Qt.LEFT||s===tt.A.COUNTERCLOCKWISE&&this._side===Qt.RIGHT;0===s?this.addCollinear(e):i?this.addOutsideTurn(s,e):this.addInsideTurn(s,e)}addLineEndCap(t,e){const s=new Ct(t,e),n=new Ct;this.computeOffsetSegment(s,Qt.LEFT,this._distance,n);const o=new Ct;this.computeOffsetSegment(s,Qt.RIGHT,this._distance,o);const a=e.x-t.x,h=e.y-t.y,l=Math.atan2(h,a);switch(this._bufParams.getEndCapStyle()){case i.CAP_ROUND:this._segList.addPt(n.p1),this.addDirectedFillet(e,l+Math.PI/2,l-Math.PI/2,tt.A.CLOCKWISE,this._distance),this._segList.addPt(o.p1);break;case i.CAP_FLAT:this._segList.addPt(n.p1),this._segList.addPt(o.p1);break;case i.CAP_SQUARE:const t=new r.A;t.x=Math.abs(this._distance)*Math.cos(l),t.y=Math.abs(this._distance)*Math.sin(l);const s=new r.A(n.p1.x+t.x,n.p1.y+t.y),a=new r.A(o.p1.x+t.x,o.p1.y+t.y);this._segList.addPt(s),this._segList.addPt(a)}}addOutsideTurn(t,e){if(this._offset0.p1.distance(this._offset1.p0)<this._distance*ie.OFFSET_SEGMENT_SEPARATION_FACTOR)return this._segList.addPt(this._offset0.p1),null;this._bufParams.getJoinStyle()===i.JOIN_MITRE?this.addMitreJoin(this._s1,this._offset0,this._offset1,this._distance):this._bufParams.getJoinStyle()===i.JOIN_BEVEL?this.addBevelJoin(this._offset0,this._offset1):(e&&this._segList.addPt(this._offset0.p1),this.addCornerFillet(this._s1,this._offset0.p1,this._offset1.p0,t,this._distance),this._segList.addPt(this._offset1.p0))}createSquare(t){this._segList.addPt(new r.A(t.x+this._distance,t.y+this._distance)),this._segList.addPt(new r.A(t.x+this._distance,t.y-this._distance)),this._segList.addPt(new r.A(t.x-this._distance,t.y-this._distance)),this._segList.addPt(new r.A(t.x-this._distance,t.y+this._distance)),this._segList.closeRing()}addSegments(t,e){this._segList.addPts(t,e)}addFirstSegment(){this._segList.addPt(this._offset1.p0)}addCornerFillet(t,e,s,i,n){const r=e.x-t.x,o=e.y-t.y;let a=Math.atan2(o,r);const h=s.x-t.x,l=s.y-t.y,c=Math.atan2(l,h);i===tt.A.CLOCKWISE?a<=c&&(a+=2*Math.PI):a>=c&&(a-=2*Math.PI),this._segList.addPt(e),this.addDirectedFillet(t,a,c,i,n),this._segList.addPt(s)}closeRing(){this._segList.closeRing()}hasNarrowConcaveAngle(){return this._hasNarrowConcaveAngle}}ie.OFFSET_SEGMENT_SEPARATION_FACTOR=.001,ie.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR=.001,ie.CURVE_VERTEX_SNAP_DISTANCE_FACTOR=1e-6,ie.MAX_CLOSING_SEG_LEN_FACTOR=80;class ne{constructor(){ne.constructor_.apply(this,arguments)}static constructor_(){this._distance=0,this._precisionModel=null,this._bufParams=null;const t=arguments[0],e=arguments[1];this._precisionModel=t,this._bufParams=e}static copyCoordinates(t){const e=new Array(t.length).fill(null);for(let s=0;s<e.length;s++)e[s]=new r.A(t[s]);return e}getOffsetCurve(t,e){if(this._distance=e,0===e)return null;const s=e<0,i=Math.abs(e),n=this.getSegGen(i);t.length<=1?this.computePointCurve(t[0],n):this.computeOffsetCurve(t,s,n);const r=n.getCoordinates();return s&&H.A.reverse(r),r}computeSingleSidedBufferCurve(t,e,s){const i=this.simplifyTolerance(this._distance);if(e){s.addSegments(t,!0);const e=te.simplify(t,-i),n=e.length-1;s.initSideSegments(e[n],e[n-1],Qt.LEFT),s.addFirstSegment();for(let t=n-2;t>=0;t--)s.addNextSegment(e[t],!0)}else{s.addSegments(t,!1);const e=te.simplify(t,i),n=e.length-1;s.initSideSegments(e[0],e[1],Qt.LEFT),s.addFirstSegment();for(let t=2;t<=n;t++)s.addNextSegment(e[t],!0)}s.addLastSegment(),s.closeRing()}computeRingBufferCurve(t,e,s){let i=this.simplifyTolerance(this._distance);e===Qt.RIGHT&&(i=-i);const n=te.simplify(t,i),r=n.length-1;s.initSideSegments(n[r-1],n[0],e);for(let t=1;t<=r;t++){const e=1!==t;s.addNextSegment(n[t],e)}s.closeRing()}computeLineBufferCurve(t,e){const s=this.simplifyTolerance(this._distance),i=te.simplify(t,s),n=i.length-1;e.initSideSegments(i[0],i[1],Qt.LEFT);for(let t=2;t<=n;t++)e.addNextSegment(i[t],!0);e.addLastSegment(),e.addLineEndCap(i[n-1],i[n]);const r=te.simplify(t,-s),o=r.length-1;e.initSideSegments(r[o],r[o-1],Qt.LEFT);for(let t=o-2;t>=0;t--)e.addNextSegment(r[t],!0);e.addLastSegment(),e.addLineEndCap(r[1],r[0]),e.closeRing()}computePointCurve(t,e){switch(this._bufParams.getEndCapStyle()){case i.CAP_ROUND:e.createCircle(t);break;case i.CAP_SQUARE:e.createSquare(t)}}getLineCurve(t,e){if(this._distance=e,this.isLineOffsetEmpty(e))return null;const s=Math.abs(e),i=this.getSegGen(s);if(t.length<=1)this.computePointCurve(t[0],i);else if(this._bufParams.isSingleSided()){const s=e<0;this.computeSingleSidedBufferCurve(t,s,i)}else this.computeLineBufferCurve(t,i);return i.getCoordinates()}getBufferParameters(){return this._bufParams}simplifyTolerance(t){return t*this._bufParams.getSimplifyFactor()}getRingCurve(t,e,s){if(this._distance=s,t.length<=2)return this.getLineCurve(t,s);if(0===s)return ne.copyCoordinates(t);const i=this.getSegGen(s);return this.computeRingBufferCurve(t,e,i),i.getCoordinates()}computeOffsetCurve(t,e,s){const i=this.simplifyTolerance(this._distance);if(e){const e=te.simplify(t,-i),n=e.length-1;s.initSideSegments(e[n],e[n-1],Qt.LEFT),s.addFirstSegment();for(let t=n-2;t>=0;t--)s.addNextSegment(e[t],!0)}else{const e=te.simplify(t,i),n=e.length-1;s.initSideSegments(e[0],e[1],Qt.LEFT),s.addFirstSegment();for(let t=2;t<=n;t++)s.addNextSegment(e[t],!0)}s.addLastSegment()}isLineOffsetEmpty(t){return 0===t||t<0&&!this._bufParams.isSingleSided()}getSegGen(t){return new ie(this._precisionModel,this._bufParams,t)}}var re=s(2549);class oe{constructor(){oe.constructor_.apply(this,arguments)}static constructor_(){if(this.location=null,1===arguments.length){if(arguments[0]instanceof Array){const t=arguments[0];this.init(t.length)}else if(Number.isInteger(arguments[0])){const t=arguments[0];this.init(1),this.location[Qt.ON]=t}else if(arguments[0]instanceof oe){const t=arguments[0];if(this.init(t.location.length),null!==t)for(let e=0;e<this.location.length;e++)this.location[e]=t.location[e]}}else if(3===arguments.length){const t=arguments[0],e=arguments[1],s=arguments[2];this.init(3),this.location[Qt.ON]=t,this.location[Qt.LEFT]=e,this.location[Qt.RIGHT]=s}}setAllLocations(t){for(let e=0;e<this.location.length;e++)this.location[e]=t}isNull(){for(let t=0;t<this.location.length;t++)if(this.location[t]!==Ht.NONE)return!1;return!0}setAllLocationsIfNull(t){for(let e=0;e<this.location.length;e++)this.location[e]===Ht.NONE&&(this.location[e]=t)}isLine(){return 1===this.location.length}merge(t){if(t.location.length>this.location.length){const t=new Array(3).fill(null);t[Qt.ON]=this.location[Qt.ON],t[Qt.LEFT]=Ht.NONE,t[Qt.RIGHT]=Ht.NONE,this.location=t}for(let e=0;e<this.location.length;e++)this.location[e]===Ht.NONE&&e<t.location.length&&(this.location[e]=t.location[e])}getLocations(){return this.location}flip(){if(this.location.length<=1)return null;const t=this.location[Qt.LEFT];this.location[Qt.LEFT]=this.location[Qt.RIGHT],this.location[Qt.RIGHT]=t}get(t){return t<this.location.length?this.location[t]:Ht.NONE}isEqualOnSide(t,e){return this.location[e]===t.location[e]}allPositionsEqual(t){for(let e=0;e<this.location.length;e++)if(this.location[e]!==t)return!1;return!0}toString(){const t=new re.A;return this.location.length>1&&t.append(Ht.toLocationSymbol(this.location[Qt.LEFT])),t.append(Ht.toLocationSymbol(this.location[Qt.ON])),this.location.length>1&&t.append(Ht.toLocationSymbol(this.location[Qt.RIGHT])),t.toString()}setLocations(t,e,s){this.location[Qt.ON]=t,this.location[Qt.LEFT]=e,this.location[Qt.RIGHT]=s}isArea(){return this.location.length>1}isAnyNull(){for(let t=0;t<this.location.length;t++)if(this.location[t]===Ht.NONE)return!0;return!1}setLocation(){if(1===arguments.length){const t=arguments[0];this.setLocation(Qt.ON,t)}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this.location[t]=e}}init(t){this.location=new Array(t).fill(null),this.setAllLocations(Ht.NONE)}}class ae{constructor(){ae.constructor_.apply(this,arguments)}static constructor_(){if(this.elt=new Array(2).fill(null),1===arguments.length){if(Number.isInteger(arguments[0])){const t=arguments[0];this.elt[0]=new oe(t),this.elt[1]=new oe(t)}else if(arguments[0]instanceof ae){const t=arguments[0];this.elt[0]=new oe(t.elt[0]),this.elt[1]=new oe(t.elt[1])}}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this.elt[0]=new oe(Ht.NONE),this.elt[1]=new oe(Ht.NONE),this.elt[t].setLocation(e)}else if(3===arguments.length){const t=arguments[0],e=arguments[1],s=arguments[2];this.elt[0]=new oe(t,e,s),this.elt[1]=new oe(t,e,s)}else if(4===arguments.length){const t=arguments[0],e=arguments[1],s=arguments[2],i=arguments[3];this.elt[0]=new oe(Ht.NONE,Ht.NONE,Ht.NONE),this.elt[1]=new oe(Ht.NONE,Ht.NONE,Ht.NONE),this.elt[t].setLocations(e,s,i)}}static toLineLabel(t){const e=new ae(Ht.NONE);for(let s=0;s<2;s++)e.setLocation(s,t.getLocation(s));return e}getGeometryCount(){let t=0;return this.elt[0].isNull()||t++,this.elt[1].isNull()||t++,t}setAllLocations(t,e){this.elt[t].setAllLocations(e)}isNull(t){return this.elt[t].isNull()}setAllLocationsIfNull(){if(1===arguments.length){const t=arguments[0];this.setAllLocationsIfNull(0,t),this.setAllLocationsIfNull(1,t)}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this.elt[t].setAllLocationsIfNull(e)}}isLine(t){return this.elt[t].isLine()}merge(t){for(let e=0;e<2;e++)null===this.elt[e]&&null!==t.elt[e]?this.elt[e]=new oe(t.elt[e]):this.elt[e].merge(t.elt[e])}flip(){this.elt[0].flip(),this.elt[1].flip()}getLocation(){if(1===arguments.length){const t=arguments[0];return this.elt[t].get(Qt.ON)}if(2===arguments.length){const t=arguments[0],e=arguments[1];return this.elt[t].get(e)}}toString(){const t=new re.A;return null!==this.elt[0]&&(t.append("A:"),t.append(this.elt[0].toString())),null!==this.elt[1]&&(t.append(" B:"),t.append(this.elt[1].toString())),t.toString()}setLocation(){if(2===arguments.length){const t=arguments[0],e=arguments[1];this.elt[t].setLocation(Qt.ON,e)}else if(3===arguments.length){const t=arguments[0],e=arguments[1],s=arguments[2];this.elt[t].setLocation(e,s)}}isEqualOnSide(t,e){return this.elt[0].isEqualOnSide(t.elt[0],e)&&this.elt[1].isEqualOnSide(t.elt[1],e)}allPositionsEqual(t,e){return this.elt[t].allPositionsEqual(e)}toLine(t){this.elt[t].isArea()&&(this.elt[t]=new oe(this.elt[t].location[0]))}isArea(){if(0===arguments.length)return this.elt[0].isArea()||this.elt[1].isArea();if(1===arguments.length){const t=arguments[0];return this.elt[t].isArea()}}isAnyNull(t){return this.elt[t].isAnyNull()}}class he{constructor(){he.constructor_.apply(this,arguments)}static constructor_(){if(this._label=null,this._isInResult=!1,this._isCovered=!1,this._isCoveredSet=!1,this._isVisited=!1,0===arguments.length);else if(1===arguments.length){const t=arguments[0];this._label=t}}setVisited(t){this._isVisited=t}setInResult(t){this._isInResult=t}setLabel(t){this._label=t}getLabel(){return this._label}setCovered(t){this._isCovered=t,this._isCoveredSet=!0}updateIM(t){a.A.isTrue(this._label.getGeometryCount()>=2,"found partial label"),this.computeIM(t)}isCovered(){return this._isCovered}isCoveredSet(){return this._isCoveredSet}isInResult(){return this._isInResult}isVisited(){return this._isVisited}}class le extends he{constructor(){super(),le.constructor_.apply(this,arguments)}static constructor_(){this._coord=null,this._edges=null;const t=arguments[0],e=arguments[1];this._coord=t,this._edges=e,this._label=new ae(0,Ht.NONE)}isIncidentEdgeInResult(){for(let t=this.getEdges().getEdges().iterator();t.hasNext();)if(t.next().getEdge().isInResult())return!0;return!1}isIsolated(){return 1===this._label.getGeometryCount()}getCoordinate(){return this._coord}computeMergedLocation(t,e){let s=Ht.NONE;if(s=this._label.getLocation(e),!t.isNull(e)){const i=t.getLocation(e);s!==Ht.BOUNDARY&&(s=i)}return s}setLabel(){if(2!==arguments.length||!Number.isInteger(arguments[1])||!Number.isInteger(arguments[0]))return super.setLabel.apply(this,arguments);{const t=arguments[0],e=arguments[1];null===this._label?this._label=new ae(t,e):this._label.setLocation(t,e)}}getEdges(){return this._edges}mergeLabel(){if(arguments[0]instanceof le){const t=arguments[0];this.mergeLabel(t._label)}else if(arguments[0]instanceof ae){const t=arguments[0];for(let e=0;e<2;e++){const s=this.computeMergedLocation(t,e);this._label.getLocation(e)===Ht.NONE&&this._label.setLocation(e,s)}}}add(t){this._edges.insert(t),t.setNode(this)}setLabelBoundary(t){if(null===this._label)return null;let e=Ht.NONE;null!==this._label&&(e=this._label.getLocation(t));let s=null;switch(e){case Ht.BOUNDARY:s=Ht.INTERIOR;break;case Ht.INTERIOR:default:s=Ht.BOUNDARY}this._label.setLocation(t,s)}print(t){t.println("node "+this._coord+" lbl: "+this._label)}computeIM(t){}}class ce{constructor(){ce.constructor_.apply(this,arguments)}static constructor_(){this.nodeMap=new N,this.nodeFact=null;const t=arguments[0];this.nodeFact=t}print(t){for(let e=this.iterator();e.hasNext();)e.next().print(t)}iterator(){return this.nodeMap.values().iterator()}values(){return this.nodeMap.values()}getBoundaryNodes(t){const e=new g.A;for(let s=this.iterator();s.hasNext();){const i=s.next();i.getLabel().getLocation(t)===Ht.BOUNDARY&&e.add(i)}return e}add(t){const e=t.getCoordinate();this.addNode(e).add(t)}find(t){return this.nodeMap.get(t)}addNode(){if(arguments[0]instanceof r.A){const t=arguments[0];let e=this.nodeMap.get(t);return null===e&&(e=this.nodeFact.createNode(t),this.nodeMap.put(t,e)),e}if(arguments[0]instanceof le){const t=arguments[0],e=this.nodeMap.get(t.getCoordinate());return null===e?(this.nodeMap.put(t.getCoordinate(),t),t):(e.mergeLabel(t),e)}}}class ue{createNode(t){return new le(t,null)}}class de{constructor(){de.constructor_.apply(this,arguments)}static constructor_(){if(this._edge=null,this._label=null,this._node=null,this._p0=null,this._p1=null,this._dx=null,this._dy=null,this._quadrant=null,1===arguments.length){const t=arguments[0];this._edge=t}else if(3===arguments.length){const t=arguments[0],e=arguments[1],s=arguments[2];de.constructor_.call(this,t,e,s,null)}else if(4===arguments.length){const t=arguments[0],e=arguments[1],s=arguments[2],i=arguments[3];de.constructor_.call(this,t),this.init(e,s),this._label=i}}compareDirection(t){return this._dx===t._dx&&this._dy===t._dy?0:this._quadrant>t._quadrant?1:this._quadrant<t._quadrant?-1:tt.A.index(t._p0,t._p1,this._p1)}getDy(){return this._dy}print(t){const e=Math.atan2(this._dy,this._dx),s=this.getClass().getName(),i=s.lastIndexOf("."),n=s.substring(i+1);t.print("  "+n+": "+this._p0+" - "+this._p1+" "+this._quadrant+":"+e+"   "+this._label)}getLabel(){return this._label}getEdge(){return this._edge}toString(){const t=Math.atan2(this._dy,this._dx),e=this.getClass().getName(),s=e.lastIndexOf(".");return"  "+e.substring(s+1)+": "+this._p0+" - "+this._p1+" "+this._quadrant+":"+t+"   "+this._label}computeLabel(t){}init(t,e){this._p0=t,this._p1=e,this._dx=e.x-t.x,this._dy=e.y-t.y,this._quadrant=Pt.quadrant(this._dx,this._dy),a.A.isTrue(!(0===this._dx&&0===this._dy),"EdgeEnd with identical endpoints found")}getCoordinate(){return this._p0}setNode(t){this._node=t}compareTo(t){const e=t;return this.compareDirection(e)}getDirectedCoordinate(){return this._p1}getDx(){return this._dx}getQuadrant(){return this._quadrant}getNode(){return this._node}get interfaces_(){return[l.A]}}class ge extends de{constructor(){super(),ge.constructor_.apply(this,arguments)}static constructor_(){this._isForward=null,this._isInResult=!1,this._isVisited=!1,this._sym=null,this._next=null,this._nextMin=null,this._edgeRing=null,this._minEdgeRing=null,this._depth=[0,-999,-999];const t=arguments[0],e=arguments[1];if(de.constructor_.call(this,t),this._isForward=e,e)this.init(t.getCoordinate(0),t.getCoordinate(1));else{const e=t.getNumPoints()-1;this.init(t.getCoordinate(e),t.getCoordinate(e-1))}this.computeDirectedLabel()}static depthFactor(t,e){return t===Ht.EXTERIOR&&e===Ht.INTERIOR?1:t===Ht.INTERIOR&&e===Ht.EXTERIOR?-1:0}setVisited(t){this._isVisited=t}setDepth(t,e){if(-999!==this._depth[t]&&this._depth[t]!==e)throw new K("assigned depths do not match",this.getCoordinate());this._depth[t]=e}isInteriorAreaEdge(){let t=!0;for(let e=0;e<2;e++)this._label.isArea(e)&&this._label.getLocation(e,Qt.LEFT)===Ht.INTERIOR&&this._label.getLocation(e,Qt.RIGHT)===Ht.INTERIOR||(t=!1);return t}setNextMin(t){this._nextMin=t}print(t){super.print.call(this,t),t.print(" "+this._depth[Qt.LEFT]+"/"+this._depth[Qt.RIGHT]),t.print(" ("+this.getDepthDelta()+")"),this._isInResult&&t.print(" inResult")}setMinEdgeRing(t){this._minEdgeRing=t}getSym(){return this._sym}isForward(){return this._isForward}setSym(t){this._sym=t}setVisitedEdge(t){this.setVisited(t),this._sym.setVisited(t)}getNextMin(){return this._nextMin}getDepth(t){return this._depth[t]}computeDirectedLabel(){this._label=new ae(this._edge.getLabel()),this._isForward||this._label.flip()}getNext(){return this._next}isLineEdge(){const t=this._label.isLine(0)||this._label.isLine(1),e=!this._label.isArea(0)||this._label.allPositionsEqual(0,Ht.EXTERIOR),s=!this._label.isArea(1)||this._label.allPositionsEqual(1,Ht.EXTERIOR);return t&&e&&s}setEdgeRing(t){this._edgeRing=t}getMinEdgeRing(){return this._minEdgeRing}getDepthDelta(){let t=this._edge.getDepthDelta();return this._isForward||(t=-t),t}setInResult(t){this._isInResult=t}getEdge(){return this._edge}printEdge(t){this.print(t),t.print(" "),this._isForward?this._edge.print(t):this._edge.printReverse(t)}setEdgeDepths(t,e){let s=this.getEdge().getDepthDelta();this._isForward||(s=-s);let i=1;t===Qt.LEFT&&(i=-1);const n=Qt.opposite(t),r=e+s*i;this.setDepth(t,e),this.setDepth(n,r)}getEdgeRing(){return this._edgeRing}isInResult(){return this._isInResult}setNext(t){this._next=t}isVisited(){return this._isVisited}}class _e{constructor(){_e.constructor_.apply(this,arguments)}static constructor_(){if(this._edges=new g.A,this._nodes=null,this._edgeEndList=new g.A,0===arguments.length)this._nodes=new ce(new ue);else if(1===arguments.length){const t=arguments[0];this._nodes=new ce(t)}}static linkResultDirectedEdges(t){for(let e=t.iterator();e.hasNext();)e.next().getEdges().linkResultDirectedEdges()}printEdges(t){t.println("Edges:");for(let e=0;e<this._edges.size();e++){t.println("edge "+e+":");const s=this._edges.get(e);s.print(t),s.eiList.print(t)}}debugPrintln(t){V.A.out.println(t)}isBoundaryNode(t,e){const s=this._nodes.find(e);if(null===s)return!1;const i=s.getLabel();return null!==i&&i.getLocation(t)===Ht.BOUNDARY}linkAllDirectedEdges(){for(let t=this._nodes.iterator();t.hasNext();)t.next().getEdges().linkAllDirectedEdges()}debugPrint(t){V.A.out.print(t)}findEdgeEnd(t){for(let e=this.getEdgeEnds().iterator();e.hasNext();){const s=e.next();if(s.getEdge()===t)return s}return null}getNodes(){return this._nodes.values()}findEdge(t,e){for(let s=0;s<this._edges.size();s++){const i=this._edges.get(s),n=i.getCoordinates();if(t.equals(n[0])&&e.equals(n[1]))return i}return null}find(t){return this._nodes.find(t)}addNode(){if(arguments[0]instanceof le){const t=arguments[0];return this._nodes.addNode(t)}if(arguments[0]instanceof r.A){const t=arguments[0];return this._nodes.addNode(t)}}getNodeIterator(){return this._nodes.iterator()}linkResultDirectedEdges(){for(let t=this._nodes.iterator();t.hasNext();)t.next().getEdges().linkResultDirectedEdges()}matchInSameDirection(t,e,s,i){return!!t.equals(s)&&tt.A.index(t,e,i)===tt.A.COLLINEAR&&Pt.quadrant(t,e)===Pt.quadrant(s,i)}getEdgeEnds(){return this._edgeEndList}getEdgeIterator(){return this._edges.iterator()}findEdgeInSameDirection(t,e){for(let s=0;s<this._edges.size();s++){const i=this._edges.get(s),n=i.getCoordinates();if(this.matchInSameDirection(t,e,n[0],n[1]))return i;if(this.matchInSameDirection(t,e,n[n.length-1],n[n.length-2]))return i}return null}insertEdge(t){this._edges.add(t)}addEdges(t){for(let e=t.iterator();e.hasNext();){const t=e.next();this._edges.add(t);const s=new ge(t,!0),i=new ge(t,!1);s.setSym(i),i.setSym(s),this.add(s),this.add(i)}}add(t){this._nodes.add(t),this._edgeEndList.add(t)}}var pe=s(1453);class fe{constructor(){fe.constructor_.apply(this,arguments)}static constructor_(){this._p=null,this._crossingCount=0,this._isPointOnSegment=!1;const t=arguments[0];this._p=t}static locatePointInRing(){if(arguments[0]instanceof r.A&&(0,n.A)(arguments[1],pe.A)){const t=arguments[1],e=new fe(arguments[0]),s=new r.A,i=new r.A;for(let n=1;n<t.size();n++)if(t.getCoordinate(n,s),t.getCoordinate(n-1,i),e.countSegment(s,i),e.isOnSegment())return e.getLocation();return e.getLocation()}if(arguments[0]instanceof r.A&&arguments[1]instanceof Array){const t=arguments[1],e=new fe(arguments[0]);for(let s=1;s<t.length;s++){const i=t[s],n=t[s-1];if(e.countSegment(i,n),e.isOnSegment())return e.getLocation()}return e.getLocation()}}getLocation(){return this._isPointOnSegment?Ht.BOUNDARY:this._crossingCount%2==1?Ht.INTERIOR:Ht.EXTERIOR}isPointInPolygon(){return this.getLocation()!==Ht.EXTERIOR}isOnSegment(){return this._isPointOnSegment}countSegment(t,e){if(t.x<this._p.x&&e.x<this._p.x)return null;if(this._p.x===e.x&&this._p.y===e.y)return this._isPointOnSegment=!0,null;if(t.y===this._p.y&&e.y===this._p.y){let s=t.x,i=e.x;return s>i&&(s=e.x,i=t.x),this._p.x>=s&&this._p.x<=i&&(this._isPointOnSegment=!0),null}if(t.y>this._p.y&&e.y<=this._p.y||e.y>this._p.y&&t.y<=this._p.y){let s=tt.A.index(t,e,this._p);if(s===tt.A.COLLINEAR)return this._isPointOnSegment=!0,null;e.y<t.y&&(s=-s),s===tt.A.LEFT&&this._crossingCount++}}}class me{static isInRing(t,e){return me.locateInRing(t,e)!==Ht.EXTERIOR}static locateInRing(t,e){return fe.locatePointInRing(t,e)}static isOnLine(){if(arguments[0]instanceof r.A&&(0,n.A)(arguments[1],pe.A)){const t=arguments[0],e=arguments[1],s=new at,i=new r.A,n=new r.A,o=e.size();for(let r=1;r<o;r++)if(e.getCoordinate(r-1,i),e.getCoordinate(r,n),s.computeIntersection(t,i,n),s.hasIntersection())return!0;return!1}if(arguments[0]instanceof r.A&&arguments[1]instanceof Array){const t=arguments[0],e=arguments[1],s=new at;for(let i=1;i<e.length;i++){const n=e[i-1],r=e[i];if(s.computeIntersection(t,n,r),s.hasIntersection())return!0}return!1}}}class Ie{constructor(){Ie.constructor_.apply(this,arguments)}static constructor_(){if(this._startDe=null,this._maxNodeDegree=-1,this._edges=new g.A,this._pts=new g.A,this._label=new ae(Ht.NONE),this._ring=null,this._isHole=null,this._shell=null,this._holes=new g.A,this._geometryFactory=null,0===arguments.length);else if(2===arguments.length){const t=arguments[0],e=arguments[1];this._geometryFactory=e,this.computePoints(t),this.computeRing()}}computeRing(){if(null!==this._ring)return null;const t=new Array(this._pts.size()).fill(null);for(let e=0;e<this._pts.size();e++)t[e]=this._pts.get(e);this._ring=this._geometryFactory.createLinearRing(t),this._isHole=tt.A.isCCW(this._ring.getCoordinates())}isIsolated(){return 1===this._label.getGeometryCount()}computePoints(t){this._startDe=t;let e=t,s=!0;do{if(null===e)throw new K("Found null DirectedEdge");if(e.getEdgeRing()===this)throw new K("Directed Edge visited twice during ring-building at "+e.getCoordinate());this._edges.add(e);const t=e.getLabel();a.A.isTrue(t.isArea()),this.mergeLabel(t),this.addPoints(e.getEdge(),e.isForward(),s),s=!1,this.setEdgeRing(e,this),e=this.getNext(e)}while(e!==this._startDe)}getLinearRing(){return this._ring}getCoordinate(t){return this._pts.get(t)}computeMaxNodeDegree(){this._maxNodeDegree=0;let t=this._startDe;do{const e=t.getNode().getEdges().getOutgoingDegree(this);e>this._maxNodeDegree&&(this._maxNodeDegree=e),t=this.getNext(t)}while(t!==this._startDe);this._maxNodeDegree*=2}addPoints(t,e,s){const i=t.getCoordinates();if(e){let t=1;s&&(t=0);for(let e=t;e<i.length;e++)this._pts.add(i[e])}else{let t=i.length-2;s&&(t=i.length-1);for(let e=t;e>=0;e--)this._pts.add(i[e])}}containsPoint(t){const e=this.getLinearRing();if(!e.getEnvelopeInternal().contains(t))return!1;if(!me.isInRing(t,e.getCoordinates()))return!1;for(let e=this._holes.iterator();e.hasNext();)if(e.next().containsPoint(t))return!1;return!0}getMaxNodeDegree(){return this._maxNodeDegree<0&&this.computeMaxNodeDegree(),this._maxNodeDegree}setShell(t){this._shell=t,null!==t&&t.addHole(this)}toPolygon(t){const e=new Array(this._holes.size()).fill(null);for(let t=0;t<this._holes.size();t++)e[t]=this._holes.get(t).getLinearRing();return t.createPolygon(this.getLinearRing(),e)}isHole(){return this._isHole}setInResult(){let t=this._startDe;do{t.getEdge().setInResult(!0),t=t.getNext()}while(t!==this._startDe)}addHole(t){this._holes.add(t)}isShell(){return null===this._shell}getLabel(){return this._label}getEdges(){return this._edges}getShell(){return this._shell}mergeLabel(){if(1===arguments.length){const t=arguments[0];this.mergeLabel(t,0),this.mergeLabel(t,1)}else if(2===arguments.length){const t=arguments[1],e=arguments[0].getLocation(t,Qt.RIGHT);if(e===Ht.NONE)return null;if(this._label.getLocation(t)===Ht.NONE)return this._label.setLocation(t,e),null}}}class xe extends Ie{constructor(){super(),xe.constructor_.apply(this,arguments)}static constructor_(){const t=arguments[0],e=arguments[1];Ie.constructor_.call(this,t,e)}getNext(t){return t.getNextMin()}setEdgeRing(t,e){t.setMinEdgeRing(e)}}class Ee extends Ie{constructor(){super(),Ee.constructor_.apply(this,arguments)}static constructor_(){const t=arguments[0],e=arguments[1];Ie.constructor_.call(this,t,e)}linkDirectedEdgesForMinimalEdgeRings(){let t=this._startDe;do{t.getNode().getEdges().linkMinimalDirectedEdges(this),t=t.getNext()}while(t!==this._startDe)}buildMinimalRings(){const t=new g.A;let e=this._startDe;do{if(null===e.getMinEdgeRing()){const s=new xe(e,this._geometryFactory);t.add(s)}e=e.getNext()}while(e!==this._startDe);return t}getNext(t){return t.getNext()}setEdgeRing(t,e){t.setEdgeRing(e)}}class ye{constructor(){ye.constructor_.apply(this,arguments)}static constructor_(){this._geometryFactory=null,this._shellList=new g.A;const t=arguments[0];this._geometryFactory=t}static findEdgeRingContaining(t,e){const s=t.getLinearRing(),i=s.getEnvelopeInternal();let n=s.getCoordinateN(0),r=null,o=null;for(let t=e.iterator();t.hasNext();){const e=t.next(),a=e.getLinearRing(),h=a.getEnvelopeInternal();if(h.equals(i))continue;if(!h.contains(i))continue;n=H.A.ptNotInList(s.getCoordinates(),a.getCoordinates());let l=!1;me.isInRing(n,a.getCoordinates())&&(l=!0),l&&(null===r||o.contains(h))&&(r=e,o=r.getLinearRing().getEnvelopeInternal())}return r}sortShellsAndHoles(t,e,s){for(let i=t.iterator();i.hasNext();){const t=i.next();t.isHole()?s.add(t):e.add(t)}}computePolygons(t){const e=new g.A;for(let s=t.iterator();s.hasNext();){const t=s.next().toPolygon(this._geometryFactory);e.add(t)}return e}placeFreeHoles(t,e){for(let s=e.iterator();s.hasNext();){const e=s.next();if(null===e.getShell()){const s=ye.findEdgeRingContaining(e,t);if(null===s)throw new K("unable to assign hole to a shell",e.getCoordinate(0));e.setShell(s)}}}buildMinimalEdgeRings(t,e,s){const i=new g.A;for(let n=t.iterator();n.hasNext();){const t=n.next();if(t.getMaxNodeDegree()>2){t.linkDirectedEdgesForMinimalEdgeRings();const i=t.buildMinimalRings(),n=this.findShell(i);null!==n?(this.placePolygonHoles(n,i),e.add(n)):s.addAll(i)}else i.add(t)}return i}buildMaximalEdgeRings(t){const e=new g.A;for(let s=t.iterator();s.hasNext();){const t=s.next();if(t.isInResult()&&t.getLabel().isArea()&&null===t.getEdgeRing()){const s=new Ee(t,this._geometryFactory);e.add(s),s.setInResult()}}return e}placePolygonHoles(t,e){for(let s=e.iterator();s.hasNext();){const e=s.next();e.isHole()&&e.setShell(t)}}getPolygons(){return this.computePolygons(this._shellList)}findShell(t){let e=0,s=null;for(let i=t.iterator();i.hasNext();){const t=i.next();t.isHole()||(s=t,e++)}return a.A.isTrue(e<=1,"found two shells in MinimalEdgeRing list"),s}add(){if(1===arguments.length){const t=arguments[0];this.add(t.getEdgeEnds(),t.getNodes())}else if(2===arguments.length){const t=arguments[0],e=arguments[1];_e.linkResultDirectedEdges(e);const s=this.buildMaximalEdgeRings(t),i=new g.A,n=this.buildMinimalEdgeRings(s,this._shellList,i);this.sortShellsAndHoles(n,this._shellList,i),this.placeFreeHoles(this._shellList,i)}}}class Ne{constructor(){Ne.constructor_.apply(this,arguments)}static constructor_(){this._subgraphs=null,this._seg=new Ct;const t=arguments[0];this._subgraphs=t}findStabbedSegments(){if(1===arguments.length){const t=arguments[0],e=new g.A;for(let s=this._subgraphs.iterator();s.hasNext();){const i=s.next(),n=i.getEnvelope();t.y<n.getMinY()||t.y>n.getMaxY()||this.findStabbedSegments(t,i.getDirectedEdges(),e)}return e}if(3===arguments.length)if((0,n.A)(arguments[2],At.A)&&arguments[0]instanceof r.A&&arguments[1]instanceof ge){const t=arguments[0],e=arguments[1],s=arguments[2],i=e.getEdge().getCoordinates();for(let n=0;n<i.length-1;n++){if(this._seg.p0=i[n],this._seg.p1=i[n+1],this._seg.p0.y>this._seg.p1.y&&this._seg.reverse(),Math.max(this._seg.p0.x,this._seg.p1.x)<t.x)continue;if(this._seg.isHorizontal())continue;if(t.y<this._seg.p0.y||t.y>this._seg.p1.y)continue;if(tt.A.index(this._seg.p0,this._seg.p1,t)===tt.A.RIGHT)continue;let r=e.getDepth(Qt.LEFT);this._seg.p0.equals(i[n])||(r=e.getDepth(Qt.RIGHT));const o=new Ae(this._seg,r);s.add(o)}}else if((0,n.A)(arguments[2],At.A)&&arguments[0]instanceof r.A&&(0,n.A)(arguments[1],At.A)){const t=arguments[0],e=arguments[2];for(let s=arguments[1].iterator();s.hasNext();){const i=s.next();i.isForward()&&this.findStabbedSegments(t,i,e)}}}getDepth(t){const e=this.findStabbedSegments(t);return 0===e.size()?0:It.min(e)._leftDepth}}class Ae{constructor(){Ae.constructor_.apply(this,arguments)}static constructor_(){this._upwardSeg=null,this._leftDepth=null;const t=arguments[0],e=arguments[1];this._upwardSeg=new Ct(t),this._leftDepth=e}compareX(t,e){const s=t.p0.compareTo(e.p0);return 0!==s?s:t.p1.compareTo(e.p1)}toString(){return this._upwardSeg.toString()}compareTo(t){const e=t;if(this._upwardSeg.minX()>=e._upwardSeg.maxX())return 1;if(this._upwardSeg.maxX()<=e._upwardSeg.minX())return-1;let s=this._upwardSeg.orientationIndex(e._upwardSeg);return 0!==s?s:(s=-1*e._upwardSeg.orientationIndex(this._upwardSeg),0!==s?s:this._upwardSeg.compareTo(e._upwardSeg))}get interfaces_(){return[l.A]}}Ne.DepthSegment=Ae;var Re=s(6565),Le=s(2674),Se=s(4333),Te=s(3739),Oe=s(1362),Ce=s(2424);class we extends Bt.A{constructor(){super(),we.constructor_.apply(this,arguments)}static constructor_(){Bt.A.constructor_.call(this,"Projective point not representable on the Cartesian plane.")}}class be{constructor(){be.constructor_.apply(this,arguments)}static constructor_(){if(this.x=null,this.y=null,this.w=null,0===arguments.length)this.x=0,this.y=0,this.w=1;else if(1===arguments.length){const t=arguments[0];this.x=t.x,this.y=t.y,this.w=1}else if(2===arguments.length){if("number"==typeof arguments[0]&&"number"==typeof arguments[1]){const t=arguments[0],e=arguments[1];this.x=t,this.y=e,this.w=1}else if(arguments[0]instanceof be&&arguments[1]instanceof be){const t=arguments[0],e=arguments[1];this.x=t.y*e.w-e.y*t.w,this.y=e.x*t.w-t.x*e.w,this.w=t.x*e.y-e.x*t.y}else if(arguments[0]instanceof r.A&&arguments[1]instanceof r.A){const t=arguments[0],e=arguments[1];this.x=t.y-e.y,this.y=e.x-t.x,this.w=t.x*e.y-e.x*t.y}}else if(3===arguments.length){const t=arguments[0],e=arguments[1],s=arguments[2];this.x=t,this.y=e,this.w=s}else if(4===arguments.length){const t=arguments[0],e=arguments[1],s=arguments[2],i=arguments[3],n=t.y-e.y,r=e.x-t.x,o=t.x*e.y-e.x*t.y,a=s.y-i.y,h=i.x-s.x,l=s.x*i.y-i.x*s.y;this.x=r*l-h*o,this.y=a*o-n*l,this.w=n*h-a*r}}getCoordinate(){const t=new r.A;return t.x=this.getX(),t.y=this.getY(),t}getX(){const t=this.x/this.w;if(et.A.isNaN(t)||et.A.isInfinite(t))throw new we;return t}getY(){const t=this.y/this.w;if(et.A.isNaN(t)||et.A.isInfinite(t))throw new we;return t}}class Pe{constructor(){Pe.constructor_.apply(this,arguments)}static constructor_(){this.p0=null,this.p1=null,this.p2=null;const t=arguments[0],e=arguments[1],s=arguments[2];this.p0=t,this.p1=e,this.p2=s}static isAcute(t,e,s){return!!se.isAcute(t,e,s)&&!!se.isAcute(e,s,t)&&!!se.isAcute(s,t,e)}static circumcentre(t,e,s){const i=s.x,n=s.y,o=t.x-i,a=t.y-n,h=e.x-i,l=e.y-n,c=2*Pe.det(o,a,h,l),u=i-Pe.det(a,o*o+a*a,l,h*h+l*l)/c,d=n+Pe.det(o,o*o+a*a,h,h*h+l*l)/c;return new r.A(u,d)}static perpendicularBisector(t,e){const s=e.x-t.x,i=e.y-t.y,n=new be(t.x+s/2,t.y+i/2,1),r=new be(t.x-i+s/2,t.y+s+i/2,1);return new be(n,r)}static angleBisector(t,e,s){const i=e.distance(t),n=i/(i+e.distance(s)),o=s.x-t.x,a=s.y-t.y;return new r.A(t.x+n*o,t.y+n*a)}static inCentre(t,e,s){const i=e.distance(s),n=t.distance(s),o=t.distance(e),a=i+n+o,h=(i*t.x+n*e.x+o*s.x)/a,l=(i*t.y+n*e.y+o*s.y)/a;return new r.A(h,l)}static area(t,e,s){return Math.abs(((s.x-t.x)*(e.y-t.y)-(e.x-t.x)*(s.y-t.y))/2)}static signedArea(t,e,s){return((s.x-t.x)*(e.y-t.y)-(e.x-t.x)*(s.y-t.y))/2}static det(t,e,s,i){return t*i-e*s}static interpolateZ(t,e,s,i){const n=e.x,r=e.y,o=s.x-n,a=i.x-n,h=s.y-r,l=i.y-r,c=o*l-a*h,u=t.x-n,d=t.y-r,g=(l*u-a*d)/c,_=(-h*u+o*d)/c;return e.getZ()+g*(s.getZ()-e.getZ())+_*(i.getZ()-e.getZ())}static longestSideLength(t,e,s){const i=t.distance(e),n=e.distance(s),r=s.distance(t);let o=i;return n>o&&(o=n),r>o&&(o=r),o}static circumcentreDD(t,e,s){const i=Ce.A.valueOf(t.x).subtract(s.x),n=Ce.A.valueOf(t.y).subtract(s.y),o=Ce.A.valueOf(e.x).subtract(s.x),a=Ce.A.valueOf(e.y).subtract(s.y),h=Ce.A.determinant(i,n,o,a).multiply(2),l=i.sqr().add(n.sqr()),c=o.sqr().add(a.sqr()),u=Ce.A.determinant(n,l,a,c),d=Ce.A.determinant(i,l,o,c),g=Ce.A.valueOf(s.x).subtract(u.divide(h)).doubleValue(),_=Ce.A.valueOf(s.y).add(d.divide(h)).doubleValue();return new r.A(g,_)}static area3D(t,e,s){const i=e.x-t.x,n=e.y-t.y,r=e.getZ()-t.getZ(),o=s.x-t.x,a=s.y-t.y,h=s.getZ()-t.getZ(),l=n*h-r*a,c=r*o-i*h,u=i*a-n*o,d=l*l+c*c+u*u;return Math.sqrt(d)/2}static centroid(t,e,s){const i=(t.x+e.x+s.x)/3,n=(t.y+e.y+s.y)/3;return new r.A(i,n)}interpolateZ(t){if(null===t)throw new U.A("Supplied point is null.");return Pe.interpolateZ(t,this.p0,this.p1,this.p2)}longestSideLength(){return Pe.longestSideLength(this.p0,this.p1,this.p2)}isAcute(){return Pe.isAcute(this.p0,this.p1,this.p2)}circumcentre(){return Pe.circumcentre(this.p0,this.p1,this.p2)}inCentre(){return Pe.inCentre(this.p0,this.p1,this.p2)}area(){return Pe.area(this.p0,this.p1,this.p2)}signedArea(){return Pe.signedArea(this.p0,this.p1,this.p2)}area3D(){return Pe.area3D(this.p0,this.p1,this.p2)}centroid(){return Pe.centroid(this.p0,this.p1,this.p2)}}var De=s(8801),Me=s(7739),ve=s(1523);class Fe{constructor(){Fe.constructor_.apply(this,arguments)}static constructor_(){this._inputGeom=null,this._distance=null,this._curveBuilder=null,this._curveList=new g.A;const t=arguments[0],e=arguments[1],s=arguments[2];this._inputGeom=t,this._distance=e,this._curveBuilder=s}addRingSide(t,e,s,i,n){if(0===e&&t.length<Se.A.MINIMUM_VALID_SIZE)return null;let r=i,o=n;t.length>=Se.A.MINIMUM_VALID_SIZE&&tt.A.isCCW(t)&&(r=n,o=i,s=Qt.opposite(s));const a=this._curveBuilder.getRingCurve(t,s,e);this.addCurve(a,r,o)}addRingBothSides(t,e){this.addRingSide(t,e,Qt.LEFT,Ht.EXTERIOR,Ht.INTERIOR),this.addRingSide(t,e,Qt.RIGHT,Ht.INTERIOR,Ht.EXTERIOR)}addPoint(t){if(this._distance<=0)return null;const e=t.getCoordinates(),s=this._curveBuilder.getLineCurve(e,this._distance);this.addCurve(s,Ht.EXTERIOR,Ht.INTERIOR)}addPolygon(t){let e=this._distance,s=Qt.LEFT;this._distance<0&&(e=-this._distance,s=Qt.RIGHT);const i=t.getExteriorRing(),n=H.A.removeRepeatedPoints(i.getCoordinates());if(this._distance<0&&this.isErodedCompletely(i,this._distance))return null;if(this._distance<=0&&n.length<3)return null;this.addRingSide(n,e,s,Ht.EXTERIOR,Ht.INTERIOR);for(let i=0;i<t.getNumInteriorRing();i++){const n=t.getInteriorRingN(i),r=H.A.removeRepeatedPoints(n.getCoordinates());this._distance>0&&this.isErodedCompletely(n,-this._distance)||this.addRingSide(r,e,Qt.opposite(s),Ht.INTERIOR,Ht.EXTERIOR)}}isTriangleErodedCompletely(t,e){const s=new Pe(t[0],t[1],t[2]),i=s.inCentre();return nt.pointToSegment(i,s.p0,s.p1)<Math.abs(e)}addLineString(t){if(this._curveBuilder.isLineOffsetEmpty(this._distance))return null;const e=H.A.removeRepeatedPoints(t.getCoordinates());if(H.A.isRing(e)&&!this._curveBuilder.getBufferParameters().isSingleSided())this.addRingBothSides(e,this._distance);else{const t=this._curveBuilder.getLineCurve(e,this._distance);this.addCurve(t,Ht.EXTERIOR,Ht.INTERIOR)}}add(t){if(t.isEmpty())return null;if(t instanceof De.A)this.addPolygon(t);else if(t instanceof Re.A)this.addLineString(t);else if(t instanceof Le.A)this.addPoint(t);else if(t instanceof Me.A)this.addCollection(t);else if(t instanceof Oe.A)this.addCollection(t);else if(t instanceof Te.A)this.addCollection(t);else{if(!(t instanceof ve.A))throw new d.A(t.getGeometryType());this.addCollection(t)}}addCurve(t,e,s){if(null===t||t.length<2)return null;const i=new Y(t,new ae(0,Ht.BOUNDARY,e,s));this._curveList.add(i)}getCurves(){return this.add(this._inputGeom),this._curveList}isErodedCompletely(t,e){const s=t.getCoordinates();if(s.length<4)return e<0;if(4===s.length)return this.isTriangleErodedCompletely(s,e);const i=t.getEnvelopeInternal(),n=Math.min(i.getHeight(),i.getWidth());return e<0&&2*Math.abs(e)>n}addCollection(t){for(let e=0;e<t.getNumGeometries();e++){const s=t.getGeometryN(e);this.add(s)}}}class Ge{locate(t){}}class Be{hasNext(){}next(){}remove(){}}var qe=s(2395);class Ue{constructor(){Ue.constructor_.apply(this,arguments)}static constructor_(){this._parent=null,this._atStart=null,this._max=null,this._index=null,this._subcollectionIterator=null;const t=arguments[0];this._parent=t,this._atStart=!0,this._index=0,this._max=t.getNumGeometries()}static isAtomic(t){return!(t instanceof ve.A)}next(){if(this._atStart)return this._atStart=!1,Ue.isAtomic(this._parent)&&this._index++,this._parent;if(null!==this._subcollectionIterator){if(this._subcollectionIterator.hasNext())return this._subcollectionIterator.next();this._subcollectionIterator=null}if(this._index>=this._max)throw new qe.A;const t=this._parent.getGeometryN(this._index++);return t instanceof ve.A?(this._subcollectionIterator=new Ue(t),this._subcollectionIterator.next()):t}hasNext(){if(this._atStart)return!0;if(null!==this._subcollectionIterator){if(this._subcollectionIterator.hasNext())return!0;this._subcollectionIterator=null}return!(this._index>=this._max)}remove(){throw new d.A(this.getClass().getName())}get interfaces_(){return[Be]}}class ze{constructor(){ze.constructor_.apply(this,arguments)}static constructor_(){this._geom=null;const t=arguments[0];this._geom=t}static locatePointInPolygon(t,e){if(e.isEmpty())return Ht.EXTERIOR;const s=e.getExteriorRing(),i=ze.locatePointInRing(t,s);if(i!==Ht.INTERIOR)return i;for(let s=0;s<e.getNumInteriorRing();s++){const i=e.getInteriorRingN(s),n=ze.locatePointInRing(t,i);if(n===Ht.BOUNDARY)return Ht.BOUNDARY;if(n===Ht.INTERIOR)return Ht.EXTERIOR}return Ht.INTERIOR}static locatePointInRing(t,e){return e.getEnvelopeInternal().intersects(t)?me.locateInRing(t,e.getCoordinates()):Ht.EXTERIOR}static isContained(t,e){return Ht.EXTERIOR!==ze.locate(t,e)}static locate(t,e){return e.isEmpty()?Ht.EXTERIOR:e.getEnvelopeInternal().intersects(t)?ze.locateInGeometry(t,e):Ht.EXTERIOR}static containsPointInPolygon(t,e){return Ht.EXTERIOR!==ze.locatePointInPolygon(t,e)}static locateInGeometry(t,e){if(e instanceof De.A)return ze.locatePointInPolygon(t,e);if(e instanceof ve.A){const s=new Ue(e);for(;s.hasNext();){const i=s.next();if(i!==e){const e=ze.locateInGeometry(t,i);if(e!==Ht.EXTERIOR)return e}}}return Ht.EXTERIOR}locate(t){return ze.locate(t,this._geom)}get interfaces_(){return[Ge]}}class Xe{constructor(){Xe.constructor_.apply(this,arguments)}static constructor_(){this._edgeMap=new N,this._edgeList=null,this._ptInAreaLocation=[Ht.NONE,Ht.NONE]}getNextCW(t){this.getEdges();const e=this._edgeList.indexOf(t);let s=e-1;return 0===e&&(s=this._edgeList.size()-1),this._edgeList.get(s)}propagateSideLabels(t){let e=Ht.NONE;for(let s=this.iterator();s.hasNext();){const i=s.next().getLabel();i.isArea(t)&&i.getLocation(t,Qt.LEFT)!==Ht.NONE&&(e=i.getLocation(t,Qt.LEFT))}if(e===Ht.NONE)return null;let s=e;for(let e=this.iterator();e.hasNext();){const i=e.next(),n=i.getLabel();if(n.getLocation(t,Qt.ON)===Ht.NONE&&n.setLocation(t,Qt.ON,s),n.isArea(t)){const e=n.getLocation(t,Qt.LEFT),r=n.getLocation(t,Qt.RIGHT);if(r!==Ht.NONE){if(r!==s)throw new K("side location conflict",i.getCoordinate());e===Ht.NONE&&a.A.shouldNeverReachHere("found single null side (at "+i.getCoordinate()+")"),s=e}else a.A.isTrue(n.getLocation(t,Qt.LEFT)===Ht.NONE,"found single null side"),n.setLocation(t,Qt.RIGHT,s),n.setLocation(t,Qt.LEFT,s)}}}getCoordinate(){const t=this.iterator();return t.hasNext()?t.next().getCoordinate():null}checkAreaLabelsConsistent(t){const e=this.getEdges();if(e.size()<=0)return!0;const s=e.size()-1,i=e.get(s).getLabel().getLocation(t,Qt.LEFT);a.A.isTrue(i!==Ht.NONE,"Found unlabelled area edge");let n=i;for(let e=this.iterator();e.hasNext();){const s=e.next().getLabel();a.A.isTrue(s.isArea(t),"Found non-area edge");const i=s.getLocation(t,Qt.LEFT),r=s.getLocation(t,Qt.RIGHT);if(i===r)return!1;if(r!==n)return!1;n=i}return!0}findIndex(t){this.iterator();for(let e=0;e<this._edgeList.size();e++)if(this._edgeList.get(e)===t)return e;return-1}iterator(){return this.getEdges().iterator()}getEdges(){return null===this._edgeList&&(this._edgeList=new g.A(this._edgeMap.values())),this._edgeList}getLocation(t,e,s){return this._ptInAreaLocation[t]===Ht.NONE&&(this._ptInAreaLocation[t]=ze.locate(e,s[t].getGeometry())),this._ptInAreaLocation[t]}toString(){const t=new re.A;t.append("EdgeEndStar:   "+this.getCoordinate()),t.append("\n");for(let e=this.iterator();e.hasNext();){const s=e.next();t.append(s),t.append("\n")}return t.toString()}computeEdgeEndLabels(t){for(let e=this.iterator();e.hasNext();)e.next().computeLabel(t)}computeLabelling(t){this.computeEdgeEndLabels(t[0].getBoundaryNodeRule()),this.propagateSideLabels(0),this.propagateSideLabels(1);const e=[!1,!1];for(let t=this.iterator();t.hasNext();){const s=t.next().getLabel();for(let t=0;t<2;t++)s.isLine(t)&&s.getLocation(t)===Ht.BOUNDARY&&(e[t]=!0)}for(let s=this.iterator();s.hasNext();){const i=s.next(),n=i.getLabel();for(let s=0;s<2;s++)if(n.isAnyNull(s)){let r=Ht.NONE;if(e[s])r=Ht.EXTERIOR;else{const e=i.getCoordinate();r=this.getLocation(s,e,t)}n.setAllLocationsIfNull(s,r)}}}getDegree(){return this._edgeMap.size()}insertEdgeEnd(t,e){this._edgeMap.put(t,e),this._edgeList=null}print(t){V.A.out.println("EdgeEndStar:   "+this.getCoordinate());for(let e=this.iterator();e.hasNext();)e.next().print(t)}isAreaLabelsConsistent(t){return this.computeEdgeEndLabels(t.getBoundaryNodeRule()),this.checkAreaLabelsConsistent(0)}}class ke extends Xe{constructor(){super(),ke.constructor_.apply(this,arguments)}static constructor_(){this._resultAreaEdgeList=null,this._label=null,this._SCANNING_FOR_INCOMING=1,this._LINKING_TO_OUTGOING=2}linkResultDirectedEdges(){this.getResultAreaEdges();let t=null,e=null,s=this._SCANNING_FOR_INCOMING;for(let i=0;i<this._resultAreaEdgeList.size();i++){const n=this._resultAreaEdgeList.get(i),r=n.getSym();if(n.getLabel().isArea())switch(null===t&&n.isInResult()&&(t=n),s){case this._SCANNING_FOR_INCOMING:if(!r.isInResult())continue;e=r,s=this._LINKING_TO_OUTGOING;break;case this._LINKING_TO_OUTGOING:if(!n.isInResult())continue;e.setNext(n),s=this._SCANNING_FOR_INCOMING}}if(s===this._LINKING_TO_OUTGOING){if(null===t)throw new K("no outgoing dirEdge found",this.getCoordinate());a.A.isTrue(t.isInResult(),"unable to link last incoming dirEdge"),e.setNext(t)}}insert(t){const e=t;this.insertEdgeEnd(e,e)}getRightmostEdge(){const t=this.getEdges(),e=t.size();if(e<1)return null;const s=t.get(0);if(1===e)return s;const i=t.get(e-1),n=s.getQuadrant(),r=i.getQuadrant();return Pt.isNorthern(n)&&Pt.isNorthern(r)?s:Pt.isNorthern(n)||Pt.isNorthern(r)?0!==s.getDy()?s:0!==i.getDy()?i:(a.A.shouldNeverReachHere("found two horizontal edges incident on node"),null):i}updateLabelling(t){for(let e=this.iterator();e.hasNext();){const s=e.next().getLabel();s.setAllLocationsIfNull(0,t.getLocation(0)),s.setAllLocationsIfNull(1,t.getLocation(1))}}linkAllDirectedEdges(){this.getEdges();let t=null,e=null;for(let s=this._edgeList.size()-1;s>=0;s--){const i=this._edgeList.get(s),n=i.getSym();null===e&&(e=n),null!==t&&n.setNext(t),t=i}e.setNext(t)}computeDepths(){if(1===arguments.length){const t=arguments[0],e=this.findIndex(t),s=t.getDepth(Qt.LEFT),i=t.getDepth(Qt.RIGHT),n=this.computeDepths(e+1,this._edgeList.size(),s);if(this.computeDepths(0,e,n)!==i)throw new K("depth mismatch at "+t.getCoordinate())}else if(3===arguments.length){const t=arguments[1];let e=arguments[2];for(let s=arguments[0];s<t;s++){const t=this._edgeList.get(s);t.setEdgeDepths(Qt.RIGHT,e),e=t.getDepth(Qt.LEFT)}return e}}mergeSymLabels(){for(let t=this.iterator();t.hasNext();){const e=t.next();e.getLabel().merge(e.getSym().getLabel())}}linkMinimalDirectedEdges(t){let e=null,s=null,i=this._SCANNING_FOR_INCOMING;for(let n=this._resultAreaEdgeList.size()-1;n>=0;n--){const r=this._resultAreaEdgeList.get(n),o=r.getSym();switch(null===e&&r.getEdgeRing()===t&&(e=r),i){case this._SCANNING_FOR_INCOMING:if(o.getEdgeRing()!==t)continue;s=o,i=this._LINKING_TO_OUTGOING;break;case this._LINKING_TO_OUTGOING:if(r.getEdgeRing()!==t)continue;s.setNextMin(r),i=this._SCANNING_FOR_INCOMING}}i===this._LINKING_TO_OUTGOING&&(a.A.isTrue(null!==e,"found null for first outgoing dirEdge"),a.A.isTrue(e.getEdgeRing()===t,"unable to link last incoming dirEdge"),s.setNextMin(e))}getOutgoingDegree(){if(0===arguments.length){let t=0;for(let e=this.iterator();e.hasNext();)e.next().isInResult()&&t++;return t}if(1===arguments.length){const t=arguments[0];let e=0;for(let s=this.iterator();s.hasNext();)s.next().getEdgeRing()===t&&e++;return e}}getLabel(){return this._label}findCoveredLineEdges(){let t=Ht.NONE;for(let e=this.iterator();e.hasNext();){const s=e.next(),i=s.getSym();if(!s.isLineEdge()){if(s.isInResult()){t=Ht.INTERIOR;break}if(i.isInResult()){t=Ht.EXTERIOR;break}}}if(t===Ht.NONE)return null;let e=t;for(let t=this.iterator();t.hasNext();){const s=t.next(),i=s.getSym();s.isLineEdge()?s.getEdge().setCovered(e===Ht.INTERIOR):(s.isInResult()&&(e=Ht.EXTERIOR),i.isInResult()&&(e=Ht.INTERIOR))}}computeLabelling(t){super.computeLabelling.call(this,t),this._label=new ae(Ht.NONE);for(let t=this.iterator();t.hasNext();){const e=t.next().getEdge().getLabel();for(let t=0;t<2;t++){const s=e.getLocation(t);s!==Ht.INTERIOR&&s!==Ht.BOUNDARY||this._label.setLocation(t,Ht.INTERIOR)}}}print(t){V.A.out.println("DirectedEdgeStar: "+this.getCoordinate());for(let e=this.iterator();e.hasNext();){const s=e.next();t.print("out "),s.print(t),t.println(),t.print("in "),s.getSym().print(t),t.println()}}getResultAreaEdges(){if(null!==this._resultAreaEdgeList)return this._resultAreaEdgeList;this._resultAreaEdgeList=new g.A;for(let t=this.iterator();t.hasNext();){const e=t.next();(e.isInResult()||e.getSym().isInResult())&&this._resultAreaEdgeList.add(e)}return this._resultAreaEdgeList}}class Ye extends ue{constructor(){super()}createNode(t){return new le(t,new ke)}}class Ve{constructor(){Ve.constructor_.apply(this,arguments)}static constructor_(){this._pts=null,this._orientation=null;const t=arguments[0];this._pts=t,this._orientation=Ve.orientation(t)}static orientation(t){return 1===H.A.increasingDirection(t)}static compareOriented(t,e,s,i){const n=e?1:-1,r=i?1:-1,o=e?t.length:-1,a=i?s.length:-1;let h=e?0:t.length-1,l=i?0:s.length-1;for(;;){const e=t[h].compareTo(s[l]);if(0!==e)return e;h+=n,l+=r;const i=h===o,c=l===a;if(i&&!c)return-1;if(!i&&c)return 1;if(i&&c)return 0}}compareTo(t){const e=t;return Ve.compareOriented(this._pts,this._orientation,e._pts,e._orientation)}get interfaces_(){return[l.A]}}class He{constructor(){He.constructor_.apply(this,arguments)}static constructor_(){this._edges=new g.A,this._ocaMap=new N}print(t){t.print("MULTILINESTRING ( ");for(let e=0;e<this._edges.size();e++){const s=this._edges.get(e);e>0&&t.print(","),t.print("(");const i=s.getCoordinates();for(let e=0;e<i.length;e++)e>0&&t.print(","),t.print(i[e].x+" "+i[e].y);t.println(")")}t.print(")  ")}addAll(t){for(let e=t.iterator();e.hasNext();)this.add(e.next())}findEdgeIndex(t){for(let e=0;e<this._edges.size();e++)if(this._edges.get(e).equals(t))return e;return-1}iterator(){return this._edges.iterator()}getEdges(){return this._edges}get(t){return this._edges.get(t)}findEqualEdge(t){const e=new Ve(t.getCoordinates());return this._ocaMap.get(e)}add(t){this._edges.add(t);const e=new Ve(t.getCoordinates());this._ocaMap.put(e,t)}}class Qe{constructor(){Qe.constructor_.apply(this,arguments)}static constructor_(){this._hasIntersection=!1,this._hasProper=!1,this._hasProperInterior=!1,this._hasInterior=!1,this._properIntersectionPoint=null,this._li=null,this._isSelfIntersection=null,this.numIntersections=0,this.numInteriorIntersections=0,this.numProperIntersections=0,this.numTests=0;const t=arguments[0];this._li=t}static isAdjacentSegments(t,e){return 1===Math.abs(t-e)}isTrivialIntersection(t,e,s,i){if(t===s&&1===this._li.getIntersectionNum()){if(Qe.isAdjacentSegments(e,i))return!0;if(t.isClosed()){const s=t.size()-1;if(0===e&&i===s||0===i&&e===s)return!0}}return!1}getProperIntersectionPoint(){return this._properIntersectionPoint}hasProperInteriorIntersection(){return this._hasProperInterior}getLineIntersector(){return this._li}hasProperIntersection(){return this._hasProper}processIntersections(t,e,s,i){if(t===s&&e===i)return null;this.numTests++;const n=t.getCoordinates()[e],r=t.getCoordinates()[e+1],o=s.getCoordinates()[i],a=s.getCoordinates()[i+1];this._li.computeIntersection(n,r,o,a),this._li.hasIntersection()&&(this.numIntersections++,this._li.isInteriorIntersection()&&(this.numInteriorIntersections++,this._hasInterior=!0),this.isTrivialIntersection(t,e,s,i)||(this._hasIntersection=!0,t.addIntersections(this._li,e,0),s.addIntersections(this._li,i,1),this._li.isProper()&&(this.numProperIntersections++,this._hasProper=!0,this._hasProperInterior=!0)))}hasIntersection(){return this._hasIntersection}isDone(){return!1}hasInteriorIntersection(){return this._hasInterior}get interfaces_(){return[Xt]}}class je{constructor(){je.constructor_.apply(this,arguments)}static constructor_(){this.coord=null,this.segmentIndex=null,this.dist=null;const t=arguments[0],e=arguments[1],s=arguments[2];this.coord=new r.A(t),this.segmentIndex=e,this.dist=s}getSegmentIndex(){return this.segmentIndex}getCoordinate(){return this.coord}print(t){t.print(this.coord),t.print(" seg # = "+this.segmentIndex),t.println(" dist = "+this.dist)}compareTo(t){const e=t;return this.compare(e.segmentIndex,e.dist)}isEndPoint(t){return 0===this.segmentIndex&&0===this.dist||this.segmentIndex===t}toString(){return this.coord+" seg # = "+this.segmentIndex+" dist = "+this.dist}getDistance(){return this.dist}compare(t,e){return this.segmentIndex<t?-1:this.segmentIndex>t?1:this.dist<e?-1:this.dist>e?1:0}get interfaces_(){return[l.A]}}class We{constructor(){We.constructor_.apply(this,arguments)}static constructor_(){this._nodeMap=new N,this.edge=null;const t=arguments[0];this.edge=t}print(t){t.println("Intersections:");for(let e=this.iterator();e.hasNext();)e.next().print(t)}addEndpoints(){const t=this.edge.pts.length-1;this.add(this.edge.pts[0],0,0),this.add(this.edge.pts[t],t,0)}createSplitEdge(t,e){let s=e.segmentIndex-t.segmentIndex+2;const i=this.edge.pts[e.segmentIndex],n=e.dist>0||!e.coord.equals2D(i);n||s--;const o=new Array(s).fill(null);let a=0;o[a++]=new r.A(t.coord);for(let s=t.segmentIndex+1;s<=e.segmentIndex;s++)o[a++]=this.edge.pts[s];return n&&(o[a]=e.coord),new is(o,new ae(this.edge._label))}add(t,e,s){const i=new je(t,e,s),n=this._nodeMap.get(i);return null!==n?n:(this._nodeMap.put(i,i),i)}isIntersection(t){for(let e=this.iterator();e.hasNext();)if(e.next().coord.equals(t))return!0;return!1}iterator(){return this._nodeMap.values().iterator()}addSplitEdges(t){this.addEndpoints();const e=this.iterator();let s=e.next();for(;e.hasNext();){const i=e.next(),n=this.createSplitEdge(s,i);t.add(n),s=i}}}var Ke=s(5656),Je=s(7569);class Ze{constructor(){Ze.constructor_.apply(this,arguments)}static constructor_(){if(this._matrix=null,0===arguments.length)this._matrix=Array(3).fill().map((()=>Array(3))),this.setAll(Ke.A.FALSE);else if(1===arguments.length)if("string"==typeof arguments[0]){const t=arguments[0];Ze.constructor_.call(this),this.set(t)}else if(arguments[0]instanceof Ze){const t=arguments[0];Ze.constructor_.call(this),this._matrix[Ht.INTERIOR][Ht.INTERIOR]=t._matrix[Ht.INTERIOR][Ht.INTERIOR],this._matrix[Ht.INTERIOR][Ht.BOUNDARY]=t._matrix[Ht.INTERIOR][Ht.BOUNDARY],this._matrix[Ht.INTERIOR][Ht.EXTERIOR]=t._matrix[Ht.INTERIOR][Ht.EXTERIOR],this._matrix[Ht.BOUNDARY][Ht.INTERIOR]=t._matrix[Ht.BOUNDARY][Ht.INTERIOR],this._matrix[Ht.BOUNDARY][Ht.BOUNDARY]=t._matrix[Ht.BOUNDARY][Ht.BOUNDARY],this._matrix[Ht.BOUNDARY][Ht.EXTERIOR]=t._matrix[Ht.BOUNDARY][Ht.EXTERIOR],this._matrix[Ht.EXTERIOR][Ht.INTERIOR]=t._matrix[Ht.EXTERIOR][Ht.INTERIOR],this._matrix[Ht.EXTERIOR][Ht.BOUNDARY]=t._matrix[Ht.EXTERIOR][Ht.BOUNDARY],this._matrix[Ht.EXTERIOR][Ht.EXTERIOR]=t._matrix[Ht.EXTERIOR][Ht.EXTERIOR]}}static isTrue(t){return t>=0||t===Ke.A.TRUE}static matches(){if(Number.isInteger(arguments[0])&&"string"==typeof arguments[1]){const t=arguments[0],e=arguments[1];return e===Ke.A.SYM_DONTCARE||e===Ke.A.SYM_TRUE&&(t>=0||t===Ke.A.TRUE)||e===Ke.A.SYM_FALSE&&t===Ke.A.FALSE||e===Ke.A.SYM_P&&t===Ke.A.P||e===Ke.A.SYM_L&&t===Ke.A.L||e===Ke.A.SYM_A&&t===Ke.A.A}if("string"==typeof arguments[0]&&"string"==typeof arguments[1]){const t=arguments[1];return new Ze(arguments[0]).matches(t)}}isIntersects(){return!this.isDisjoint()}set(){if(1===arguments.length){const t=arguments[0];for(let e=0;e<t.length;e++){const s=Math.trunc(e/3),i=e%3;this._matrix[s][i]=Ke.A.toDimensionValue(t.charAt(e))}}else if(3===arguments.length){const t=arguments[0],e=arguments[1],s=arguments[2];this._matrix[t][e]=s}}isContains(){return Ze.isTrue(this._matrix[Ht.INTERIOR][Ht.INTERIOR])&&this._matrix[Ht.EXTERIOR][Ht.INTERIOR]===Ke.A.FALSE&&this._matrix[Ht.EXTERIOR][Ht.BOUNDARY]===Ke.A.FALSE}isWithin(){return Ze.isTrue(this._matrix[Ht.INTERIOR][Ht.INTERIOR])&&this._matrix[Ht.INTERIOR][Ht.EXTERIOR]===Ke.A.FALSE&&this._matrix[Ht.BOUNDARY][Ht.EXTERIOR]===Ke.A.FALSE}isTouches(t,e){return t>e?this.isTouches(e,t):(t===Ke.A.A&&e===Ke.A.A||t===Ke.A.L&&e===Ke.A.L||t===Ke.A.L&&e===Ke.A.A||t===Ke.A.P&&e===Ke.A.A||t===Ke.A.P&&e===Ke.A.L)&&this._matrix[Ht.INTERIOR][Ht.INTERIOR]===Ke.A.FALSE&&(Ze.isTrue(this._matrix[Ht.INTERIOR][Ht.BOUNDARY])||Ze.isTrue(this._matrix[Ht.BOUNDARY][Ht.INTERIOR])||Ze.isTrue(this._matrix[Ht.BOUNDARY][Ht.BOUNDARY]))}isOverlaps(t,e){return t===Ke.A.P&&e===Ke.A.P||t===Ke.A.A&&e===Ke.A.A?Ze.isTrue(this._matrix[Ht.INTERIOR][Ht.INTERIOR])&&Ze.isTrue(this._matrix[Ht.INTERIOR][Ht.EXTERIOR])&&Ze.isTrue(this._matrix[Ht.EXTERIOR][Ht.INTERIOR]):t===Ke.A.L&&e===Ke.A.L&&1===this._matrix[Ht.INTERIOR][Ht.INTERIOR]&&Ze.isTrue(this._matrix[Ht.INTERIOR][Ht.EXTERIOR])&&Ze.isTrue(this._matrix[Ht.EXTERIOR][Ht.INTERIOR])}isEquals(t,e){return t===e&&Ze.isTrue(this._matrix[Ht.INTERIOR][Ht.INTERIOR])&&this._matrix[Ht.INTERIOR][Ht.EXTERIOR]===Ke.A.FALSE&&this._matrix[Ht.BOUNDARY][Ht.EXTERIOR]===Ke.A.FALSE&&this._matrix[Ht.EXTERIOR][Ht.INTERIOR]===Ke.A.FALSE&&this._matrix[Ht.EXTERIOR][Ht.BOUNDARY]===Ke.A.FALSE}matches(t){if(9!==t.length)throw new U.A("Should be length 9: "+t);for(let e=0;e<3;e++)for(let s=0;s<3;s++)if(!Ze.matches(this._matrix[e][s],t.charAt(3*e+s)))return!1;return!0}add(t){for(let e=0;e<3;e++)for(let s=0;s<3;s++)this.setAtLeast(e,s,t.get(e,s))}isDisjoint(){return this._matrix[Ht.INTERIOR][Ht.INTERIOR]===Ke.A.FALSE&&this._matrix[Ht.INTERIOR][Ht.BOUNDARY]===Ke.A.FALSE&&this._matrix[Ht.BOUNDARY][Ht.INTERIOR]===Ke.A.FALSE&&this._matrix[Ht.BOUNDARY][Ht.BOUNDARY]===Ke.A.FALSE}isCrosses(t,e){return t===Ke.A.P&&e===Ke.A.L||t===Ke.A.P&&e===Ke.A.A||t===Ke.A.L&&e===Ke.A.A?Ze.isTrue(this._matrix[Ht.INTERIOR][Ht.INTERIOR])&&Ze.isTrue(this._matrix[Ht.INTERIOR][Ht.EXTERIOR]):t===Ke.A.L&&e===Ke.A.P||t===Ke.A.A&&e===Ke.A.P||t===Ke.A.A&&e===Ke.A.L?Ze.isTrue(this._matrix[Ht.INTERIOR][Ht.INTERIOR])&&Ze.isTrue(this._matrix[Ht.EXTERIOR][Ht.INTERIOR]):t===Ke.A.L&&e===Ke.A.L&&0===this._matrix[Ht.INTERIOR][Ht.INTERIOR]}isCovers(){return(Ze.isTrue(this._matrix[Ht.INTERIOR][Ht.INTERIOR])||Ze.isTrue(this._matrix[Ht.INTERIOR][Ht.BOUNDARY])||Ze.isTrue(this._matrix[Ht.BOUNDARY][Ht.INTERIOR])||Ze.isTrue(this._matrix[Ht.BOUNDARY][Ht.BOUNDARY]))&&this._matrix[Ht.EXTERIOR][Ht.INTERIOR]===Ke.A.FALSE&&this._matrix[Ht.EXTERIOR][Ht.BOUNDARY]===Ke.A.FALSE}isCoveredBy(){return(Ze.isTrue(this._matrix[Ht.INTERIOR][Ht.INTERIOR])||Ze.isTrue(this._matrix[Ht.INTERIOR][Ht.BOUNDARY])||Ze.isTrue(this._matrix[Ht.BOUNDARY][Ht.INTERIOR])||Ze.isTrue(this._matrix[Ht.BOUNDARY][Ht.BOUNDARY]))&&this._matrix[Ht.INTERIOR][Ht.EXTERIOR]===Ke.A.FALSE&&this._matrix[Ht.BOUNDARY][Ht.EXTERIOR]===Ke.A.FALSE}setAtLeast(){if(1===arguments.length){const t=arguments[0];for(let e=0;e<t.length;e++){const s=Math.trunc(e/3),i=e%3;this.setAtLeast(s,i,Ke.A.toDimensionValue(t.charAt(e)))}}else if(3===arguments.length){const t=arguments[0],e=arguments[1],s=arguments[2];this._matrix[t][e]<s&&(this._matrix[t][e]=s)}}setAtLeastIfValid(t,e,s){t>=0&&e>=0&&this.setAtLeast(t,e,s)}toString(){const t=new rt.A("123456789");for(let e=0;e<3;e++)for(let s=0;s<3;s++)t.setCharAt(3*e+s,Ke.A.toDimensionSymbol(this._matrix[e][s]));return t.toString()}setAll(t){for(let e=0;e<3;e++)for(let s=0;s<3;s++)this._matrix[e][s]=t}get(t,e){return this._matrix[t][e]}transpose(){let t=this._matrix[1][0];return this._matrix[1][0]=this._matrix[0][1],this._matrix[0][1]=t,t=this._matrix[2][0],this._matrix[2][0]=this._matrix[0][2],this._matrix[0][2]=t,t=this._matrix[2][1],this._matrix[2][1]=this._matrix[1][2],this._matrix[1][2]=t,this}get interfaces_(){return[Je.A]}}class $e{constructor(){$e.constructor_.apply(this,arguments)}static constructor_(){this._depth=Array(2).fill().map((()=>Array(3)));for(let t=0;t<2;t++)for(let e=0;e<3;e++)this._depth[t][e]=$e.NULL_VALUE}static depthAtLocation(t){return t===Ht.EXTERIOR?0:t===Ht.INTERIOR?1:$e.NULL_VALUE}getDepth(t,e){return this._depth[t][e]}setDepth(t,e,s){this._depth[t][e]=s}isNull(){if(0===arguments.length){for(let t=0;t<2;t++)for(let e=0;e<3;e++)if(this._depth[t][e]!==$e.NULL_VALUE)return!1;return!0}if(1===arguments.length){const t=arguments[0];return this._depth[t][1]===$e.NULL_VALUE}if(2===arguments.length){const t=arguments[0],e=arguments[1];return this._depth[t][e]===$e.NULL_VALUE}}normalize(){for(let t=0;t<2;t++)if(!this.isNull(t)){let e=this._depth[t][1];this._depth[t][2]<e&&(e=this._depth[t][2]),e<0&&(e=0);for(let s=1;s<3;s++){let i=0;this._depth[t][s]>e&&(i=1),this._depth[t][s]=i}}}getDelta(t){return this._depth[t][Qt.RIGHT]-this._depth[t][Qt.LEFT]}getLocation(t,e){return this._depth[t][e]<=0?Ht.EXTERIOR:Ht.INTERIOR}toString(){return"A: "+this._depth[0][1]+","+this._depth[0][2]+" B: "+this._depth[1][1]+","+this._depth[1][2]}add(){if(1===arguments.length){const t=arguments[0];for(let e=0;e<2;e++)for(let s=1;s<3;s++){const i=t.getLocation(e,s);i!==Ht.EXTERIOR&&i!==Ht.INTERIOR||(this.isNull(e,s)?this._depth[e][s]=$e.depthAtLocation(i):this._depth[e][s]+=$e.depthAtLocation(i))}}else if(3===arguments.length){const t=arguments[0],e=arguments[1];arguments[2]===Ht.INTERIOR&&this._depth[t][e]++}}}$e.NULL_VALUE=-1;class ts{constructor(){ts.constructor_.apply(this,arguments)}static constructor_(){if(this._data=null,this._size=0,0===arguments.length)ts.constructor_.call(this,10);else if(1===arguments.length){const t=arguments[0];this._data=new Array(t).fill(null)}}size(){return this._size}addAll(t){return null===t||0===t.length?null:(this.ensureCapacity(this._size+t.length),V.A.arraycopy(t,0,this._data,this._size,t.length),void(this._size+=t.length))}ensureCapacity(t){if(t<=this._data.length)return null;const e=Math.max(t,2*this._data.length);this._data=ft.A.copyOf(this._data,e)}toArray(){const t=new Array(this._size).fill(null);return V.A.arraycopy(this._data,0,t,0,this._size),t}add(t){this.ensureCapacity(this._size+1),this._data[this._size]=t,++this._size}}class es{static toIntArray(t){const e=new Array(t.size()).fill(null);for(let s=0;s<e.length;s++)e[s]=t.get(s).intValue();return e}findChainEnd(t,e){const s=Pt.quadrant(t[e],t[e+1]);let i=e+1;for(;i<t.length&&Pt.quadrant(t[i-1],t[i])===s;)i++;return i-1}OLDgetChainStartIndices(t){let e=0;const s=new g.A;s.add(e);do{const i=this.findChainEnd(t,e);s.add(i),e=i}while(e<t.length-1);return es.toIntArray(s)}getChainStartIndices(t){let e=0;const s=new ts(Math.trunc(t.length/2));s.add(e);do{const i=this.findChainEnd(t,e);s.add(i),e=i}while(e<t.length-1);return s.toArray()}}class ss{constructor(){ss.constructor_.apply(this,arguments)}static constructor_(){this.e=null,this.pts=null,this.startIndex=null;const t=arguments[0];this.e=t,this.pts=t.getCoordinates();const e=new es;this.startIndex=e.getChainStartIndices(this.pts)}getCoordinates(){return this.pts}getMaxX(t){const e=this.pts[this.startIndex[t]].x,s=this.pts[this.startIndex[t+1]].x;return e>s?e:s}getMinX(t){const e=this.pts[this.startIndex[t]].x,s=this.pts[this.startIndex[t+1]].x;return e<s?e:s}computeIntersectsForChain(){if(4===arguments.length){const t=arguments[0],e=arguments[1],s=arguments[2],i=arguments[3];this.computeIntersectsForChain(this.startIndex[t],this.startIndex[t+1],e,e.startIndex[s],e.startIndex[s+1],i)}else if(6===arguments.length){const t=arguments[0],e=arguments[1],s=arguments[2],i=arguments[3],n=arguments[4],r=arguments[5];if(e-t==1&&n-i==1)return r.addIntersections(this.e,t,s.e,i),null;if(!this.overlaps(t,e,s,i,n))return null;const o=Math.trunc((t+e)/2),a=Math.trunc((i+n)/2);t<o&&(i<a&&this.computeIntersectsForChain(t,o,s,i,a,r),a<n&&this.computeIntersectsForChain(t,o,s,a,n,r)),o<e&&(i<a&&this.computeIntersectsForChain(o,e,s,i,a,r),a<n&&this.computeIntersectsForChain(o,e,s,a,n,r))}}overlaps(t,e,s,i,n){return $.A.intersects(this.pts[t],this.pts[e],s.pts[i],s.pts[n])}getStartIndexes(){return this.startIndex}computeIntersects(t,e){for(let s=0;s<this.startIndex.length-1;s++)for(let i=0;i<t.startIndex.length-1;i++)this.computeIntersectsForChain(s,t,i,e)}}class is extends he{constructor(){super(),is.constructor_.apply(this,arguments)}static constructor_(){if(this.pts=null,this._env=null,this.eiList=new We(this),this._name=null,this._mce=null,this._isIsolated=!0,this._depth=new $e,this._depthDelta=0,1===arguments.length){const t=arguments[0];is.constructor_.call(this,t,null)}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this.pts=t,this._label=e}}static updateIM(){if(!(2===arguments.length&&arguments[1]instanceof Ze&&arguments[0]instanceof ae))return super.updateIM.apply(this,arguments);{const t=arguments[0],e=arguments[1];e.setAtLeastIfValid(t.getLocation(0,Qt.ON),t.getLocation(1,Qt.ON),1),t.isArea()&&(e.setAtLeastIfValid(t.getLocation(0,Qt.LEFT),t.getLocation(1,Qt.LEFT),2),e.setAtLeastIfValid(t.getLocation(0,Qt.RIGHT),t.getLocation(1,Qt.RIGHT),2))}}getDepth(){return this._depth}getCollapsedEdge(){const t=new Array(2).fill(null);return t[0]=this.pts[0],t[1]=this.pts[1],new is(t,ae.toLineLabel(this._label))}setIsolated(t){this._isIsolated=t}setName(t){this._name=t}equals(t){if(!(t instanceof is))return!1;const e=t;if(this.pts.length!==e.pts.length)return!1;let s=!0,i=!0,n=this.pts.length;for(let t=0;t<this.pts.length;t++)if(this.pts[t].equals2D(e.pts[t])||(s=!1),this.pts[t].equals2D(e.pts[--n])||(i=!1),!s&&!i)return!1;return!0}getCoordinate(){if(0===arguments.length)return this.pts.length>0?this.pts[0]:null;if(1===arguments.length){const t=arguments[0];return this.pts[t]}}isClosed(){return this.pts[0].equals(this.pts[this.pts.length-1])}getMaximumSegmentIndex(){return this.pts.length-1}setDepthDelta(t){this._depthDelta=t}getEdgeIntersectionList(){return this.eiList}addIntersections(t,e,s){for(let i=0;i<t.getIntersectionNum();i++)this.addIntersection(t,e,s,i)}isIsolated(){return this._isIsolated}getCoordinates(){return this.pts}print(t){t.print("edge "+this._name+": "),t.print("LINESTRING (");for(let e=0;e<this.pts.length;e++)e>0&&t.print(","),t.print(this.pts[e].x+" "+this.pts[e].y);t.print(")  "+this._label+" "+this._depthDelta)}computeIM(t){is.updateIM(this._label,t)}isCollapsed(){return!!this._label.isArea()&&3===this.pts.length&&!!this.pts[0].equals(this.pts[2])}getDepthDelta(){return this._depthDelta}getNumPoints(){return this.pts.length}printReverse(t){t.print("edge "+this._name+": ");for(let e=this.pts.length-1;e>=0;e--)t.print(this.pts[e]+" ");t.println("")}getMonotoneChainEdge(){return null===this._mce&&(this._mce=new ss(this)),this._mce}getEnvelope(){if(null===this._env){this._env=new $.A;for(let t=0;t<this.pts.length;t++)this._env.expandToInclude(this.pts[t])}return this._env}addIntersection(t,e,s,i){const n=new r.A(t.getIntersection(i));let o=e,a=t.getEdgeDistance(s,i);const h=o+1;if(h<this.pts.length){const t=this.pts[h];n.equals2D(t)&&(o=h,a=0)}this.eiList.add(n,o,a)}toString(){const t=new rt.A;t.append("edge "+this._name+": "),t.append("LINESTRING (");for(let e=0;e<this.pts.length;e++)e>0&&t.append(","),t.append(this.pts[e].x+" "+this.pts[e].y);return t.append(")  "+this._label+" "+this._depthDelta),t.toString()}isPointwiseEqual(t){if(this.pts.length!==t.pts.length)return!1;for(let e=0;e<this.pts.length;e++)if(!this.pts[e].equals2D(t.pts[e]))return!1;return!0}}class ns{constructor(){ns.constructor_.apply(this,arguments)}static constructor_(){this._bufParams=null,this._workingPrecisionModel=null,this._workingNoder=null,this._geomFact=null,this._graph=null,this._edgeList=new He;const t=arguments[0];this._bufParams=t}static convertSegStrings(t){const e=new L.A,s=new g.A;for(;t.hasNext();){const i=t.next(),n=e.createLineString(i.getCoordinates());s.add(n)}return e.buildGeometry(s)}static depthDelta(t){const e=t.getLocation(0,Qt.LEFT),s=t.getLocation(0,Qt.RIGHT);return e===Ht.INTERIOR&&s===Ht.EXTERIOR?1:e===Ht.EXTERIOR&&s===Ht.INTERIOR?-1:0}createEmptyResultGeometry(){return this._geomFact.createPolygon()}getNoder(t){if(null!==this._workingNoder)return this._workingNoder;const e=new vt,s=new at;return s.setPrecisionModel(t),e.setSegmentIntersector(new Qe(s)),e}buffer(t,e){let s=this._workingPrecisionModel;null===s&&(s=t.getPrecisionModel()),this._geomFact=t.getFactory();const i=new ne(s,this._bufParams),n=new Fe(t,e,i).getCurves();if(n.size()<=0)return this.createEmptyResultGeometry();this.computeNodedEdges(n,s),this._graph=new _e(new Ye),this._graph.addEdges(this._edgeList.getEdges());const r=this.createSubgraphs(this._graph),o=new ye(this._geomFact);this.buildSubgraphs(r,o);const a=o.getPolygons();return a.size()<=0?this.createEmptyResultGeometry():this._geomFact.buildGeometry(a)}computeNodedEdges(t,e){const s=this.getNoder(e);s.computeNodes(t);for(let t=s.getNodedSubstrings().iterator();t.hasNext();){const e=t.next(),s=e.getCoordinates();if(2===s.length&&s[0].equals2D(s[1]))continue;const i=e.getData(),n=new is(e.getCoordinates(),new ae(i));this.insertUniqueEdge(n)}}setNoder(t){this._workingNoder=t}setWorkingPrecisionModel(t){this._workingPrecisionModel=t}insertUniqueEdge(t){const e=this._edgeList.findEqualEdge(t);if(null!==e){const s=e.getLabel();let i=t.getLabel();e.isPointwiseEqual(t)||(i=new ae(t.getLabel()),i.flip()),s.merge(i);const n=ns.depthDelta(i),r=e.getDepthDelta()+n;e.setDepthDelta(r)}else this._edgeList.add(t),t.setDepthDelta(ns.depthDelta(t.getLabel()))}buildSubgraphs(t,e){const s=new g.A;for(let i=t.iterator();i.hasNext();){const t=i.next(),n=t.getRightmostCoordinate(),r=new Ne(s).getDepth(n);t.computeDepth(r),t.findResultEdges(),s.add(t),e.add(t.getDirectedEdges(),t.getNodes())}}createSubgraphs(t){const e=new g.A;for(let s=t.getNodes().iterator();s.hasNext();){const t=s.next();if(!t.isVisited()){const s=new $t;s.create(t),e.add(s)}}return It.sort(e,It.reverseOrder()),e}}class rs{constructor(){rs.constructor_.apply(this,arguments)}static constructor_(){if(this._argGeom=null,this._distance=null,this._bufParams=new i,this._resultGeometry=null,this._saveException=null,1===arguments.length){const t=arguments[0];this._argGeom=t}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this._argGeom=t,this._bufParams=e}}static bufferOp(){if(2===arguments.length){const t=arguments[1];return new rs(arguments[0]).getResultGeometry(t)}if(3===arguments.length){if(Number.isInteger(arguments[2])&&arguments[0]instanceof Vt.A&&"number"==typeof arguments[1]){const t=arguments[1],e=arguments[2],s=new rs(arguments[0]);return s.setQuadrantSegments(e),s.getResultGeometry(t)}if(arguments[2]instanceof i&&arguments[0]instanceof Vt.A&&"number"==typeof arguments[1]){const t=arguments[1];return new rs(arguments[0],arguments[2]).getResultGeometry(t)}}else if(4===arguments.length){const t=arguments[1],e=arguments[2],s=arguments[3],i=new rs(arguments[0]);return i.setQuadrantSegments(e),i.setEndCapStyle(s),i.getResultGeometry(t)}}static precisionScaleFactor(t,e,s){const i=t.getEnvelopeInternal(),n=J.A.max(Math.abs(i.getMaxX()),Math.abs(i.getMaxY()),Math.abs(i.getMinX()),Math.abs(i.getMinY()))+2*(e>0?e:0),r=s-Math.trunc(Math.log(n)/Math.log(10)+1);return Math.pow(10,r)}bufferFixedPrecision(t){const e=new W(new Yt(new Z.A(1)),t.getScale()),s=new ns(this._bufParams);s.setWorkingPrecisionModel(t),s.setNoder(e),this._resultGeometry=s.buffer(this._argGeom,this._distance)}bufferReducedPrecision(){if(0===arguments.length){for(let t=rs.MAX_PRECISION_DIGITS;t>=0;t--){try{this.bufferReducedPrecision(t)}catch(t){if(!(t instanceof K))throw t;this._saveException=t}if(null!==this._resultGeometry)return null}throw this._saveException}if(1===arguments.length){const t=arguments[0],e=rs.precisionScaleFactor(this._argGeom,this._distance,t),s=new Z.A(e);this.bufferFixedPrecision(s)}}bufferOriginalPrecision(){try{const t=new ns(this._bufParams);this._resultGeometry=t.buffer(this._argGeom,this._distance)}catch(t){if(!(t instanceof A.A))throw t;this._saveException=t}}getResultGeometry(t){return this._distance=t,this.computeGeometry(),this._resultGeometry}setEndCapStyle(t){this._bufParams.setEndCapStyle(t)}computeGeometry(){if(this.bufferOriginalPrecision(),null!==this._resultGeometry)return null;const t=this._argGeom.getFactory().getPrecisionModel();t.getType()===Z.A.FIXED?this.bufferFixedPrecision(t):this.bufferReducedPrecision()}setQuadrantSegments(t){this._bufParams.setQuadrantSegments(t)}}rs.CAP_ROUND=i.CAP_ROUND,rs.CAP_BUTT=i.CAP_FLAT,rs.CAP_FLAT=i.CAP_FLAT,rs.CAP_SQUARE=i.CAP_SQUARE,rs.MAX_PRECISION_DIGITS=12}}]);
//# sourceMappingURL=BufferOp.bundle.js.map